!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(S,e){"use strict";function m(e){return null!=e&&e===e.window}var t=[],n=Object.getPrototypeOf,o=t.slice,g=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},l=t.push,a=t.indexOf,i={},s=i.toString,v=i.hasOwnProperty,r=v.toString,c=r.call(Object),y={},b=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},E=S.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function w(e,t,i){var n,a,s=(i=i||E).createElement("script");if(s.text=e,t)for(n in u)(a=t[n]||t.getAttribute&&t.getAttribute(n))&&s.setAttribute(n,a);i.head.appendChild(s).parentNode.removeChild(s)}function x(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?i[s.call(e)]||"object":typeof e}var h="3.5.1",T=function(e,t){return new T.fn.init(e,t)};function d(e){var t=!!e&&"length"in e&&e.length,i=x(e);return!b(e)&&!m(e)&&("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e)}T.fn=T.prototype={jquery:h,constructor:T,length:0,toArray:function(){return o.call(this)},get:function(e){return null==e?o.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=T.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return T.each(this,e)},map:function(i){return this.pushStack(T.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(T.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(T.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(0<=i&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},T.extend=T.fn.extend=function(){var e,t,i,n,a,s,r=arguments[0]||{},o=1,l=arguments.length,c=!1;for("boolean"==typeof r&&(c=r,r=arguments[o]||{},o++),"object"==typeof r||b(r)||(r={}),o===l&&(r=this,o--);o<l;o++)if(null!=(e=arguments[o]))for(t in e)n=e[t],"__proto__"!==t&&r!==n&&(c&&n&&(T.isPlainObject(n)||(a=Array.isArray(n)))?(i=r[t],s=a&&!Array.isArray(i)?[]:a||T.isPlainObject(i)?i:{},a=!1,r[t]=T.extend(c,s,n)):void 0!==n&&(r[t]=n));return r},T.extend({expando:"jQuery"+(h+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==s.call(e))&&(!(t=n(e))||"function"==typeof(i=v.call(t,"constructor")&&t.constructor)&&r.call(i)===c)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,i){w(e,{nonce:t&&t.nonce},i)},each:function(e,t){var i,n=0;if(d(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},makeArray:function(e,t){var i=t||[];return null!=e&&(d(Object(e))?T.merge(i,"string"==typeof e?[e]:e):l.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:a.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,a=e.length;n<i;n++)e[a++]=t[n];return e.length=a,e},grep:function(e,t,i){for(var n=[],a=0,s=e.length,r=!i;a<s;a++)!t(e[a],a)!=r&&n.push(e[a]);return n},map:function(e,t,i){var n,a,s=0,r=[];if(d(e))for(n=e.length;s<n;s++)null!=(a=t(e[s],s,i))&&r.push(a);else for(s in e)null!=(a=t(e[s],s,i))&&r.push(a);return g(r)},guid:1,support:y}),"function"==typeof Symbol&&(T.fn[Symbol.iterator]=t[Symbol.iterator]),T.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){i["[object "+t+"]"]=t.toLowerCase()});var p=function(i){function h(e,t){var i="0x"+e.slice(1)-65536;return t||(i<0?String.fromCharCode(65536+i):String.fromCharCode(i>>10|55296,1023&i|56320))}function a(){C()}var e,p,w,s,r,f,d,m,x,l,c,C,S,o,E,g,u,v,y,T="sizzle"+1*new Date,b=i.document,A=0,n=0,M=le(),k=le(),O=le(),D=le(),I=function(e,t){return e===t&&(c=!0),0},P={}.hasOwnProperty,t=[],N=t.pop,L=t.push,B=t.push,R=t.slice,z=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},F="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",j="[\\x20\\t\\r\\n\\f]",H="(?:\\\\[\\da-fA-F]{1,6}"+j+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",$="\\["+j+"*("+H+")(?:"+j+"*([*^$|!~]?=)"+j+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+H+"))|)"+j+"*\\]",_=":("+H+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+$+")*)|.*)\\)|)",q=new RegExp(j+"+","g"),G=new RegExp("^"+j+"+|((?:^|[^\\\\])(?:\\\\.)*)"+j+"+$","g"),W=new RegExp("^"+j+"*,"+j+"*"),X=new RegExp("^"+j+"*([>+~]|"+j+")"+j+"*"),V=new RegExp(j+"|>"),U=new RegExp(_),Y=new RegExp("^"+H+"$"),K={ID:new RegExp("^#("+H+")"),CLASS:new RegExp("^\\.("+H+")"),TAG:new RegExp("^("+H+"|[*])"),ATTR:new RegExp("^"+$),PSEUDO:new RegExp("^"+_),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+j+"*(even|odd|(([+-]|)(\\d*)n|)"+j+"*(?:([+-]|)"+j+"*(\\d+)|))"+j+"*\\)|)","i"),bool:new RegExp("^(?:"+F+")$","i"),needsContext:new RegExp("^"+j+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+j+"*((?:-\\d)?\\d*)"+j+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,Z=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ie=/[+~]/,ne=new RegExp("\\\\[\\da-fA-F]{1,6}"+j+"?|\\\\([^\\r\\n\\f])","g"),ae=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,se=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},re=we(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{B.apply(t=R.call(b.childNodes),b.childNodes),t[b.childNodes.length].nodeType}catch(e){B={apply:t.length?function(e,t){L.apply(e,R.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}function oe(t,e,i,n){var a,s,r,o,l,c,u,h=e&&e.ownerDocument,d=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==d&&9!==d&&11!==d)return i;if(!n&&(C(e),e=e||S,E)){if(11!==d&&(l=te.exec(t)))if(a=l[1]){if(9===d){if(!(r=e.getElementById(a)))return i;if(r.id===a)return i.push(r),i}else if(h&&(r=h.getElementById(a))&&y(e,r)&&r.id===a)return i.push(r),i}else{if(l[2])return B.apply(i,e.getElementsByTagName(t)),i;if((a=l[3])&&p.getElementsByClassName&&e.getElementsByClassName)return B.apply(i,e.getElementsByClassName(a)),i}if(p.qsa&&!D[t+" "]&&(!g||!g.test(t))&&(1!==d||"object"!==e.nodeName.toLowerCase())){if(u=t,h=e,1===d&&(V.test(t)||X.test(t))){for((h=ie.test(t)&&ve(e.parentNode)||e)===e&&p.scope||((o=e.getAttribute("id"))?o=o.replace(ae,se):e.setAttribute("id",o=T)),s=(c=f(t)).length;s--;)c[s]=(o?"#"+o:":scope")+" "+be(c[s]);u=c.join(",")}try{return B.apply(i,h.querySelectorAll(u)),i}catch(e){D(t,!0)}finally{o===T&&e.removeAttribute("id")}}}return m(t.replace(G,"$1"),e,i,n)}function le(){var n=[];return function e(t,i){return n.push(t+" ")>w.cacheLength&&delete e[n.shift()],e[t+" "]=i}}function ce(e){return e[T]=!0,e}function ue(e){var t=S.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function he(e,t){for(var i=e.split("|"),n=i.length;n--;)w.attrHandle[i[n]]=t}function de(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function pe(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function fe(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}function me(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&re(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ge(r){return ce(function(s){return s=+s,ce(function(e,t){for(var i,n=r([],e.length,s),a=n.length;a--;)e[i=n[a]]&&(e[i]=!(t[i]=e[i]))})})}function ve(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in p=oe.support={},r=oe.isXML=function(e){var t=e.namespaceURI,i=(e.ownerDocument||e).documentElement;return!Q.test(t||i&&i.nodeName||"HTML")},C=oe.setDocument=function(e){var t,i,n=e?e.ownerDocument||e:b;return n!=S&&9===n.nodeType&&n.documentElement&&(o=(S=n).documentElement,E=!r(S),b!=S&&(i=S.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",a,!1):i.attachEvent&&i.attachEvent("onunload",a)),p.scope=ue(function(e){return o.appendChild(e).appendChild(S.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),p.attributes=ue(function(e){return e.className="i",!e.getAttribute("className")}),p.getElementsByTagName=ue(function(e){return e.appendChild(S.createComment("")),!e.getElementsByTagName("*").length}),p.getElementsByClassName=ee.test(S.getElementsByClassName),p.getById=ue(function(e){return o.appendChild(e).id=T,!S.getElementsByName||!S.getElementsByName(T).length}),p.getById?(w.filter.ID=function(e){var t=e.replace(ne,h);return function(e){return e.getAttribute("id")===t}},w.find.ID=function(e,t){if(void 0!==t.getElementById&&E){var i=t.getElementById(e);return i?[i]:[]}}):(w.filter.ID=function(e){var i=e.replace(ne,h);return function(e){var t=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===i}},w.find.ID=function(e,t){if(void 0!==t.getElementById&&E){var i,n,a,s=t.getElementById(e);if(s){if((i=s.getAttributeNode("id"))&&i.value===e)return[s];for(a=t.getElementsByName(e),n=0;s=a[n++];)if((i=s.getAttributeNode("id"))&&i.value===e)return[s]}return[]}}),w.find.TAG=p.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):p.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],a=0,s=t.getElementsByTagName(e);if("*"!==e)return s;for(;i=s[a++];)1===i.nodeType&&n.push(i);return n},w.find.CLASS=p.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&E)return t.getElementsByClassName(e)},u=[],g=[],(p.qsa=ee.test(S.querySelectorAll))&&(ue(function(e){var t;o.appendChild(e).innerHTML="<a id='"+T+"'></a><select id='"+T+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&g.push("[*^$]="+j+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||g.push("\\["+j+"*(?:value|"+F+")"),e.querySelectorAll("[id~="+T+"-]").length||g.push("~="),(t=S.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||g.push("\\["+j+"*name"+j+"*="+j+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||g.push(":checked"),e.querySelectorAll("a#"+T+"+*").length||g.push(".#.+[+~]"),e.querySelectorAll("\\\f"),g.push("[\\r\\n\\f]")}),ue(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=S.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&g.push("name"+j+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&g.push(":enabled",":disabled"),o.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&g.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),g.push(",.*:")})),(p.matchesSelector=ee.test(v=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ue(function(e){p.disconnectedMatch=v.call(e,"*"),v.call(e,"[s!='']:x"),u.push("!=",_)}),g=g.length&&new RegExp(g.join("|")),u=u.length&&new RegExp(u.join("|")),t=ee.test(o.compareDocumentPosition),y=t||ee.test(o.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},I=t?function(e,t){if(e===t)return c=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!p.sortDetached&&t.compareDocumentPosition(e)===i?e==S||e.ownerDocument==b&&y(b,e)?-1:t==S||t.ownerDocument==b&&y(b,t)?1:l?z(l,e)-z(l,t):0:4&i?-1:1)}:function(e,t){if(e===t)return c=!0,0;var i,n=0,a=e.parentNode,s=t.parentNode,r=[e],o=[t];if(!a||!s)return e==S?-1:t==S?1:a?-1:s?1:l?z(l,e)-z(l,t):0;if(a===s)return de(e,t);for(i=e;i=i.parentNode;)r.unshift(i);for(i=t;i=i.parentNode;)o.unshift(i);for(;r[n]===o[n];)n++;return n?de(r[n],o[n]):r[n]==b?-1:o[n]==b?1:0}),S},oe.matches=function(e,t){return oe(e,null,null,t)},oe.matchesSelector=function(e,t){if(C(e),p.matchesSelector&&E&&!D[t+" "]&&(!u||!u.test(t))&&(!g||!g.test(t)))try{var i=v.call(e,t);if(i||p.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){D(t,!0)}return 0<oe(t,S,null,[e]).length},oe.contains=function(e,t){return(e.ownerDocument||e)!=S&&C(e),y(e,t)},oe.attr=function(e,t){(e.ownerDocument||e)!=S&&C(e);var i=w.attrHandle[t.toLowerCase()],n=i&&P.call(w.attrHandle,t.toLowerCase())?i(e,t,!E):void 0;return void 0!==n?n:p.attributes||!E?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},oe.escape=function(e){return(e+"").replace(ae,se)},oe.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},oe.uniqueSort=function(e){var t,i=[],n=0,a=0;if(c=!p.detectDuplicates,l=!p.sortStable&&e.slice(0),e.sort(I),c){for(;t=e[a++];)t===e[a]&&(n=i.push(a));for(;n--;)e.splice(i[n],1)}return l=null,e},s=oe.getText=function(e){var t,i="",n=0,a=e.nodeType;if(a){if(1===a||9===a||11===a){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=s(e)}else if(3===a||4===a)return e.nodeValue}else for(;t=e[n++];)i+=s(t);return i},(w=oe.selectors={cacheLength:50,createPseudo:ce,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ne,h),e[3]=(e[3]||e[4]||e[5]||"").replace(ne,h),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||oe.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&oe.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&U.test(i)&&(t=f(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ne,h).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=M[e+" "];return t||(t=new RegExp("(^|"+j+")"+e+"("+j+"|$)"))&&M(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(i,n,a){return function(e){var t=oe.attr(e,i);return null==t?"!="===n:!n||(t+="","="===n?t===a:"!="===n?t!==a:"^="===n?a&&0===t.indexOf(a):"*="===n?a&&-1<t.indexOf(a):"$="===n?a&&t.slice(-a.length)===a:"~="===n?-1<(" "+t.replace(q," ")+" ").indexOf(a):"|="===n&&(t===a||t.slice(0,a.length+1)===a+"-"))}},CHILD:function(f,e,t,m,g){var v="nth"!==f.slice(0,3),y="last"!==f.slice(-4),b="of-type"===e;return 1===m&&0===g?function(e){return!!e.parentNode}:function(e,t,i){var n,a,s,r,o,l,c=v!=y?"nextSibling":"previousSibling",u=e.parentNode,h=b&&e.nodeName.toLowerCase(),d=!i&&!b,p=!1;if(u){if(v){for(;c;){for(r=e;r=r[c];)if(b?r.nodeName.toLowerCase()===h:1===r.nodeType)return!1;l=c="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?u.firstChild:u.lastChild],y&&d){for(p=(o=(n=(a=(s=(r=u)[T]||(r[T]={}))[r.uniqueID]||(s[r.uniqueID]={}))[f]||[])[0]===A&&n[1])&&n[2],r=o&&u.childNodes[o];r=++o&&r&&r[c]||(p=o=0)||l.pop();)if(1===r.nodeType&&++p&&r===e){a[f]=[A,o,p];break}}else if(d&&(p=o=(n=(a=(s=(r=e)[T]||(r[T]={}))[r.uniqueID]||(s[r.uniqueID]={}))[f]||[])[0]===A&&n[1]),!1===p)for(;(r=++o&&r&&r[c]||(p=o=0)||l.pop())&&((b?r.nodeName.toLowerCase()!==h:1!==r.nodeType)||!++p||(d&&((a=(s=r[T]||(r[T]={}))[r.uniqueID]||(s[r.uniqueID]={}))[f]=[A,p]),r!==e)););return(p-=g)===m||p%m==0&&0<=p/m}}},PSEUDO:function(e,s){var t,r=w.pseudos[e]||w.setFilters[e.toLowerCase()]||oe.error("unsupported pseudo: "+e);return r[T]?r(s):1<r.length?(t=[e,e,"",s],w.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,t){for(var i,n=r(e,s),a=n.length;a--;)e[i=z(e,n[a])]=!(t[i]=n[a])}):function(e){return r(e,0,t)}):r}},pseudos:{not:ce(function(e){var n=[],a=[],o=d(e.replace(G,"$1"));return o[T]?ce(function(e,t,i,n){for(var a,s=o(e,null,n,[]),r=e.length;r--;)(a=s[r])&&(e[r]=!(t[r]=a))}):function(e,t,i){return n[0]=e,o(n,null,i,a),n[0]=null,!a.pop()}}),has:ce(function(t){return function(e){return 0<oe(t,e).length}}),contains:ce(function(t){return t=t.replace(ne,h),function(e){return-1<(e.textContent||s(e)).indexOf(t)}}),lang:ce(function(i){return Y.test(i||"")||oe.error("unsupported lang: "+i),i=i.replace(ne,h).toLowerCase(),function(e){var t;do{if(t=E?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===o},focus:function(e){return e===S.activeElement&&(!S.hasFocus||S.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:me(!1),disabled:me(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!w.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Z.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ge(function(){return[0]}),last:ge(function(e,t){return[t-1]}),eq:ge(function(e,t,i){return[i<0?i+t:i]}),even:ge(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:ge(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:ge(function(e,t,i){for(var n=i<0?i+t:t<i?t:i;0<=--n;)e.push(n);return e}),gt:ge(function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e})}}).pseudos.nth=w.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[e]=pe(e);for(e in{submit:!0,reset:!0})w.pseudos[e]=fe(e);function ye(){}function be(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function we(o,e,t){var l=e.dir,c=e.next,u=c||l,h=t&&"parentNode"===u,d=n++;return e.first?function(e,t,i){for(;e=e[l];)if(1===e.nodeType||h)return o(e,t,i);return!1}:function(e,t,i){var n,a,s,r=[A,d];if(i){for(;e=e[l];)if((1===e.nodeType||h)&&o(e,t,i))return!0}else for(;e=e[l];)if(1===e.nodeType||h)if(a=(s=e[T]||(e[T]={}))[e.uniqueID]||(s[e.uniqueID]={}),c&&c===e.nodeName.toLowerCase())e=e[l]||e;else{if((n=a[u])&&n[0]===A&&n[1]===d)return r[2]=n[2];if((a[u]=r)[2]=o(e,t,i))return!0}return!1}}function xe(a){return 1<a.length?function(e,t,i){for(var n=a.length;n--;)if(!a[n](e,t,i))return!1;return!0}:a[0]}function Ce(e,t,i,n,a){for(var s,r=[],o=0,l=e.length,c=null!=t;o<l;o++)(s=e[o])&&(i&&!i(s,n,a)||(r.push(s),c&&t.push(o)));return r}function Se(p,f,m,g,v,e){return g&&!g[T]&&(g=Se(g)),v&&!v[T]&&(v=Se(v,e)),ce(function(e,t,i,n){var a,s,r,o=[],l=[],c=t.length,u=e||function(e,t,i){for(var n=0,a=t.length;n<a;n++)oe(e,t[n],i);return i}(f||"*",i.nodeType?[i]:i,[]),h=!p||!e&&f?u:Ce(u,o,p,i,n),d=m?v||(e?p:c||g)?[]:t:h;if(m&&m(h,d,i,n),g)for(a=Ce(d,l),g(a,[],i,n),s=a.length;s--;)(r=a[s])&&(d[l[s]]=!(h[l[s]]=r));if(e){if(v||p){if(v){for(a=[],s=d.length;s--;)(r=d[s])&&a.push(h[s]=r);v(null,d=[],a,n)}for(s=d.length;s--;)(r=d[s])&&-1<(a=v?z(e,r):o[s])&&(e[a]=!(t[a]=r))}}else d=Ce(d===t?d.splice(c,d.length):d),v?v(null,t,d,n):B.apply(t,d)})}function Ee(e){for(var a,t,i,n=e.length,s=w.relative[e[0].type],r=s||w.relative[" "],o=s?1:0,l=we(function(e){return e===a},r,!0),c=we(function(e){return-1<z(a,e)},r,!0),u=[function(e,t,i){var n=!s&&(i||t!==x)||((a=t).nodeType?l(e,t,i):c(e,t,i));return a=null,n}];o<n;o++)if(t=w.relative[e[o].type])u=[we(xe(u),t)];else{if((t=w.filter[e[o].type].apply(null,e[o].matches))[T]){for(i=++o;i<n&&!w.relative[e[i].type];i++);return Se(1<o&&xe(u),1<o&&be(e.slice(0,o-1).concat({value:" "===e[o-2].type?"*":""})).replace(G,"$1"),t,o<i&&Ee(e.slice(o,i)),i<n&&Ee(e=e.slice(i)),i<n&&be(e))}u.push(t)}return xe(u)}function Te(g,v){function e(e,t,i,n,a){var s,r,o,l=0,c="0",u=e&&[],h=[],d=x,p=e||b&&w.find.TAG("*",a),f=A+=null==d?1:Math.random()||.1,m=p.length;for(a&&(x=t==S||t||a);c!==m&&null!=(s=p[c]);c++){if(b&&s){for(r=0,t||s.ownerDocument==S||(C(s),i=!E);o=g[r++];)if(o(s,t||S,i)){n.push(s);break}a&&(A=f)}y&&((s=!o&&s)&&l--,e&&u.push(s))}if(l+=c,y&&c!==l){for(r=0;o=v[r++];)o(u,h,t,i);if(e){if(0<l)for(;c--;)u[c]||h[c]||(h[c]=N.call(n));h=Ce(h)}B.apply(n,h),a&&!e&&0<h.length&&1<l+v.length&&oe.uniqueSort(n)}return a&&(A=f,x=d),u}var y=0<v.length,b=0<g.length;return y?ce(e):e}return ye.prototype=w.filters=w.pseudos,w.setFilters=new ye,f=oe.tokenize=function(e,t){var i,n,a,s,r,o,l,c=k[e+" "];if(c)return t?0:c.slice(0);for(r=e,o=[],l=w.preFilter;r;){for(s in i&&!(n=W.exec(r))||(n&&(r=r.slice(n[0].length)||r),o.push(a=[])),i=!1,(n=X.exec(r))&&(i=n.shift(),a.push({value:i,type:n[0].replace(G," ")}),r=r.slice(i.length)),w.filter)!(n=K[s].exec(r))||l[s]&&!(n=l[s](n))||(i=n.shift(),a.push({value:i,type:s,matches:n}),r=r.slice(i.length));if(!i)break}return t?r.length:r?oe.error(e):k(e,o).slice(0)},d=oe.compile=function(e,t){var i,n=[],a=[],s=O[e+" "];if(!s){for(i=(t=t||f(e)).length;i--;)(s=Ee(t[i]))[T]?n.push(s):a.push(s);(s=O(e,Te(a,n))).selector=e}return s},m=oe.select=function(e,t,i,n){var a,s,r,o,l,c="function"==typeof e&&e,u=!n&&f(e=c.selector||e);if(i=i||[],1===u.length){if(2<(s=u[0]=u[0].slice(0)).length&&"ID"===(r=s[0]).type&&9===t.nodeType&&E&&w.relative[s[1].type]){if(!(t=(w.find.ID(r.matches[0].replace(ne,h),t)||[])[0]))return i;c&&(t=t.parentNode),e=e.slice(s.shift().value.length)}for(a=K.needsContext.test(e)?0:s.length;a--&&(r=s[a],!w.relative[o=r.type]);)if((l=w.find[o])&&(n=l(r.matches[0].replace(ne,h),ie.test(s[0].type)&&ve(t.parentNode)||t))){if(s.splice(a,1),!(e=n.length&&be(s)))return B.apply(i,n),i;break}}return(c||d(e,u))(n,t,!E,i,!t||ie.test(e)&&ve(t.parentNode)||t),i},p.sortStable=T.split("").sort(I).join("")===T,p.detectDuplicates=!!c,C(),p.sortDetached=ue(function(e){return 1&e.compareDocumentPosition(S.createElement("fieldset"))}),ue(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||he("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),p.attributes&&ue(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||he("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ue(function(e){return null==e.getAttribute("disabled")})||he(F,function(e,t,i){var n;if(!i)return!0===e[t]?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),oe}(S);T.find=p,T.expr=p.selectors,T.expr[":"]=T.expr.pseudos,T.uniqueSort=T.unique=p.uniqueSort,T.text=p.getText,T.isXMLDoc=p.isXML,T.contains=p.contains,T.escapeSelector=p.escape;function f(e,t,i){for(var n=[],a=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(a&&T(e).is(i))break;n.push(e)}return n}function C(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}var A=T.expr.match.needsContext;function M(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var k=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function O(e,i,n){return b(i)?T.grep(e,function(e,t){return!!i.call(e,t,e)!==n}):i.nodeType?T.grep(e,function(e){return e===i!==n}):"string"!=typeof i?T.grep(e,function(e){return-1<a.call(i,e)!==n}):T.filter(i,e,n)}T.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?T.find.matchesSelector(n,e)?[n]:[]:T.find.matches(e,T.grep(t,function(e){return 1===e.nodeType}))},T.fn.extend({find:function(e){var t,i,n=this.length,a=this;if("string"!=typeof e)return this.pushStack(T(e).filter(function(){for(t=0;t<n;t++)if(T.contains(a[t],this))return!0}));for(i=this.pushStack([]),t=0;t<n;t++)T.find(e,a[t],i);return 1<n?T.uniqueSort(i):i},filter:function(e){return this.pushStack(O(this,e||[],!1))},not:function(e){return this.pushStack(O(this,e||[],!0))},is:function(e){return!!O(this,"string"==typeof e&&A.test(e)?T(e):e||[],!1).length}});var D,I=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(T.fn.init=function(e,t,i){var n,a;if(!e)return this;if(i=i||D,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==i.ready?i.ready(e):e(T):T.makeArray(e,this);if(!(n="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:I.exec(e))||!n[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof T?t[0]:t,T.merge(this,T.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:E,!0)),k.test(n[1])&&T.isPlainObject(t))for(n in t)b(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return(a=E.getElementById(n[2]))&&(this[0]=a,this.length=1),this}).prototype=T.fn,D=T(E);var P=/^(?:parents|prev(?:Until|All))/,N={children:!0,contents:!0,next:!0,prev:!0};function L(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}T.fn.extend({has:function(e){var t=T(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(T.contains(this,t[e]))return!0})},closest:function(e,t){var i,n=0,a=this.length,s=[],r="string"!=typeof e&&T(e);if(!A.test(e))for(;n<a;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(r?-1<r.index(i):1===i.nodeType&&T.find.matchesSelector(i,e))){s.push(i);break}return this.pushStack(1<s.length?T.uniqueSort(s):s)},index:function(e){return e?"string"==typeof e?a.call(T(e),this[0]):a.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(T.uniqueSort(T.merge(this.get(),T(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),T.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return f(e,"parentNode")},parentsUntil:function(e,t,i){return f(e,"parentNode",i)},next:function(e){return L(e,"nextSibling")},prev:function(e){return L(e,"previousSibling")},nextAll:function(e){return f(e,"nextSibling")},prevAll:function(e){return f(e,"previousSibling")},nextUntil:function(e,t,i){return f(e,"nextSibling",i)},prevUntil:function(e,t,i){return f(e,"previousSibling",i)},siblings:function(e){return C((e.parentNode||{}).firstChild,e)},children:function(e){return C(e.firstChild)},contents:function(e){return null!=e.contentDocument&&n(e.contentDocument)?e.contentDocument:(M(e,"template")&&(e=e.content||e),T.merge([],e.childNodes))}},function(n,a){T.fn[n]=function(e,t){var i=T.map(this,a,e);return"Until"!==n.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=T.filter(t,i)),1<this.length&&(N[n]||T.uniqueSort(i),P.test(n)&&i.reverse()),this.pushStack(i)}});var B=/[^\x20\t\r\n\f]+/g;function R(e){return e}function z(e){throw e}function F(e,t,i,n){var a;try{e&&b(a=e.promise)?a.call(e).done(t).fail(i):e&&b(a=e.then)?a.call(e,t,i):t.apply(void 0,[e].slice(n))}catch(e){i.apply(void 0,[e])}}T.Callbacks=function(n){n="string"==typeof n?function(e){var i={};return T.each(e.match(B)||[],function(e,t){i[t]=!0}),i}(n):T.extend({},n);function i(){for(s=s||n.once,t=a=!0;o.length;l=-1)for(e=o.shift();++l<r.length;)!1===r[l].apply(e[0],e[1])&&n.stopOnFalse&&(l=r.length,e=!1);n.memory||(e=!1),a=!1,s&&(r=e?[]:"")}var a,e,t,s,r=[],o=[],l=-1,c={add:function(){return r&&(e&&!a&&(l=r.length-1,o.push(e)),function i(e){T.each(e,function(e,t){b(t)?n.unique&&c.has(t)||r.push(t):t&&t.length&&"string"!==x(t)&&i(t)})}(arguments),e&&!a&&i()),this},remove:function(){return T.each(arguments,function(e,t){for(var i;-1<(i=T.inArray(t,r,i));)r.splice(i,1),i<=l&&l--}),this},has:function(e){return e?-1<T.inArray(e,r):0<r.length},empty:function(){return r=r&&[],this},disable:function(){return s=o=[],r=e="",this},disabled:function(){return!r},lock:function(){return s=o=[],e||a||(r=e=""),this},locked:function(){return!!s},fireWith:function(e,t){return s||(t=[e,(t=t||[]).slice?t.slice():t],o.push(t),a||i()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!t}};return c},T.extend({Deferred:function(e){var s=[["notify","progress",T.Callbacks("memory"),T.Callbacks("memory"),2],["resolve","done",T.Callbacks("once memory"),T.Callbacks("once memory"),0,"resolved"],["reject","fail",T.Callbacks("once memory"),T.Callbacks("once memory"),1,"rejected"]],a="pending",r={state:function(){return a},always:function(){return o.done(arguments).fail(arguments),this},catch:function(e){return r.then(null,e)},pipe:function(){var a=arguments;return T.Deferred(function(n){T.each(s,function(e,t){var i=b(a[t[4]])&&a[t[4]];o[t[1]](function(){var e=i&&i.apply(this,arguments);e&&b(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[t[0]+"With"](this,i?[e]:arguments)})}),a=null}).promise()},then:function(t,i,n){var l=0;function c(a,s,r,o){return function(){function e(){var e,t;if(!(a<l)){if((e=r.apply(i,n))===s.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,b(t)?o?t.call(e,c(l,s,R,o),c(l,s,z,o)):(l++,t.call(e,c(l,s,R,o),c(l,s,z,o),c(l,s,R,s.notifyWith))):(r!==R&&(i=void 0,n=[e]),(o||s.resolveWith)(i,n))}}var i=this,n=arguments,t=o?e:function(){try{e()}catch(e){T.Deferred.exceptionHook&&T.Deferred.exceptionHook(e,t.stackTrace),l<=a+1&&(r!==z&&(i=void 0,n=[e]),s.rejectWith(i,n))}};a?t():(T.Deferred.getStackHook&&(t.stackTrace=T.Deferred.getStackHook()),S.setTimeout(t))}}return T.Deferred(function(e){s[0][3].add(c(0,e,b(n)?n:R,e.notifyWith)),s[1][3].add(c(0,e,b(t)?t:R)),s[2][3].add(c(0,e,b(i)?i:z))}).promise()},promise:function(e){return null!=e?T.extend(e,r):r}},o={};return T.each(s,function(e,t){var i=t[2],n=t[5];r[t[1]]=i.add,n&&i.add(function(){a=n},s[3-e][2].disable,s[3-e][3].disable,s[0][2].lock,s[0][3].lock),i.add(t[3].fire),o[t[0]]=function(){return o[t[0]+"With"](this===o?void 0:this,arguments),this},o[t[0]+"With"]=i.fireWith}),r.promise(o),e&&e.call(o,o),o},when:function(e){function t(t){return function(e){a[t]=this,s[t]=1<arguments.length?o.call(arguments):e,--i||r.resolveWith(a,s)}}var i=arguments.length,n=i,a=Array(n),s=o.call(arguments),r=T.Deferred();if(i<=1&&(F(e,r.done(t(n)).resolve,r.reject,!i),"pending"===r.state()||b(s[n]&&s[n].then)))return r.then();for(;n--;)F(s[n],t(n),r.reject);return r.promise()}});var j=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;T.Deferred.exceptionHook=function(e,t){S.console&&S.console.warn&&e&&j.test(e.name)&&S.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},T.readyException=function(e){S.setTimeout(function(){throw e})};var H=T.Deferred();function $(){E.removeEventListener("DOMContentLoaded",$),S.removeEventListener("load",$),T.ready()}T.fn.ready=function(e){return H.then(e).catch(function(e){T.readyException(e)}),this},T.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--T.readyWait:T.isReady)||(T.isReady=!0)!==e&&0<--T.readyWait||H.resolveWith(E,[T])}}),T.ready.then=H.then,"complete"===E.readyState||"loading"!==E.readyState&&!E.documentElement.doScroll?S.setTimeout(T.ready):(E.addEventListener("DOMContentLoaded",$),S.addEventListener("load",$));var _=function(e,t,i,n,a,s,r){var o=0,l=e.length,c=null==i;if("object"===x(i))for(o in a=!0,i)_(e,t,o,i[o],!0,s,r);else if(void 0!==n&&(a=!0,b(n)||(r=!0),c&&(t=r?(t.call(e,n),null):(c=t,function(e,t,i){return c.call(T(e),i)})),t))for(;o<l;o++)t(e[o],i,r?n:n.call(e[o],o,t(e[o],i)));return a?e:c?t.call(e):l?t(e[0],i):s},q=/^-ms-/,G=/-([a-z])/g;function W(e,t){return t.toUpperCase()}function X(e){return e.replace(q,"ms-").replace(G,W)}function V(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function U(){this.expando=T.expando+U.uid++}U.uid=1,U.prototype={cache:function(e){var t=e[this.expando];return t||(t={},V(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,a=this.cache(e);if("string"==typeof t)a[X(t)]=i;else for(n in t)a[X(n)]=t[n];return a},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){i=(t=Array.isArray(t)?t.map(X):(t=X(t))in n?[t]:t.match(B)||[]).length;for(;i--;)delete n[t[i]]}void 0!==t&&!T.isEmptyObject(n)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!T.isEmptyObject(t)}};var Y=new U,K=new U,Q=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function J(e,t,i){var n;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(n))){try{i=function(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:Q.test(e)?JSON.parse(e):e)}(i)}catch(e){}K.set(e,t,i)}else i=void 0;return i}T.extend({hasData:function(e){return K.hasData(e)||Y.hasData(e)},data:function(e,t,i){return K.access(e,t,i)},removeData:function(e,t){K.remove(e,t)},_data:function(e,t,i){return Y.access(e,t,i)},_removeData:function(e,t){Y.remove(e,t)}}),T.fn.extend({data:function(i,e){var t,n,a,s=this[0],r=s&&s.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){K.set(this,i)}):_(this,function(e){var t;if(s&&void 0===e)return void 0!==(t=K.get(s,i))?t:void 0!==(t=J(s,i))?t:void 0;this.each(function(){K.set(this,i,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(a=K.get(s),1===s.nodeType&&!Y.get(s,"hasDataAttrs"))){for(t=r.length;t--;)r[t]&&0===(n=r[t].name).indexOf("data-")&&(n=X(n.slice(5)),J(s,n,a[n]));Y.set(s,"hasDataAttrs",!0)}return a},removeData:function(e){return this.each(function(){K.remove(this,e)})}}),T.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=Y.get(e,t),i&&(!n||Array.isArray(i)?n=Y.access(e,t,T.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=T.queue(e,t),n=i.length,a=i.shift(),s=T._queueHooks(e,t);"inprogress"===a&&(a=i.shift(),n--),a&&("fx"===t&&i.unshift("inprogress"),delete s.stop,a.call(e,function(){T.dequeue(e,t)},s)),!n&&s&&s.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return Y.get(e,i)||Y.access(e,i,{empty:T.Callbacks("once memory").add(function(){Y.remove(e,[t+"queue",i])})})}}),T.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?T.queue(this[0],t):void 0===i?this:this.each(function(){var e=T.queue(this,t,i);T._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&T.dequeue(this,t)})},dequeue:function(e){return this.each(function(){T.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--a||s.resolveWith(r,[r])}var n,a=1,s=T.Deferred(),r=this,o=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)(n=Y.get(r[o],e+"queueHooks"))&&n.empty&&(a++,n.empty.add(i));return i(),s.promise(t)}});var ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,te=new RegExp("^(?:([+-])=|)("+ee+")([a-z%]*)$","i"),ie=["Top","Right","Bottom","Left"],ne=E.documentElement,ae=function(e){return T.contains(e.ownerDocument,e)},se={composed:!0};ne.getRootNode&&(ae=function(e){return T.contains(e.ownerDocument,e)||e.getRootNode(se)===e.ownerDocument});var re=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&ae(e)&&"none"===T.css(e,"display")};function oe(e,t,i,n){var a,s,r=20,o=n?function(){return n.cur()}:function(){return T.css(e,t,"")},l=o(),c=i&&i[3]||(T.cssNumber[t]?"":"px"),u=e.nodeType&&(T.cssNumber[t]||"px"!==c&&+l)&&te.exec(T.css(e,t));if(u&&u[3]!==c){for(l/=2,c=c||u[3],u=+l||1;r--;)T.style(e,t,u+c),(1-s)*(1-(s=o()/l||.5))<=0&&(r=0),u/=s;u*=2,T.style(e,t,u+c),i=i||[]}return i&&(u=+u||+l||0,a=i[1]?u+(i[1]+1)*i[2]:+i[2],n&&(n.unit=c,n.start=u,n.end=a)),a}var le={};function ce(e,t){for(var i,n,a,s,r,o,l,c=[],u=0,h=e.length;u<h;u++)(n=e[u]).style&&(i=n.style.display,t?("none"===i&&(c[u]=Y.get(n,"display")||null,c[u]||(n.style.display="")),""===n.style.display&&re(n)&&(c[u]=(l=r=s=void 0,r=(a=n).ownerDocument,o=a.nodeName,(l=le[o])||(s=r.body.appendChild(r.createElement(o)),l=T.css(s,"display"),s.parentNode.removeChild(s),"none"===l&&(l="block"),le[o]=l)))):"none"!==i&&(c[u]="none",Y.set(n,"display",i)));for(u=0;u<h;u++)null!=c[u]&&(e[u].style.display=c[u]);return e}T.fn.extend({show:function(){return ce(this,!0)},hide:function(){return ce(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){re(this)?T(this).show():T(this).hide()})}});var ue,he,de=/^(?:checkbox|radio)$/i,pe=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,fe=/^$|^module$|\/(?:java|ecma)script/i;ue=E.createDocumentFragment().appendChild(E.createElement("div")),(he=E.createElement("input")).setAttribute("type","radio"),he.setAttribute("checked","checked"),he.setAttribute("name","t"),ue.appendChild(he),y.checkClone=ue.cloneNode(!0).cloneNode(!0).lastChild.checked,ue.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!ue.cloneNode(!0).lastChild.defaultValue,ue.innerHTML="<option></option>",y.option=!!ue.lastChild;var me={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ge(e,t){var i;return i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&M(e,t)?T.merge([e],i):i}function ve(e,t){for(var i=0,n=e.length;i<n;i++)Y.set(e[i],"globalEval",!t||Y.get(t[i],"globalEval"))}me.tbody=me.tfoot=me.colgroup=me.caption=me.thead,me.th=me.td,y.option||(me.optgroup=me.option=[1,"<select multiple='multiple'>","</select>"]);var ye=/<|&#?\w+;/;function be(e,t,i,n,a){for(var s,r,o,l,c,u,h=t.createDocumentFragment(),d=[],p=0,f=e.length;p<f;p++)if((s=e[p])||0===s)if("object"===x(s))T.merge(d,s.nodeType?[s]:s);else if(ye.test(s)){for(r=r||h.appendChild(t.createElement("div")),o=(pe.exec(s)||["",""])[1].toLowerCase(),l=me[o]||me._default,r.innerHTML=l[1]+T.htmlPrefilter(s)+l[2],u=l[0];u--;)r=r.lastChild;T.merge(d,r.childNodes),(r=h.firstChild).textContent=""}else d.push(t.createTextNode(s));for(h.textContent="",p=0;s=d[p++];)if(n&&-1<T.inArray(s,n))a&&a.push(s);else if(c=ae(s),r=ge(h.appendChild(s),"script"),c&&ve(r),i)for(u=0;s=r[u++];)fe.test(s.type||"")&&i.push(s);return h}var we=/^key/,xe=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ce=/^([^.]*)(?:\.(.+)|)/;function Se(){return!0}function Ee(){return!1}function Te(e,t){return e===function(){try{return E.activeElement}catch(e){}}()==("focus"===t)}function Ae(e,t,i,n,a,s){var r,o;if("object"==typeof t){for(o in"string"!=typeof i&&(n=n||i,i=void 0),t)Ae(e,o,i,n,t[o],s);return e}if(null==n&&null==a?(a=i,n=i=void 0):null==a&&("string"==typeof i?(a=n,n=void 0):(a=n,n=i,i=void 0)),!1===a)a=Ee;else if(!a)return e;return 1===s&&(r=a,(a=function(e){return T().off(e),r.apply(this,arguments)}).guid=r.guid||(r.guid=T.guid++)),e.each(function(){T.event.add(this,t,a,n,i)})}function Me(e,a,s){s?(Y.set(e,a,!1),T.event.add(e,a,{namespace:!1,handler:function(e){var t,i,n=Y.get(this,a);if(1&e.isTrigger&&this[a]){if(n.length)(T.event.special[a]||{}).delegateType&&e.stopPropagation();else if(n=o.call(arguments),Y.set(this,a,n),t=s(this,a),this[a](),n!==(i=Y.get(this,a))||t?Y.set(this,a,!1):i={},n!==i)return e.stopImmediatePropagation(),e.preventDefault(),i.value}else n.length&&(Y.set(this,a,{value:T.event.trigger(T.extend(n[0],T.Event.prototype),n.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,a)&&T.event.add(e,a,Se)}T.event={global:{},add:function(t,e,i,n,a){var s,r,o,l,c,u,h,d,p,f,m,g=Y.get(t);if(V(t))for(i.handler&&(i=(s=i).handler,a=s.selector),a&&T.find.matchesSelector(ne,a),i.guid||(i.guid=T.guid++),(l=g.events)||(l=g.events=Object.create(null)),(r=g.handle)||(r=g.handle=function(e){return void 0!==T&&T.event.triggered!==e.type?T.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(B)||[""]).length;c--;)p=m=(o=Ce.exec(e[c])||[])[1],f=(o[2]||"").split(".").sort(),p&&(h=T.event.special[p]||{},p=(a?h.delegateType:h.bindType)||p,h=T.event.special[p]||{},u=T.extend({type:p,origType:m,data:n,handler:i,guid:i.guid,selector:a,needsContext:a&&T.expr.match.needsContext.test(a),namespace:f.join(".")},s),(d=l[p])||((d=l[p]=[]).delegateCount=0,h.setup&&!1!==h.setup.call(t,n,f,r)||t.addEventListener&&t.addEventListener(p,r)),h.add&&(h.add.call(t,u),u.handler.guid||(u.handler.guid=i.guid)),a?d.splice(d.delegateCount++,0,u):d.push(u),T.event.global[p]=!0)},remove:function(e,t,i,n,a){var s,r,o,l,c,u,h,d,p,f,m,g=Y.hasData(e)&&Y.get(e);if(g&&(l=g.events)){for(c=(t=(t||"").match(B)||[""]).length;c--;)if(p=m=(o=Ce.exec(t[c])||[])[1],f=(o[2]||"").split(".").sort(),p){for(h=T.event.special[p]||{},d=l[p=(n?h.delegateType:h.bindType)||p]||[],o=o[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=s=d.length;s--;)u=d[s],!a&&m!==u.origType||i&&i.guid!==u.guid||o&&!o.test(u.namespace)||n&&n!==u.selector&&("**"!==n||!u.selector)||(d.splice(s,1),u.selector&&d.delegateCount--,h.remove&&h.remove.call(e,u));r&&!d.length&&(h.teardown&&!1!==h.teardown.call(e,f,g.handle)||T.removeEvent(e,p,g.handle),delete l[p])}else for(p in l)T.event.remove(e,p+t[c],i,n,!0);T.isEmptyObject(l)&&Y.remove(e,"handle events")}},dispatch:function(e){var t,i,n,a,s,r,o=new Array(arguments.length),l=T.event.fix(e),c=(Y.get(this,"events")||Object.create(null))[l.type]||[],u=T.event.special[l.type]||{};for(o[0]=l,t=1;t<arguments.length;t++)o[t]=arguments[t];if(l.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,l)){for(r=T.event.handlers.call(this,l,c),t=0;(a=r[t++])&&!l.isPropagationStopped();)for(l.currentTarget=a.elem,i=0;(s=a.handlers[i++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==s.namespace&&!l.rnamespace.test(s.namespace)||(l.handleObj=s,l.data=s.data,void 0!==(n=((T.event.special[s.origType]||{}).handle||s.handler).apply(a.elem,o))&&!1===(l.result=n)&&(l.preventDefault(),l.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,l),l.result}},handlers:function(e,t){var i,n,a,s,r,o=[],l=t.delegateCount,c=e.target;if(l&&c.nodeType&&!("click"===e.type&&1<=e.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==e.type||!0!==c.disabled)){for(s=[],r={},i=0;i<l;i++)void 0===r[a=(n=t[i]).selector+" "]&&(r[a]=n.needsContext?-1<T(a,this).index(c):T.find(a,this,null,[c]).length),r[a]&&s.push(n);s.length&&o.push({elem:c,handlers:s})}return c=this,l<t.length&&o.push({elem:c,handlers:t.slice(l)}),o},addProp:function(t,e){Object.defineProperty(T.Event.prototype,t,{enumerable:!0,configurable:!0,get:b(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[T.expando]?e:new T.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return de.test(t.type)&&t.click&&M(t,"input")&&Me(t,"click",Se),!1},trigger:function(e){var t=this||e;return de.test(t.type)&&t.click&&M(t,"input")&&Me(t,"click"),!0},_default:function(e){var t=e.target;return de.test(t.type)&&t.click&&M(t,"input")&&Y.get(t,"click")||M(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},T.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},T.Event=function(e,t){if(!(this instanceof T.Event))return new T.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Se:Ee,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&T.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[T.expando]=!0},T.Event.prototype={constructor:T.Event,isDefaultPrevented:Ee,isPropagationStopped:Ee,isImmediatePropagationStopped:Ee,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Se,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Se,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Se,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},T.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&we.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&xe.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},T.event.addProp),T.each({focus:"focusin",blur:"focusout"},function(e,t){T.event.special[e]={setup:function(){return Me(this,e,Te),!1},trigger:function(){return Me(this,e),!0},delegateType:t}}),T.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,a){T.event.special[e]={delegateType:a,bindType:a,handle:function(e){var t,i=e.relatedTarget,n=e.handleObj;return i&&(i===this||T.contains(this,i))||(e.type=n.origType,t=n.handler.apply(this,arguments),e.type=a),t}}}),T.fn.extend({on:function(e,t,i,n){return Ae(this,e,t,i,n)},one:function(e,t,i,n){return Ae(this,e,t,i,n,1)},off:function(e,t,i){var n,a;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,T(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=Ee),this.each(function(){T.event.remove(this,e,i,t)});for(a in e)this.off(a,t,e[a]);return this}});var ke=/<script|<style|<link/i,Oe=/checked\s*(?:[^=]|=\s*.checked.)/i,De=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Ie(e,t){return M(e,"table")&&M(11!==t.nodeType?t:t.firstChild,"tr")&&T(e).children("tbody")[0]||e}function Pe(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Ne(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Le(e,t){var i,n,a,s,r,o;if(1===t.nodeType){if(Y.hasData(e)&&(o=Y.get(e).events))for(a in Y.remove(t,"handle events"),o)for(i=0,n=o[a].length;i<n;i++)T.event.add(t,a,o[a][i]);K.hasData(e)&&(s=K.access(e),r=T.extend({},s),K.set(t,r))}}function Be(i,n,a,s){n=g(n);var e,t,r,o,l,c,u=0,h=i.length,d=h-1,p=n[0],f=b(p);if(f||1<h&&"string"==typeof p&&!y.checkClone&&Oe.test(p))return i.each(function(e){var t=i.eq(e);f&&(n[0]=p.call(this,e,t.html())),Be(t,n,a,s)});if(h&&(t=(e=be(n,i[0].ownerDocument,!1,i,s)).firstChild,1===e.childNodes.length&&(e=t),t||s)){for(o=(r=T.map(ge(e,"script"),Pe)).length;u<h;u++)l=e,u!==d&&(l=T.clone(l,!0,!0),o&&T.merge(r,ge(l,"script"))),a.call(i[u],l,u);if(o)for(c=r[r.length-1].ownerDocument,T.map(r,Ne),u=0;u<o;u++)l=r[u],fe.test(l.type||"")&&!Y.access(l,"globalEval")&&T.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?T._evalUrl&&!l.noModule&&T._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},c):w(l.textContent.replace(De,""),l,c))}return i}function Re(e,t,i){for(var n,a=t?T.filter(t,e):e,s=0;null!=(n=a[s]);s++)i||1!==n.nodeType||T.cleanData(ge(n)),n.parentNode&&(i&&ae(n)&&ve(ge(n,"script")),n.parentNode.removeChild(n));return e}T.extend({htmlPrefilter:function(e){return e},clone:function(e,t,i){var n,a,s,r,o,l,c,u=e.cloneNode(!0),h=ae(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||T.isXMLDoc(e)))for(r=ge(u),n=0,a=(s=ge(e)).length;n<a;n++)o=s[n],l=r[n],void 0,"input"===(c=l.nodeName.toLowerCase())&&de.test(o.type)?l.checked=o.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=o.defaultValue);if(t)if(i)for(s=s||ge(e),r=r||ge(u),n=0,a=s.length;n<a;n++)Le(s[n],r[n]);else Le(e,u);return 0<(r=ge(u,"script")).length&&ve(r,!h&&ge(e,"script")),u},cleanData:function(e){for(var t,i,n,a=T.event.special,s=0;void 0!==(i=e[s]);s++)if(V(i)){if(t=i[Y.expando]){if(t.events)for(n in t.events)a[n]?T.event.remove(i,n):T.removeEvent(i,n,t.handle);i[Y.expando]=void 0}i[K.expando]&&(i[K.expando]=void 0)}}}),T.fn.extend({detach:function(e){return Re(this,e,!0)},remove:function(e){return Re(this,e)},text:function(e){return _(this,function(e){return void 0===e?T.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Be(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Ie(this,e).appendChild(e)})},prepend:function(){return Be(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Ie(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Be(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Be(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(T.cleanData(ge(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return T.clone(this,e,t)})},html:function(e){return _(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!ke.test(e)&&!me[(pe.exec(e)||["",""])[1].toLowerCase()]){e=T.htmlPrefilter(e);try{for(;i<n;i++)1===(t=this[i]||{}).nodeType&&(T.cleanData(ge(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var i=[];return Be(this,arguments,function(e){var t=this.parentNode;T.inArray(this,i)<0&&(T.cleanData(ge(this)),t&&t.replaceChild(e,this))},i)}}),T.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,r){T.fn[e]=function(e){for(var t,i=[],n=T(e),a=n.length-1,s=0;s<=a;s++)t=s===a?this:this.clone(!0),T(n[s])[r](t),l.apply(i,t.get());return this.pushStack(i)}});function ze(e,t,i){var n,a,s={};for(a in t)s[a]=e.style[a],e.style[a]=t[a];for(a in n=i.call(e),t)e.style[a]=s[a];return n}var Fe,je,He,$e,_e,qe,Ge,We,Xe=new RegExp("^("+ee+")(?!px)[a-z%]+$","i"),Ve=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=S),t.getComputedStyle(e)},Ue=new RegExp(ie.join("|"),"i");function Ye(){if(We){Ge.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",We.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ne.appendChild(Ge).appendChild(We);var e=S.getComputedStyle(We);Fe="1%"!==e.top,qe=12===Ke(e.marginLeft),We.style.right="60%",$e=36===Ke(e.right),je=36===Ke(e.width),We.style.position="absolute",He=12===Ke(We.offsetWidth/3),ne.removeChild(Ge),We=null}}function Ke(e){return Math.round(parseFloat(e))}function Qe(e,t,i){var n,a,s,r,o=e.style;return(i=i||Ve(e))&&(""!==(r=i.getPropertyValue(t)||i[t])||ae(e)||(r=T.style(e,t)),!y.pixelBoxStyles()&&Xe.test(r)&&Ue.test(t)&&(n=o.width,a=o.minWidth,s=o.maxWidth,o.minWidth=o.maxWidth=o.width=r,r=i.width,o.width=n,o.minWidth=a,o.maxWidth=s)),void 0!==r?r+"":r}function Ze(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}Ge=E.createElement("div"),(We=E.createElement("div")).style&&(We.style.backgroundClip="content-box",We.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===We.style.backgroundClip,T.extend(y,{boxSizingReliable:function(){return Ye(),je},pixelBoxStyles:function(){return Ye(),$e},pixelPosition:function(){return Ye(),Fe},reliableMarginLeft:function(){return Ye(),qe},scrollboxSize:function(){return Ye(),He},reliableTrDimensions:function(){var e,t,i,n;return null==_e&&(e=E.createElement("table"),t=E.createElement("tr"),i=E.createElement("div"),e.style.cssText="position:absolute;left:-11111px",t.style.height="1px",i.style.height="9px",ne.appendChild(e).appendChild(t).appendChild(i),n=S.getComputedStyle(t),_e=3<parseInt(n.height),ne.removeChild(e)),_e}}));var Je=["Webkit","Moz","ms"],et=E.createElement("div").style,tt={};function it(e){var t=T.cssProps[e]||tt[e];return t||(e in et?e:tt[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=Je.length;i--;)if((e=Je[i]+t)in et)return e}(e)||e)}var nt=/^(none|table(?!-c[ea]).+)/,at=/^--/,st={position:"absolute",visibility:"hidden",display:"block"},rt={letterSpacing:"0",fontWeight:"400"};function ot(e,t,i){var n=te.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function lt(e,t,i,n,a,s){var r="width"===t?1:0,o=0,l=0;if(i===(n?"border":"content"))return 0;for(;r<4;r+=2)"margin"===i&&(l+=T.css(e,i+ie[r],!0,a)),n?("content"===i&&(l-=T.css(e,"padding"+ie[r],!0,a)),"margin"!==i&&(l-=T.css(e,"border"+ie[r]+"Width",!0,a))):(l+=T.css(e,"padding"+ie[r],!0,a),"padding"!==i?l+=T.css(e,"border"+ie[r]+"Width",!0,a):o+=T.css(e,"border"+ie[r]+"Width",!0,a));return!n&&0<=s&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-s-l-o-.5))||0),l}function ct(e,t,i){var n=Ve(e),a=(!y.boxSizingReliable()||i)&&"border-box"===T.css(e,"boxSizing",!1,n),s=a,r=Qe(e,t,n),o="offset"+t[0].toUpperCase()+t.slice(1);if(Xe.test(r)){if(!i)return r;r="auto"}return(!y.boxSizingReliable()&&a||!y.reliableTrDimensions()&&M(e,"tr")||"auto"===r||!parseFloat(r)&&"inline"===T.css(e,"display",!1,n))&&e.getClientRects().length&&(a="border-box"===T.css(e,"boxSizing",!1,n),(s=o in e)&&(r=e[o])),(r=parseFloat(r)||0)+lt(e,t,i||(a?"border":"content"),s,n,r)+"px"}function ut(e,t,i,n,a){return new ut.prototype.init(e,t,i,n,a)}T.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=Qe(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var a,s,r,o=X(t),l=at.test(t),c=e.style;if(l||(t=it(o)),r=T.cssHooks[t]||T.cssHooks[o],void 0===i)return r&&"get"in r&&void 0!==(a=r.get(e,!1,n))?a:c[t];"string"===(s=typeof i)&&(a=te.exec(i))&&a[1]&&(i=oe(e,t,a),s="number"),null!=i&&i==i&&("number"!==s||l||(i+=a&&a[3]||(T.cssNumber[o]?"":"px")),y.clearCloneStyle||""!==i||0!==t.indexOf("background")||(c[t]="inherit"),r&&"set"in r&&void 0===(i=r.set(e,i,n))||(l?c.setProperty(t,i):c[t]=i))}},css:function(e,t,i,n){var a,s,r,o=X(t);return at.test(t)||(t=it(o)),(r=T.cssHooks[t]||T.cssHooks[o])&&"get"in r&&(a=r.get(e,!0,i)),void 0===a&&(a=Qe(e,t,n)),"normal"===a&&t in rt&&(a=rt[t]),""===i||i?(s=parseFloat(a),!0===i||isFinite(s)?s||0:a):a}}),T.each(["height","width"],function(e,l){T.cssHooks[l]={get:function(e,t,i){if(t)return!nt.test(T.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ct(e,l,i):ze(e,st,function(){return ct(e,l,i)})},set:function(e,t,i){var n,a=Ve(e),s=!y.scrollboxSize()&&"absolute"===a.position,r=(s||i)&&"border-box"===T.css(e,"boxSizing",!1,a),o=i?lt(e,l,i,r,a):0;return r&&s&&(o-=Math.ceil(e["offset"+l[0].toUpperCase()+l.slice(1)]-parseFloat(a[l])-lt(e,l,"border",!1,a)-.5)),o&&(n=te.exec(t))&&"px"!==(n[3]||"px")&&(e.style[l]=t,t=T.css(e,l)),ot(0,t,o)}}}),T.cssHooks.marginLeft=Ze(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Qe(e,"marginLeft"))||e.getBoundingClientRect().left-ze(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),T.each({margin:"",padding:"",border:"Width"},function(a,s){T.cssHooks[a+s]={expand:function(e){for(var t=0,i={},n="string"==typeof e?e.split(" "):[e];t<4;t++)i[a+ie[t]+s]=n[t]||n[t-2]||n[0];return i}},"margin"!==a&&(T.cssHooks[a+s].set=ot)}),T.fn.extend({css:function(e,t){return _(this,function(e,t,i){var n,a,s={},r=0;if(Array.isArray(t)){for(n=Ve(e),a=t.length;r<a;r++)s[t[r]]=T.css(e,t[r],!1,n);return s}return void 0!==i?T.style(e,t,i):T.css(e,t)},e,t,1<arguments.length)}}),((T.Tween=ut).prototype={constructor:ut,init:function(e,t,i,n,a,s){this.elem=e,this.prop=i,this.easing=a||T.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=s||(T.cssNumber[i]?"":"px")},cur:function(){var e=ut.propHooks[this.prop];return e&&e.get?e.get(this):ut.propHooks._default.get(this)},run:function(e){var t,i=ut.propHooks[this.prop];return this.options.duration?this.pos=t=T.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):ut.propHooks._default.set(this),this}}).init.prototype=ut.prototype,(ut.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=T.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){T.fx.step[e.prop]?T.fx.step[e.prop](e):1!==e.elem.nodeType||!T.cssHooks[e.prop]&&null==e.elem.style[it(e.prop)]?e.elem[e.prop]=e.now:T.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=ut.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},T.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},T.fx=ut.prototype.init,T.fx.step={};var ht,dt,pt,ft,mt=/^(?:toggle|show|hide)$/,gt=/queueHooks$/;function vt(){dt&&(!1===E.hidden&&S.requestAnimationFrame?S.requestAnimationFrame(vt):S.setTimeout(vt,T.fx.interval),T.fx.tick())}function yt(){return S.setTimeout(function(){ht=void 0}),ht=Date.now()}function bt(e,t){var i,n=0,a={height:e};for(t=t?1:0;n<4;n+=2-t)a["margin"+(i=ie[n])]=a["padding"+i]=e;return t&&(a.opacity=a.width=e),a}function wt(e,t,i){for(var n,a=(xt.tweeners[t]||[]).concat(xt.tweeners["*"]),s=0,r=a.length;s<r;s++)if(n=a[s].call(i,t,e))return n}function xt(s,e,t){var i,r,n=0,a=xt.prefilters.length,o=T.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=ht||yt(),t=Math.max(0,c.startTime+c.duration-e),i=1-(t/c.duration||0),n=0,a=c.tweens.length;n<a;n++)c.tweens[n].run(i);return o.notifyWith(s,[c,i,t]),i<1&&a?t:(a||o.notifyWith(s,[c,1,0]),o.resolveWith(s,[c]),!1)},c=o.promise({elem:s,props:T.extend({},e),opts:T.extend(!0,{specialEasing:{},easing:T.easing._default},t),originalProperties:e,originalOptions:t,startTime:ht||yt(),duration:t.duration,tweens:[],createTween:function(e,t){var i=T.Tween(s,c.opts,e,t,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(i),i},stop:function(e){var t=0,i=e?c.tweens.length:0;if(r)return this;for(r=!0;t<i;t++)c.tweens[t].run(1);return e?(o.notifyWith(s,[c,1,0]),o.resolveWith(s,[c,e])):o.rejectWith(s,[c,e]),this}}),u=c.props;for(!function(e,t){var i,n,a,s,r;for(i in e)if(a=t[n=X(i)],s=e[i],Array.isArray(s)&&(a=s[1],s=e[i]=s[0]),i!==n&&(e[n]=s,delete e[i]),(r=T.cssHooks[n])&&"expand"in r)for(i in s=r.expand(s),delete e[n],s)i in e||(e[i]=s[i],t[i]=a);else t[n]=a}(u,c.opts.specialEasing);n<a;n++)if(i=xt.prefilters[n].call(c,s,u,c.opts))return b(i.stop)&&(T._queueHooks(c.elem,c.opts.queue).stop=i.stop.bind(i)),i;return T.map(u,wt,c),b(c.opts.start)&&c.opts.start.call(s,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),T.fx.timer(T.extend(l,{elem:s,anim:c,queue:c.opts.queue})),c}T.Animation=T.extend(xt,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return oe(i.elem,e,te.exec(t),i),i}]},tweener:function(e,t){for(var i,n=0,a=(e=b(e)?(t=e,["*"]):e.match(B)).length;n<a;n++)i=e[n],xt.tweeners[i]=xt.tweeners[i]||[],xt.tweeners[i].unshift(t)},prefilters:[function(e,t,i){var n,a,s,r,o,l,c,u,h="width"in t||"height"in t,d=this,p={},f=e.style,m=e.nodeType&&re(e),g=Y.get(e,"fxshow");for(n in i.queue||(null==(r=T._queueHooks(e,"fx")).unqueued&&(r.unqueued=0,o=r.empty.fire,r.empty.fire=function(){r.unqueued||o()}),r.unqueued++,d.always(function(){d.always(function(){r.unqueued--,T.queue(e,"fx").length||r.empty.fire()})})),t)if(a=t[n],mt.test(a)){if(delete t[n],s=s||"toggle"===a,a===(m?"hide":"show")){if("show"!==a||!g||void 0===g[n])continue;m=!0}p[n]=g&&g[n]||T.style(e,n)}if((l=!T.isEmptyObject(t))||!T.isEmptyObject(p))for(n in h&&1===e.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(c=g&&g.display)&&(c=Y.get(e,"display")),"none"===(u=T.css(e,"display"))&&(c?u=c:(ce([e],!0),c=e.style.display||c,u=T.css(e,"display"),ce([e]))),("inline"===u||"inline-block"===u&&null!=c)&&"none"===T.css(e,"float")&&(l||(d.done(function(){f.display=c}),null==c&&(u=f.display,c="none"===u?"":u)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",d.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]})),l=!1,p)l||(g?"hidden"in g&&(m=g.hidden):g=Y.access(e,"fxshow",{display:c}),s&&(g.hidden=!m),m&&ce([e],!0),d.done(function(){for(n in m||ce([e]),Y.remove(e,"fxshow"),p)T.style(e,n,p[n])})),l=wt(m?g[n]:0,n,d),n in g||(g[n]=l.start,m&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?xt.prefilters.unshift(e):xt.prefilters.push(e)}}),T.speed=function(e,t,i){var n=e&&"object"==typeof e?T.extend({},e):{complete:i||!i&&t||b(e)&&e,duration:e,easing:i&&t||t&&!b(t)&&t};return T.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in T.fx.speeds?n.duration=T.fx.speeds[n.duration]:n.duration=T.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){b(n.old)&&n.old.call(this),n.queue&&T.dequeue(this,n.queue)},n},T.fn.extend({fadeTo:function(e,t,i,n){return this.filter(re).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(t,e,i,n){function a(){var e=xt(this,T.extend({},t),r);(s||Y.get(this,"finish"))&&e.stop(!0)}var s=T.isEmptyObject(t),r=T.speed(e,i,n);return a.finish=a,s||!1===r.queue?this.each(a):this.queue(r.queue,a)},stop:function(a,e,s){function r(e){var t=e.stop;delete e.stop,t(s)}return"string"!=typeof a&&(s=e,e=a,a=void 0),e&&this.queue(a||"fx",[]),this.each(function(){var e=!0,t=null!=a&&a+"queueHooks",i=T.timers,n=Y.get(this);if(t)n[t]&&n[t].stop&&r(n[t]);else for(t in n)n[t]&&n[t].stop&&gt.test(t)&&r(n[t]);for(t=i.length;t--;)i[t].elem!==this||null!=a&&i[t].queue!==a||(i[t].anim.stop(s),e=!1,i.splice(t,1));!e&&s||T.dequeue(this,a)})},finish:function(r){return!1!==r&&(r=r||"fx"),this.each(function(){var e,t=Y.get(this),i=t[r+"queue"],n=t[r+"queueHooks"],a=T.timers,s=i?i.length:0;for(t.finish=!0,T.queue(this,r,[]),n&&n.stop&&n.stop.call(this,!0),e=a.length;e--;)a[e].elem===this&&a[e].queue===r&&(a[e].anim.stop(!0),a.splice(e,1));for(e=0;e<s;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete t.finish})}}),T.each(["toggle","show","hide"],function(e,n){var a=T.fn[n];T.fn[n]=function(e,t,i){return null==e||"boolean"==typeof e?a.apply(this,arguments):this.animate(bt(n,!0),e,t,i)}}),T.each({slideDown:bt("show"),slideUp:bt("hide"),slideToggle:bt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,n){T.fn[e]=function(e,t,i){return this.animate(n,e,t,i)}}),T.timers=[],T.fx.tick=function(){var e,t=0,i=T.timers;for(ht=Date.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||T.fx.stop(),ht=void 0},T.fx.timer=function(e){T.timers.push(e),T.fx.start()},T.fx.interval=13,T.fx.start=function(){dt||(dt=!0,vt())},T.fx.stop=function(){dt=null},T.fx.speeds={slow:600,fast:200,_default:400},T.fn.delay=function(n,e){return n=T.fx&&T.fx.speeds[n]||n,e=e||"fx",this.queue(e,function(e,t){var i=S.setTimeout(e,n);t.stop=function(){S.clearTimeout(i)}})},pt=E.createElement("input"),ft=E.createElement("select").appendChild(E.createElement("option")),pt.type="checkbox",y.checkOn=""!==pt.value,y.optSelected=ft.selected,(pt=E.createElement("input")).value="t",pt.type="radio",y.radioValue="t"===pt.value;var Ct,St=T.expr.attrHandle;T.fn.extend({attr:function(e,t){return _(this,T.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){T.removeAttr(this,e)})}}),T.extend({attr:function(e,t,i){var n,a,s=e.nodeType;if(3!==s&&8!==s&&2!==s)return void 0===e.getAttribute?T.prop(e,t,i):(1===s&&T.isXMLDoc(e)||(a=T.attrHooks[t.toLowerCase()]||(T.expr.match.bool.test(t)?Ct:void 0)),void 0!==i?null===i?void T.removeAttr(e,t):a&&"set"in a&&void 0!==(n=a.set(e,i,t))?n:(e.setAttribute(t,i+""),i):a&&"get"in a&&null!==(n=a.get(e,t))?n:null==(n=T.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&M(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,a=t&&t.match(B);if(a&&1===e.nodeType)for(;i=a[n++];)e.removeAttribute(i)}}),Ct={set:function(e,t,i){return!1===t?T.removeAttr(e,i):e.setAttribute(i,i),i}},T.each(T.expr.match.bool.source.match(/\w+/g),function(e,t){var r=St[t]||T.find.attr;St[t]=function(e,t,i){var n,a,s=t.toLowerCase();return i||(a=St[s],St[s]=n,n=null!=r(e,t,i)?s:null,St[s]=a),n}});var Et=/^(?:input|select|textarea|button)$/i,Tt=/^(?:a|area)$/i;function At(e){return(e.match(B)||[]).join(" ")}function Mt(e){return e.getAttribute&&e.getAttribute("class")||""}function kt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(B)||[]}T.fn.extend({prop:function(e,t){return _(this,T.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[T.propFix[e]||e]})}}),T.extend({prop:function(e,t,i){var n,a,s=e.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&T.isXMLDoc(e)||(t=T.propFix[t]||t,a=T.propHooks[t]),void 0!==i?a&&"set"in a&&void 0!==(n=a.set(e,i,t))?n:e[t]=i:a&&"get"in a&&null!==(n=a.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=T.find.attr(e,"tabindex");return t?parseInt(t,10):Et.test(e.nodeName)||Tt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(T.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),T.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){T.propFix[this.toLowerCase()]=this}),T.fn.extend({addClass:function(t){var e,i,n,a,s,r,o,l=0;if(b(t))return this.each(function(e){T(this).addClass(t.call(this,e,Mt(this)))});if((e=kt(t)).length)for(;i=this[l++];)if(a=Mt(i),n=1===i.nodeType&&" "+At(a)+" "){for(r=0;s=e[r++];)n.indexOf(" "+s+" ")<0&&(n+=s+" ");a!==(o=At(n))&&i.setAttribute("class",o)}return this},removeClass:function(t){var e,i,n,a,s,r,o,l=0;if(b(t))return this.each(function(e){T(this).removeClass(t.call(this,e,Mt(this)))});if(!arguments.length)return this.attr("class","");if((e=kt(t)).length)for(;i=this[l++];)if(a=Mt(i),n=1===i.nodeType&&" "+At(a)+" "){for(r=0;s=e[r++];)for(;-1<n.indexOf(" "+s+" ");)n=n.replace(" "+s+" "," ");a!==(o=At(n))&&i.setAttribute("class",o)}return this},toggleClass:function(a,t){var s=typeof a,r="string"==s||Array.isArray(a);return"boolean"==typeof t&&r?t?this.addClass(a):this.removeClass(a):b(a)?this.each(function(e){T(this).toggleClass(a.call(this,e,Mt(this),t),t)}):this.each(function(){var e,t,i,n;if(r)for(t=0,i=T(this),n=kt(a);e=n[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else void 0!==a&&"boolean"!=s||((e=Mt(this))&&Y.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===a?"":Y.get(this,"__className__")||""))})},hasClass:function(e){var t,i,n=0;for(t=" "+e+" ";i=this[n++];)if(1===i.nodeType&&-1<(" "+At(Mt(i))+" ").indexOf(t))return!0;return!1}});var Ot=/\r/g;T.fn.extend({val:function(i){var n,e,a,t=this[0];return arguments.length?(a=b(i),this.each(function(e){var t;1===this.nodeType&&(null==(t=a?i.call(this,e,T(this).val()):i)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=T.map(t,function(e){return null==e?"":e+""})),(n=T.valHooks[this.type]||T.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,t,"value")||(this.value=t))})):t?(n=T.valHooks[t.type]||T.valHooks[t.nodeName.toLowerCase()])&&"get"in n&&void 0!==(e=n.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(Ot,""):null==e?"":e:void 0}}),T.extend({valHooks:{option:{get:function(e){var t=T.find.attr(e,"value");return null!=t?t:At(T.text(e))}},select:{get:function(e){var t,i,n,a=e.options,s=e.selectedIndex,r="select-one"===e.type,o=r?null:[],l=r?s+1:a.length;for(n=s<0?l:r?s:0;n<l;n++)if(((i=a[n]).selected||n===s)&&!i.disabled&&(!i.parentNode.disabled||!M(i.parentNode,"optgroup"))){if(t=T(i).val(),r)return t;o.push(t)}return o},set:function(e,t){for(var i,n,a=e.options,s=T.makeArray(t),r=a.length;r--;)((n=a[r]).selected=-1<T.inArray(T.valHooks.option.get(n),s))&&(i=!0);return i||(e.selectedIndex=-1),s}}}}),T.each(["radio","checkbox"],function(){T.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<T.inArray(T(e).val(),t)}},y.checkOn||(T.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in S;function Dt(e){e.stopPropagation()}var It=/^(?:focusinfocus|focusoutblur)$/;T.extend(T.event,{trigger:function(e,t,i,n){var a,s,r,o,l,c,u,h,d=[i||E],p=v.call(e,"type")?e.type:e,f=v.call(e,"namespace")?e.namespace.split("."):[];if(s=h=r=i=i||E,3!==i.nodeType&&8!==i.nodeType&&!It.test(p+T.event.triggered)&&(-1<p.indexOf(".")&&(p=(f=p.split(".")).shift(),f.sort()),l=p.indexOf(":")<0&&"on"+p,(e=e[T.expando]?e:new T.Event(p,"object"==typeof e&&e)).isTrigger=n?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:T.makeArray(t,[e]),u=T.event.special[p]||{},n||!u.trigger||!1!==u.trigger.apply(i,t))){if(!n&&!u.noBubble&&!m(i)){for(o=u.delegateType||p,It.test(o+p)||(s=s.parentNode);s;s=s.parentNode)d.push(s),r=s;r===(i.ownerDocument||E)&&d.push(r.defaultView||r.parentWindow||S)}for(a=0;(s=d[a++])&&!e.isPropagationStopped();)h=s,e.type=1<a?o:u.bindType||p,(c=(Y.get(s,"events")||Object.create(null))[e.type]&&Y.get(s,"handle"))&&c.apply(s,t),(c=l&&s[l])&&c.apply&&V(s)&&(e.result=c.apply(s,t),!1===e.result&&e.preventDefault());return e.type=p,n||e.isDefaultPrevented()||u._default&&!1!==u._default.apply(d.pop(),t)||!V(i)||l&&b(i[p])&&!m(i)&&((r=i[l])&&(i[l]=null),T.event.triggered=p,e.isPropagationStopped()&&h.addEventListener(p,Dt),i[p](),e.isPropagationStopped()&&h.removeEventListener(p,Dt),T.event.triggered=void 0,r&&(i[l]=r)),e.result}},simulate:function(e,t,i){var n=T.extend(new T.Event,i,{type:e,isSimulated:!0});T.event.trigger(n,null,t)}}),T.fn.extend({trigger:function(e,t){return this.each(function(){T.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return T.event.trigger(e,t,i,!0)}}),y.focusin||T.each({focus:"focusin",blur:"focusout"},function(i,n){function a(e){T.event.simulate(n,e.target,T.event.fix(e))}T.event.special[n]={setup:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,n);t||e.addEventListener(i,a,!0),Y.access(e,n,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,n)-1;t?Y.access(e,n,t):(e.removeEventListener(i,a,!0),Y.remove(e,n))}}});var Pt=S.location,Nt={guid:Date.now()},Lt=/\?/;T.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new S.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||T.error("Invalid XML: "+e),t};var Bt=/\[\]$/,Rt=/\r?\n/g,zt=/^(?:submit|button|image|reset|file)$/i,Ft=/^(?:input|select|textarea|keygen)/i;function jt(i,e,n,a){var t;if(Array.isArray(e))T.each(e,function(e,t){n||Bt.test(i)?a(i,t):jt(i+"["+("object"==typeof t&&null!=t?e:"")+"]",t,n,a)});else if(n||"object"!==x(e))a(i,e);else for(t in e)jt(i+"["+t+"]",e[t],n,a)}T.param=function(e,t){function i(e,t){var i=b(t)?t():t;a[a.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)}var n,a=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!T.isPlainObject(e))T.each(e,function(){i(this.name,this.value)});else for(n in e)jt(n,e[n],t,i);return a.join("&")},T.fn.extend({serialize:function(){return T.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=T.prop(this,"elements");return e?T.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!T(this).is(":disabled")&&Ft.test(this.nodeName)&&!zt.test(e)&&(this.checked||!de.test(e))}).map(function(e,t){var i=T(this).val();return null==i?null:Array.isArray(i)?T.map(i,function(e){return{name:t.name,value:e.replace(Rt,"\r\n")}}):{name:t.name,value:i.replace(Rt,"\r\n")}}).get()}});var Ht=/%20/g,$t=/#.*$/,_t=/([?&])_=[^&]*/,qt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Gt=/^(?:GET|HEAD)$/,Wt=/^\/\//,Xt={},Vt={},Ut="*/".concat("*"),Yt=E.createElement("a");function Kt(s){return function(e,t){"string"!=typeof e&&(t=e,e="*");var i,n=0,a=e.toLowerCase().match(B)||[];if(b(t))for(;i=a[n++];)"+"===i[0]?(i=i.slice(1)||"*",(s[i]=s[i]||[]).unshift(t)):(s[i]=s[i]||[]).push(t)}}function Qt(t,a,s,r){var o={},l=t===Vt;function c(e){var n;return o[e]=!0,T.each(t[e]||[],function(e,t){var i=t(a,s,r);return"string"!=typeof i||l||o[i]?l?!(n=i):void 0:(a.dataTypes.unshift(i),c(i),!1)}),n}return c(a.dataTypes[0])||!o["*"]&&c("*")}function Zt(e,t){var i,n,a=T.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((a[i]?e:n=n||{})[i]=t[i]);return n&&T.extend(!0,e,n),e}Yt.href=Pt.href,T.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Pt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Pt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ut,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":T.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Zt(Zt(e,T.ajaxSettings),t):Zt(T.ajaxSettings,e)},ajaxPrefilter:Kt(Xt),ajaxTransport:Kt(Vt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var u,h,d,i,p,n,f,m,a,s,g=T.ajaxSetup({},t),v=g.context||g,y=g.context&&(v.nodeType||v.jquery)?T(v):T.event,b=T.Deferred(),w=T.Callbacks("once memory"),x=g.statusCode||{},r={},o={},l="canceled",C={readyState:0,getResponseHeader:function(e){var t;if(f){if(!i)for(i={};t=qt.exec(d);)i[t[1].toLowerCase()+" "]=(i[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=i[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return f?d:null},setRequestHeader:function(e,t){return null==f&&(e=o[e.toLowerCase()]=o[e.toLowerCase()]||e,r[e]=t),this},overrideMimeType:function(e){return null==f&&(g.mimeType=e),this},statusCode:function(e){var t;if(e)if(f)C.always(e[C.status]);else for(t in e)x[t]=[x[t],e[t]];return this},abort:function(e){var t=e||l;return u&&u.abort(t),c(0,t),this}};if(b.promise(C),g.url=((e||g.url||Pt.href)+"").replace(Wt,Pt.protocol+"//"),g.type=t.method||t.type||g.method||g.type,g.dataTypes=(g.dataType||"*").toLowerCase().match(B)||[""],null==g.crossDomain){n=E.createElement("a");try{n.href=g.url,n.href=n.href,g.crossDomain=Yt.protocol+"//"+Yt.host!=n.protocol+"//"+n.host}catch(e){g.crossDomain=!0}}if(g.data&&g.processData&&"string"!=typeof g.data&&(g.data=T.param(g.data,g.traditional)),Qt(Xt,g,t,C),f)return C;for(a in(m=T.event&&g.global)&&0==T.active++&&T.event.trigger("ajaxStart"),g.type=g.type.toUpperCase(),g.hasContent=!Gt.test(g.type),h=g.url.replace($t,""),g.hasContent?g.data&&g.processData&&0===(g.contentType||"").indexOf("application/x-www-form-urlencoded")&&(g.data=g.data.replace(Ht,"+")):(s=g.url.slice(h.length),g.data&&(g.processData||"string"==typeof g.data)&&(h+=(Lt.test(h)?"&":"?")+g.data,delete g.data),!1===g.cache&&(h=h.replace(_t,"$1"),s=(Lt.test(h)?"&":"?")+"_="+Nt.guid+++s),g.url=h+s),g.ifModified&&(T.lastModified[h]&&C.setRequestHeader("If-Modified-Since",T.lastModified[h]),T.etag[h]&&C.setRequestHeader("If-None-Match",T.etag[h])),(g.data&&g.hasContent&&!1!==g.contentType||t.contentType)&&C.setRequestHeader("Content-Type",g.contentType),C.setRequestHeader("Accept",g.dataTypes[0]&&g.accepts[g.dataTypes[0]]?g.accepts[g.dataTypes[0]]+("*"!==g.dataTypes[0]?", "+Ut+"; q=0.01":""):g.accepts["*"]),g.headers)C.setRequestHeader(a,g.headers[a]);if(g.beforeSend&&(!1===g.beforeSend.call(v,C,g)||f))return C.abort();if(l="abort",w.add(g.complete),C.done(g.success),C.fail(g.error),u=Qt(Vt,g,t,C)){if(C.readyState=1,m&&y.trigger("ajaxSend",[C,g]),f)return C;g.async&&0<g.timeout&&(p=S.setTimeout(function(){C.abort("timeout")},g.timeout));try{f=!1,u.send(r,c)}catch(e){if(f)throw e;c(-1,e)}}else c(-1,"No Transport");function c(e,t,i,n){var a,s,r,o,l,c=t;f||(f=!0,p&&S.clearTimeout(p),u=void 0,d=n||"",C.readyState=0<e?4:0,a=200<=e&&e<300||304===e,i&&(o=function(e,t,i){for(var n,a,s,r,o=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(a in o)if(o[a]&&o[a].test(n)){l.unshift(a);break}if(l[0]in i)s=l[0];else{for(a in i){if(!l[0]||e.converters[a+" "+l[0]]){s=a;break}r=r||a}s=s||r}if(s)return s!==l[0]&&l.unshift(s),i[s]}(g,C,i)),!a&&-1<T.inArray("script",g.dataTypes)&&(g.converters["text script"]=function(){}),o=function(e,t,i,n){var a,s,r,o,l,c={},u=e.dataTypes.slice();if(u[1])for(r in e.converters)c[r.toLowerCase()]=e.converters[r];for(s=u.shift();s;)if(e.responseFields[s]&&(i[e.responseFields[s]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=s,s=u.shift())if("*"===s)s=l;else if("*"!==l&&l!==s){if(!(r=c[l+" "+s]||c["* "+s]))for(a in c)if((o=a.split(" "))[1]===s&&(r=c[l+" "+o[0]]||c["* "+o[0]])){!0===r?r=c[a]:!0!==c[a]&&(s=o[0],u.unshift(o[1]));break}if(!0!==r)if(r&&e.throws)t=r(t);else try{t=r(t)}catch(e){return{state:"parsererror",error:r?e:"No conversion from "+l+" to "+s}}}return{state:"success",data:t}}(g,o,C,a),a?(g.ifModified&&((l=C.getResponseHeader("Last-Modified"))&&(T.lastModified[h]=l),(l=C.getResponseHeader("etag"))&&(T.etag[h]=l)),204===e||"HEAD"===g.type?c="nocontent":304===e?c="notmodified":(c=o.state,s=o.data,a=!(r=o.error))):(r=c,!e&&c||(c="error",e<0&&(e=0))),C.status=e,C.statusText=(t||c)+"",a?b.resolveWith(v,[s,c,C]):b.rejectWith(v,[C,c,r]),C.statusCode(x),x=void 0,m&&y.trigger(a?"ajaxSuccess":"ajaxError",[C,g,a?s:r]),w.fireWith(v,[C,c]),m&&(y.trigger("ajaxComplete",[C,g]),--T.active||T.event.trigger("ajaxStop")))}return C},getJSON:function(e,t,i){return T.get(e,t,i,"json")},getScript:function(e,t){return T.get(e,void 0,t,"script")}}),T.each(["get","post"],function(e,a){T[a]=function(e,t,i,n){return b(t)&&(n=n||i,i=t,t=void 0),T.ajax(T.extend({url:e,type:a,dataType:n,data:t,success:i},T.isPlainObject(e)&&e))}}),T.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),T._evalUrl=function(e,t,i){return T.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){T.globalEval(e,t,i)}})},T.fn.extend({wrapAll:function(e){var t;return this[0]&&(b(e)&&(e=e.call(this[0])),t=T(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(i){return b(i)?this.each(function(e){T(this).wrapInner(i.call(this,e))}):this.each(function(){var e=T(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=b(t);return this.each(function(e){T(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){T(this).replaceWith(this.childNodes)}),this}}),T.expr.pseudos.hidden=function(e){return!T.expr.pseudos.visible(e)},T.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},T.ajaxSettings.xhr=function(){try{return new S.XMLHttpRequest}catch(e){}};var Jt={0:200,1223:204},ei=T.ajaxSettings.xhr();y.cors=!!ei&&"withCredentials"in ei,y.ajax=ei=!!ei,T.ajaxTransport(function(a){var s,r;if(y.cors||ei&&!a.crossDomain)return{send:function(e,t){var i,n=a.xhr();if(n.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(i in a.xhrFields)n[i]=a.xhrFields[i];for(i in a.mimeType&&n.overrideMimeType&&n.overrideMimeType(a.mimeType),a.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)n.setRequestHeader(i,e[i]);s=function(e){return function(){s&&(s=r=n.onload=n.onerror=n.onabort=n.ontimeout=n.onreadystatechange=null,"abort"===e?n.abort():"error"===e?"number"!=typeof n.status?t(0,"error"):t(n.status,n.statusText):t(Jt[n.status]||n.status,n.statusText,"text"!==(n.responseType||"text")||"string"!=typeof n.responseText?{binary:n.response}:{text:n.responseText},n.getAllResponseHeaders()))}},n.onload=s(),r=n.onerror=n.ontimeout=s("error"),void 0!==n.onabort?n.onabort=r:n.onreadystatechange=function(){4===n.readyState&&S.setTimeout(function(){s&&r()})},s=s("abort");try{n.send(a.hasContent&&a.data||null)}catch(e){if(s)throw e}},abort:function(){s&&s()}}}),T.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),T.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return T.globalEval(e),e}}}),T.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),T.ajaxTransport("script",function(i){var n,a;if(i.crossDomain||i.scriptAttrs)return{send:function(e,t){n=T("<script>").attr(i.scriptAttrs||{}).prop({charset:i.scriptCharset,src:i.url}).on("load error",a=function(e){n.remove(),a=null,e&&t("error"===e.type?404:200,e.type)}),E.head.appendChild(n[0])},abort:function(){a&&a()}}});var ti,ii=[],ni=/(=)\?(?=&|$)|\?\?/;T.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=ii.pop()||T.expando+"_"+Nt.guid++;return this[e]=!0,e}}),T.ajaxPrefilter("json jsonp",function(e,t,i){var n,a,s,r=!1!==e.jsonp&&(ni.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&ni.test(e.data)&&"data");if(r||"jsonp"===e.dataTypes[0])return n=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,r?e[r]=e[r].replace(ni,"$1"+n):!1!==e.jsonp&&(e.url+=(Lt.test(e.url)?"&":"?")+e.jsonp+"="+n),e.converters["script json"]=function(){return s||T.error(n+" was not called"),s[0]},e.dataTypes[0]="json",a=S[n],S[n]=function(){s=arguments},i.always(function(){void 0===a?T(S).removeProp(n):S[n]=a,e[n]&&(e.jsonpCallback=t.jsonpCallback,ii.push(n)),s&&b(a)&&a(s[0]),s=a=void 0}),"script"}),y.createHTMLDocument=((ti=E.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===ti.childNodes.length),T.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(y.createHTMLDocument?((n=(t=E.implementation.createHTMLDocument("")).createElement("base")).href=E.location.href,t.head.appendChild(n)):t=E),s=!i&&[],(a=k.exec(e))?[t.createElement(a[1])]:(a=be([e],t,s),s&&s.length&&T(s).remove(),T.merge([],a.childNodes)));var n,a,s},T.fn.load=function(e,t,i){var n,a,s,r=this,o=e.indexOf(" ");return-1<o&&(n=At(e.slice(o)),e=e.slice(0,o)),b(t)?(i=t,t=void 0):t&&"object"==typeof t&&(a="POST"),0<r.length&&T.ajax({url:e,type:a||"GET",dataType:"html",data:t}).done(function(e){s=arguments,r.html(n?T("<div>").append(T.parseHTML(e)).find(n):e)}).always(i&&function(e,t){r.each(function(){i.apply(this,s||[e.responseText,t,e])})}),this},T.expr.pseudos.animated=function(t){return T.grep(T.timers,function(e){return t===e.elem}).length},T.offset={setOffset:function(e,t,i){var n,a,s,r,o,l,c=T.css(e,"position"),u=T(e),h={};"static"===c&&(e.style.position="relative"),o=u.offset(),s=T.css(e,"top"),l=T.css(e,"left"),a=("absolute"===c||"fixed"===c)&&-1<(s+l).indexOf("auto")?(r=(n=u.position()).top,n.left):(r=parseFloat(s)||0,parseFloat(l)||0),b(t)&&(t=t.call(e,i,T.extend({},o))),null!=t.top&&(h.top=t.top-o.top+r),null!=t.left&&(h.left=t.left-o.left+a),"using"in t?t.using.call(e,h):("number"==typeof h.top&&(h.top+="px"),"number"==typeof h.left&&(h.left+="px"),u.css(h))}},T.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){T.offset.setOffset(this,t,e)});var e,i,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,n=this[0],a={top:0,left:0};if("fixed"===T.css(n,"position"))t=n.getBoundingClientRect();else{for(t=this.offset(),i=n.ownerDocument,e=n.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===T.css(e,"position");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((a=T(e).offset()).top+=T.css(e,"borderTopWidth",!0),a.left+=T.css(e,"borderLeftWidth",!0))}return{top:t.top-a.top-T.css(n,"marginTop",!0),left:t.left-a.left-T.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===T.css(e,"position");)e=e.offsetParent;return e||ne})}}),T.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,a){var s="pageYOffset"===a;T.fn[t]=function(e){return _(this,function(e,t,i){var n;if(m(e)?n=e:9===e.nodeType&&(n=e.defaultView),void 0===i)return n?n[a]:e[t];n?n.scrollTo(s?n.pageXOffset:i,s?i:n.pageYOffset):e[t]=i},t,e,arguments.length)}}),T.each(["top","left"],function(e,i){T.cssHooks[i]=Ze(y.pixelPosition,function(e,t){if(t)return t=Qe(e,i),Xe.test(t)?T(e).position()[i]+"px":t})}),T.each({Height:"height",Width:"width"},function(r,o){T.each({padding:"inner"+r,content:o,"":"outer"+r},function(n,s){T.fn[s]=function(e,t){var i=arguments.length&&(n||"boolean"!=typeof e),a=n||(!0===e||!0===t?"margin":"border");return _(this,function(e,t,i){var n;return m(e)?0===s.indexOf("outer")?e["inner"+r]:e.document.documentElement["client"+r]:9===e.nodeType?(n=e.documentElement,Math.max(e.body["scroll"+r],n["scroll"+r],e.body["offset"+r],n["offset"+r],n["client"+r])):void 0===i?T.css(e,t,a):T.style(e,t,i,a)},o,i?e:void 0,i)}})}),T.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){T.fn[t]=function(e){return this.on(t,e)}}),T.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),T.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,i){T.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}});var ai=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;T.proxy=function(e,t){var i,n,a;if("string"==typeof t&&(i=e[t],t=e,e=i),b(e))return n=o.call(arguments,2),(a=function(){return e.apply(t||this,n.concat(o.call(arguments)))}).guid=e.guid=e.guid||T.guid++,a},T.holdReady=function(e){e?T.readyWait++:T.ready(!0)},T.isArray=Array.isArray,T.parseJSON=JSON.parse,T.nodeName=M,T.isFunction=b,T.isWindow=m,T.camelCase=X,T.type=x,T.now=Date.now,T.isNumeric=function(e){var t=T.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},T.trim=function(e){return null==e?"":(e+"").replace(ai,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return T});var si=S.jQuery,ri=S.$;return T.noConflict=function(e){return S.$===T&&(S.$=ri),e&&S.jQuery===T&&(S.jQuery=si),T},void 0===e&&(S.jQuery=S.$=T),T}),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Swiper=t()}(this,function(){"use strict";function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function t(){return(t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e}).apply(this,arguments)}function n(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function a(t,i){void 0===t&&(t={}),void 0===i&&(i={}),Object.keys(i).forEach(function(e){void 0===t[e]?t[e]=i[e]:n(i[e])&&n(t[e])&&0<Object.keys(i[e]).length&&a(t[e],i[e])})}var i={body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},createElementNS:function(){return{}},importNode:function(){return null},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};function w(){var e="undefined"!=typeof document?document:{};return a(e,i),e}var s={document:i,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState:function(){},pushState:function(){},go:function(){},back:function(){}},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){},matchMedia:function(){return{}},requestAnimationFrame:function(e){return"undefined"==typeof setTimeout?(e(),null):setTimeout(e,0)},cancelAnimationFrame:function(e){"undefined"!=typeof setTimeout&&clearTimeout(e)}};function se(){var e="undefined"!=typeof window?window:{};return a(e,s),e}function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e,t,i){return(l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()?Reflect.construct:function(e,t,i){var n=[null];n.push.apply(n,t);var a=new(Function.bind.apply(e,n));return i&&o(a,i.prototype),a}).apply(null,arguments)}function c(e){var n="function"==typeof Map?new Map:void 0;return(c=function(e){if(null===e||(t=e,-1===Function.toString.call(t).indexOf("[native code]")))return e;var t;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,i)}function i(){return l(e,arguments,r(this).constructor)}return i.prototype=Object.create(e.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),o(i,e)})(e)}var u,h,d,p=(u=c(Array),d=u,(h=f).prototype=Object.create(d.prototype),(h.prototype.constructor=h).__proto__=d,f);function f(e){var t,i,n;return i=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(t=u.call.apply(u,[this].concat(e))||this),n=i.__proto__,Object.defineProperty(i,"__proto__",{get:function(){return n},set:function(e){n.__proto__=e}}),t}function m(e){void 0===e&&(e=[]);var t=[];return e.forEach(function(e){Array.isArray(e)?t.push.apply(t,m(e)):t.push(e)}),t}function g(e,t){return Array.prototype.filter.call(e,t)}function I(e,a){var t=se(),s=w(),i=[];if(!a&&e instanceof p)return e;if(!e)return new p(i);if("string"==typeof e){var n=e.trim();if(0<=n.indexOf("<")&&0<=n.indexOf(">")){var r="div";0===n.indexOf("<li")&&(r="ul"),0===n.indexOf("<tr")&&(r="tbody"),0!==n.indexOf("<td")&&0!==n.indexOf("<th")||(r="tr"),0===n.indexOf("<tbody")&&(r="table"),0===n.indexOf("<option")&&(r="select");var o=s.createElement(r);o.innerHTML=n;for(var l=0;l<o.childNodes.length;l+=1)i.push(o.childNodes[l])}else i=function(e){if("string"!=typeof e)return[e];for(var t=[],i=(a||s).querySelectorAll(e),n=0;n<i.length;n+=1)t.push(i[n]);return t}(e.trim())}else if(e.nodeType||e===t||e===s)i.push(e);else if(Array.isArray(e)){if(e instanceof p)return e;i=e}return new p(function(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}(i))}I.fn=p.prototype;var v,y,b,x={addClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=m(t.map(function(e){return e.split(" ")}));return this.forEach(function(e){var t;(t=e.classList).add.apply(t,n)}),this},removeClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=m(t.map(function(e){return e.split(" ")}));return this.forEach(function(e){var t;(t=e.classList).remove.apply(t,n)}),this},hasClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=m(t.map(function(e){return e.split(" ")}));return 0<g(this,function(t){return 0<n.filter(function(e){return t.classList.contains(e)}).length}).length},toggleClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=m(t.map(function(e){return e.split(" ")}));this.forEach(function(t){n.forEach(function(e){t.classList.toggle(e)})})},attr:function(e,t){if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var i=0;i<this.length;i+=1)if(2===arguments.length)this[i].setAttribute(e,t);else for(var n in e)this[i][n]=e[n],this[i].setAttribute(n,e[n]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},transform:function(e){for(var t=0;t<this.length;t+=1)this[t].style.transform=e;return this},transition:function(e){for(var t=0;t<this.length;t+=1)this[t].style.transition="string"!=typeof e?e+"ms":e;return this},on:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=t[0],s=t[1],r=t[2],a=t[3];function o(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),I(t).is(s))r.apply(t,i);else for(var n=I(t).parents(),a=0;a<n.length;a+=1)I(n[a]).is(s)&&r.apply(n[a],i)}}function l(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),r.apply(this,t)}"function"==typeof t[1]&&(n=t[0],r=t[1],a=t[2],s=void 0),a=a||!1;for(var c,u=n.split(" "),h=0;h<this.length;h+=1){var d=this[h];if(s)for(c=0;c<u.length;c+=1){var p=u[c];d.dom7LiveListeners||(d.dom7LiveListeners={}),d.dom7LiveListeners[p]||(d.dom7LiveListeners[p]=[]),d.dom7LiveListeners[p].push({listener:r,proxyListener:o}),d.addEventListener(p,o,a)}else for(c=0;c<u.length;c+=1){var f=u[c];d.dom7Listeners||(d.dom7Listeners={}),d.dom7Listeners[f]||(d.dom7Listeners[f]=[]),d.dom7Listeners[f].push({listener:r,proxyListener:l}),d.addEventListener(f,l,a)}}return this},off:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=t[0],a=t[1],s=t[2],r=t[3];"function"==typeof t[1]&&(n=t[0],s=t[1],r=t[2],a=void 0),r=r||!1;for(var o=n.split(" "),l=0;l<o.length;l+=1)for(var c=o[l],u=0;u<this.length;u+=1){var h=this[u],d=void 0;if(!a&&h.dom7Listeners?d=h.dom7Listeners[c]:a&&h.dom7LiveListeners&&(d=h.dom7LiveListeners[c]),d&&d.length)for(var p=d.length-1;0<=p;p-=1){var f=d[p];s&&f.listener===s||s&&f.listener&&f.listener.dom7proxy&&f.listener.dom7proxy===s?(h.removeEventListener(c,f.proxyListener,r),d.splice(p,1)):s||(h.removeEventListener(c,f.proxyListener,r),d.splice(p,1))}}return this},trigger:function(){for(var e=se(),t=arguments.length,i=new Array(t),n=0;n<t;n++)i[n]=arguments[n];for(var a=i[0].split(" "),s=i[1],r=0;r<a.length;r+=1)for(var o=a[r],l=0;l<this.length;l+=1){var c=this[l];if(e.CustomEvent){var u=new e.CustomEvent(o,{detail:s,bubbles:!0,cancelable:!0});c.dom7EventData=i.filter(function(e,t){return 0<t}),c.dispatchEvent(u),c.dom7EventData=[],delete c.dom7EventData}}return this},transitionEnd:function(i){var n=this;return i&&n.on("transitionend",function e(t){t.target===this&&(i.call(this,t),n.off("transitionend",e))}),this},outerWidth:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},styles:function(){var e=se();return this[0]?e.getComputedStyle(this[0],null):{}},offset:function(){if(0<this.length){var e=se(),t=w(),i=this[0],n=i.getBoundingClientRect(),a=t.body,s=i.clientTop||a.clientTop||0,r=i.clientLeft||a.clientLeft||0,o=i===e?e.scrollY:i.scrollTop,l=i===e?e.scrollX:i.scrollLeft;return{top:n.top+o-s,left:n.left+l-r}}return null},css:function(e,t){var i,n=se();if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var a in e)this[i].style[a]=e[a];return this}if(this[0])return n.getComputedStyle(this[0],null).getPropertyValue(e)}if(2!==arguments.length||"string"!=typeof e)return this;for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this},each:function(i){return i&&this.forEach(function(e,t){i.apply(e,[e,t])}),this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:null;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,i,n=se(),a=w(),s=this[0];if(!s||void 0===e)return!1;if("string"==typeof e){if(s.matches)return s.matches(e);if(s.webkitMatchesSelector)return s.webkitMatchesSelector(e);if(s.msMatchesSelector)return s.msMatchesSelector(e);for(t=I(e),i=0;i<t.length;i+=1)if(t[i]===s)return!0;return!1}if(e===a)return s===a;if(e===n)return s===n;if(e.nodeType||e instanceof p){for(t=e.nodeType?[e]:e,i=0;i<t.length;i+=1)if(t[i]===s)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t=this.length;if(t-1<e)return I([]);if(e<0){var i=t+e;return I(i<0?[]:[this[i]])}return I([this[e]])},append:function(){for(var e,t=w(),i=0;i<arguments.length;i+=1){e=i<0||arguments.length<=i?void 0:arguments[i];for(var n=0;n<this.length;n+=1)if("string"==typeof e){var a=t.createElement("div");for(a.innerHTML=e;a.firstChild;)this[n].appendChild(a.firstChild)}else if(e instanceof p)for(var s=0;s<e.length;s+=1)this[n].appendChild(e[s]);else this[n].appendChild(e)}return this},prepend:function(e){var t,i,n=w();for(t=0;t<this.length;t+=1)if("string"==typeof e){var a=n.createElement("div");for(a.innerHTML=e,i=a.childNodes.length-1;0<=i;i-=1)this[t].insertBefore(a.childNodes[i],this[t].childNodes[0])}else if(e instanceof p)for(i=0;i<e.length;i+=1)this[t].insertBefore(e[i],this[t].childNodes[0]);else this[t].insertBefore(e,this[t].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&I(this[0].nextElementSibling).is(e)?I([this[0].nextElementSibling]):I([]):this[0].nextElementSibling?I([this[0].nextElementSibling]):I([]):I([])},nextAll:function(e){var t=[],i=this[0];if(!i)return I([]);for(;i.nextElementSibling;){var n=i.nextElementSibling;e?I(n).is(e)&&t.push(n):t.push(n),i=n}return I(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&I(t.previousElementSibling).is(e)?I([t.previousElementSibling]):I([]):t.previousElementSibling?I([t.previousElementSibling]):I([])}return I([])},prevAll:function(e){var t=[],i=this[0];if(!i)return I([]);for(;i.previousElementSibling;){var n=i.previousElementSibling;e?I(n).is(e)&&t.push(n):t.push(n),i=n}return I(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null!==this[i].parentNode&&(e?I(this[i].parentNode).is(e)&&t.push(this[i].parentNode):t.push(this[i].parentNode));return I(t)},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].parentNode;n;)e?I(n).is(e)&&t.push(n):t.push(n),n=n.parentNode;return I(t)},closest:function(e){var t=this;return void 0===e?I([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].querySelectorAll(e),a=0;a<n.length;a+=1)t.push(n[a]);return I(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].children,a=0;a<n.length;a+=1)e&&!I(n[a]).is(e)||t.push(n[a]);return I(t)},filter:function(e){return I(g(this,e))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this}};function L(e,t){return void 0===t&&(t=0),setTimeout(e,t)}function B(){return Date.now()}function C(e,t){void 0===t&&(t="x");var i,n,a,s=se(),r=s.getComputedStyle(e,null);return s.WebKitCSSMatrix?(6<(n=r.transform||r.webkitTransform).split(",").length&&(n=n.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),a=new s.WebKitCSSMatrix("none"===n?"":n)):i=(a=r.MozTransform||r.OTransform||r.MsTransform||r.msTransform||r.transform||r.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(n=s.WebKitCSSMatrix?a.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(n=s.WebKitCSSMatrix?a.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),n||0}function S(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object}function re(e){for(var t=Object(arguments.length<=0?void 0:e),i=1;i<arguments.length;i+=1){var n=i<0||arguments.length<=i?void 0:arguments[i];if(null!=n)for(var a=Object.keys(Object(n)),s=0,r=a.length;s<r;s+=1){var o=a[s],l=Object.getOwnPropertyDescriptor(n,o);void 0!==l&&l.enumerable&&(S(t[o])&&S(n[o])?re(t[o],n[o]):!S(t[o])&&S(n[o])?(t[o]={},re(t[o],n[o])):t[o]=n[o])}}return t}function E(i,n){Object.keys(n).forEach(function(t){S(n[t])&&Object.keys(n[t]).forEach(function(e){"function"==typeof n[t][e]&&(n[t][e]=n[t][e].bind(i))}),i[t]=n[t]})}function T(){return v||(i=se(),e=w(),v={touch:!!("ontouchstart"in i||i.DocumentTouch&&e instanceof i.DocumentTouch),pointerEvents:!!i.PointerEvent&&"maxTouchPoints"in i.navigator&&0<=i.navigator.maxTouchPoints,observer:"MutationObserver"in i||"WebkitMutationObserver"in i,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});i.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in i}),v;var i,e}Object.keys(x).forEach(function(e){I.fn[e]=x[e]});var A={name:"resize",create:function(){var e=this;re(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(e){var t=se();t.addEventListener("resize",e.resize.resizeHandler),t.addEventListener("orientationchange",e.resize.orientationChangeHandler)},destroy:function(e){var t=se();t.removeEventListener("resize",e.resize.resizeHandler),t.removeEventListener("orientationchange",e.resize.orientationChangeHandler)}}},M={attach:function(e,t){void 0===t&&(t={});var i=se(),n=this,a=new(i.MutationObserver||i.WebkitMutationObserver)(function(e){if(1!==e.length){var t=function(){n.emit("observerUpdate",e[0])};i.requestAnimationFrame?i.requestAnimationFrame(t):i.setTimeout(t,0)}else n.emit("observerUpdate",e[0])});a.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),n.observer.observers.push(a)},init:function(){if(this.support.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:this.params.observeSlideChildren}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},k={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){E(this,{observer:t(t({},M),{},{observers:[]})})},on:{init:function(e){e.observer.init()},destroy:function(e){e.observer.destroy()}}};function O(){var e=this.params,t=this.el;if(!t||0!==t.offsetWidth){e.breakpoints&&this.setBreakpoint();var i=this.allowSlideNext,n=this.allowSlidePrev,a=this.snapGrid;this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),this.updateSlidesClasses(),("auto"===e.slidesPerView||1<e.slidesPerView)&&this.isEnd&&!this.isBeginning&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0),this.autoplay&&this.autoplay.running&&this.autoplay.paused&&this.autoplay.run(),this.allowSlidePrev=n,this.allowSlideNext=i,this.params.watchOverflow&&a!==this.snapGrid&&this.checkOverflow()}}var D=!1;function P(){}var N,R={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,width:null,height:null,preventInteractionOnTransition:!1,userAgent:null,url:null,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,slidesPerGroupSkip:0,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,loopPreventsSlide:!0,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0,_emitClasses:!1},z={modular:{useParams:function(i){var n=this;n.modules&&Object.keys(n.modules).forEach(function(e){var t=n.modules[e];t.params&&re(i,t.params)})},useModules:function(n){void 0===n&&(n={});var a=this;a.modules&&Object.keys(a.modules).forEach(function(e){var t=a.modules[e],i=n[e]||{};t.on&&a.on&&Object.keys(t.on).forEach(function(e){a.on(e,t.on[e])}),t.create&&t.create.bind(a)(i)})}},eventsEmitter:{on:function(e,t,i){var n=this;if("function"!=typeof t)return n;var a=i?"unshift":"push";return e.split(" ").forEach(function(e){n.eventsListeners[e]||(n.eventsListeners[e]=[]),n.eventsListeners[e][a](t)}),n},once:function(n,a,e){var s=this;if("function"!=typeof a)return s;function r(){s.off(n,r),r.__emitterProxy&&delete r.__emitterProxy;for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];a.apply(s,t)}return r.__emitterProxy=a,s.on(n,r,e)},onAny:function(e,t){if("function"!=typeof e)return this;var i=t?"unshift":"push";return this.eventsAnyListeners.indexOf(e)<0&&this.eventsAnyListeners[i](e),this},offAny:function(e){if(!this.eventsAnyListeners)return this;var t=this.eventsAnyListeners.indexOf(e);return 0<=t&&this.eventsAnyListeners.splice(t,1),this},off:function(e,n){var a=this;return a.eventsListeners&&e.split(" ").forEach(function(i){void 0===n?a.eventsListeners[i]=[]:a.eventsListeners[i]&&a.eventsListeners[i].forEach(function(e,t){(e===n||e.__emitterProxy&&e.__emitterProxy===n)&&a.eventsListeners[i].splice(t,1)})}),a},emit:function(){var e,i,n,a=this;if(!a.eventsListeners)return a;for(var t=arguments.length,s=new Array(t),r=0;r<t;r++)s[r]=arguments[r];return n="string"==typeof s[0]||Array.isArray(s[0])?(e=s[0],i=s.slice(1,s.length),a):(e=s[0].events,i=s[0].data,s[0].context||a),i.unshift(n),(Array.isArray(e)?e:e.split(" ")).forEach(function(e){if(a.eventsListeners&&a.eventsListeners[e]){var t=[];a.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(n,i)})}}),a}},update:{updateSize:function(){var e,t,i=this.$el;e=void 0!==this.params.width&&null!==this.params.width?this.params.width:i[0].clientWidth,t=void 0!==this.params.height&&null!==this.params.width?this.params.height:i[0].clientHeight,0===e&&this.isHorizontal()||0===t&&this.isVertical()||(e=e-parseInt(i.css("padding-left")||0,10)-parseInt(i.css("padding-right")||0,10),t=t-parseInt(i.css("padding-top")||0,10)-parseInt(i.css("padding-bottom")||0,10),Number.isNaN(e)&&(e=0),Number.isNaN(t)&&(t=0),re(this,{width:e,height:t,size:this.isHorizontal()?e:t}))},updateSlides:function(){var e=se(),i=this.params,t=this.$wrapperEl,n=this.size,a=this.rtlTranslate,s=this.wrongRTL,r=this.virtual&&i.virtual.enabled,o=r?this.virtual.slides.length:this.slides.length,l=t.children("."+this.params.slideClass),c=r?this.virtual.slides.length:l.length,u=[],h=[],d=[];function p(e,t){return!i.cssMode||t!==l.length-1}var f=i.slidesOffsetBefore;"function"==typeof f&&(f=i.slidesOffsetBefore.call(this));var m=i.slidesOffsetAfter;"function"==typeof m&&(m=i.slidesOffsetAfter.call(this));var g=this.snapGrid.length,v=this.snapGrid.length,y=i.spaceBetween,b=-f,w=0,x=0;if(void 0!==n){var C,S;"string"==typeof y&&0<=y.indexOf("%")&&(y=parseFloat(y.replace("%",""))/100*n),this.virtualSize=-y,a?l.css({marginLeft:"",marginTop:""}):l.css({marginRight:"",marginBottom:""}),1<i.slidesPerColumn&&(C=Math.floor(c/i.slidesPerColumn)===c/this.params.slidesPerColumn?c:Math.ceil(c/i.slidesPerColumn)*i.slidesPerColumn,"auto"!==i.slidesPerView&&"row"===i.slidesPerColumnFill&&(C=Math.max(C,i.slidesPerView*i.slidesPerColumn)));for(var E,T=i.slidesPerColumn,A=C/T,M=Math.floor(c/i.slidesPerColumn),k=0;k<c;k+=1){S=0;var O=l.eq(k);if(1<i.slidesPerColumn){var D=void 0,I=void 0,P=void 0;if("row"===i.slidesPerColumnFill&&1<i.slidesPerGroup){var N=Math.floor(k/(i.slidesPerGroup*i.slidesPerColumn)),L=k-i.slidesPerColumn*i.slidesPerGroup*N,B=0===N?i.slidesPerGroup:Math.min(Math.ceil((c-N*T*i.slidesPerGroup)/T),i.slidesPerGroup);D=(I=L-(P=Math.floor(L/B))*B+N*i.slidesPerGroup)+P*C/T,O.css({"-webkit-box-ordinal-group":D,"-moz-box-ordinal-group":D,"-ms-flex-order":D,"-webkit-order":D,order:D})}else"column"===i.slidesPerColumnFill?(P=k-(I=Math.floor(k/T))*T,(M<I||I===M&&P===T-1)&&(P+=1)>=T&&(P=0,I+=1)):I=k-(P=Math.floor(k/A))*A;O.css("margin-"+(this.isHorizontal()?"top":"left"),0!==P&&i.spaceBetween&&i.spaceBetween+"px")}if("none"!==O.css("display")){if("auto"===i.slidesPerView){var R=e.getComputedStyle(O[0],null),z=O[0].style.transform,F=O[0].style.webkitTransform;if(z&&(O[0].style.transform="none"),F&&(O[0].style.webkitTransform="none"),i.roundLengths)S=this.isHorizontal()?O.outerWidth(!0):O.outerHeight(!0);else if(this.isHorizontal()){var j=parseFloat(R.getPropertyValue("width")||0),H=parseFloat(R.getPropertyValue("padding-left")||0),$=parseFloat(R.getPropertyValue("padding-right")||0),_=parseFloat(R.getPropertyValue("margin-left")||0),q=parseFloat(R.getPropertyValue("margin-right")||0),G=R.getPropertyValue("box-sizing");S=G&&"border-box"===G?j+_+q:j+H+$+_+q}else{var W=parseFloat(R.getPropertyValue("height")||0),X=parseFloat(R.getPropertyValue("padding-top")||0),V=parseFloat(R.getPropertyValue("padding-bottom")||0),U=parseFloat(R.getPropertyValue("margin-top")||0),Y=parseFloat(R.getPropertyValue("margin-bottom")||0),K=R.getPropertyValue("box-sizing");S=K&&"border-box"===K?W+U+Y:W+X+V+U+Y}z&&(O[0].style.transform=z),F&&(O[0].style.webkitTransform=F),i.roundLengths&&(S=Math.floor(S))}else S=(n-(i.slidesPerView-1)*y)/i.slidesPerView,i.roundLengths&&(S=Math.floor(S)),l[k]&&(this.isHorizontal()?l[k].style.width=S+"px":l[k].style.height=S+"px");l[k]&&(l[k].swiperSlideSize=S),d.push(S),i.centeredSlides?(b=b+S/2+w/2+y,0===w&&0!==k&&(b=b-n/2-y),0===k&&(b=b-n/2-y),Math.abs(b)<.001&&(b=0),i.roundLengths&&(b=Math.floor(b)),x%i.slidesPerGroup==0&&u.push(b),h.push(b)):(i.roundLengths&&(b=Math.floor(b)),(x-Math.min(this.params.slidesPerGroupSkip,x))%this.params.slidesPerGroup==0&&u.push(b),h.push(b),b=b+S+y),this.virtualSize+=S+y,w=S,x+=1}}if(this.virtualSize=Math.max(this.virtualSize,n)+m,a&&s&&("slide"===i.effect||"coverflow"===i.effect)&&t.css({width:this.virtualSize+i.spaceBetween+"px"}),i.setWrapperSize&&(this.isHorizontal()?t.css({width:this.virtualSize+i.spaceBetween+"px"}):t.css({height:this.virtualSize+i.spaceBetween+"px"})),1<i.slidesPerColumn&&(this.virtualSize=(S+i.spaceBetween)*C,this.virtualSize=Math.ceil(this.virtualSize/i.slidesPerColumn)-i.spaceBetween,this.isHorizontal()?t.css({width:this.virtualSize+i.spaceBetween+"px"}):t.css({height:this.virtualSize+i.spaceBetween+"px"}),i.centeredSlides)){E=[];for(var Q=0;Q<u.length;Q+=1){var Z=u[Q];i.roundLengths&&(Z=Math.floor(Z)),u[Q]<this.virtualSize+u[0]&&E.push(Z)}u=E}if(!i.centeredSlides){E=[];for(var J=0;J<u.length;J+=1){var ee=u[J];i.roundLengths&&(ee=Math.floor(ee)),u[J]<=this.virtualSize-n&&E.push(ee)}u=E,1<Math.floor(this.virtualSize-n)-Math.floor(u[u.length-1])&&u.push(this.virtualSize-n)}if(0===u.length&&(u=[0]),0!==i.spaceBetween&&(this.isHorizontal()?a?l.filter(p).css({marginLeft:y+"px"}):l.filter(p).css({marginRight:y+"px"}):l.filter(p).css({marginBottom:y+"px"})),i.centeredSlides&&i.centeredSlidesBounds){var te=0;d.forEach(function(e){te+=e+(i.spaceBetween?i.spaceBetween:0)});var ie=(te-=i.spaceBetween)-n;u=u.map(function(e){return e<0?-f:ie<e?ie+m:e})}if(i.centerInsufficientSlides){var ne=0;if(d.forEach(function(e){ne+=e+(i.spaceBetween?i.spaceBetween:0)}),(ne-=i.spaceBetween)<n){var ae=(n-ne)/2;u.forEach(function(e,t){u[t]=e-ae}),h.forEach(function(e,t){h[t]=e+ae})}}re(this,{slides:l,snapGrid:u,slidesGrid:h,slidesSizesGrid:d}),c!==o&&this.emit("slidesLengthChange"),u.length!==g&&(this.params.watchOverflow&&this.checkOverflow(),this.emit("snapGridLengthChange")),h.length!==v&&this.emit("slidesGridLengthChange"),(i.watchSlidesProgress||i.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i=[],n=0;if("number"==typeof e?this.setTransition(e):!0===e&&this.setTransition(this.params.speed),"auto"!==this.params.slidesPerView&&1<this.params.slidesPerView)if(this.params.centeredSlides)this.visibleSlides.each(function(e){i.push(e)});else for(t=0;t<Math.ceil(this.params.slidesPerView);t+=1){var a=this.activeIndex+t;if(a>this.slides.length)break;i.push(this.slides.eq(a)[0])}else i.push(this.slides.eq(this.activeIndex)[0]);for(t=0;t<i.length;t+=1)if(void 0!==i[t]){var s=i[t].offsetHeight;n=n<s?s:n}n&&this.$wrapperEl.css("height",n+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this.params,i=this.slides,n=this.rtlTranslate;if(0!==i.length){void 0===i[0].swiperSlideOffset&&this.updateSlidesOffset();var a=-e;n&&(a=e),i.removeClass(t.slideVisibleClass),this.visibleSlidesIndexes=[],this.visibleSlides=[];for(var s=0;s<i.length;s+=1){var r=i[s],o=(a+(t.centeredSlides?this.minTranslate():0)-r.swiperSlideOffset)/(r.swiperSlideSize+t.spaceBetween);if(t.watchSlidesVisibility||t.centeredSlides&&t.autoHeight){var l=-(a-r.swiperSlideOffset),c=l+this.slidesSizesGrid[s];(0<=l&&l<this.size-1||1<c&&c<=this.size||l<=0&&c>=this.size)&&(this.visibleSlides.push(r),this.visibleSlidesIndexes.push(s),i.eq(s).addClass(t.slideVisibleClass))}r.progress=n?-o:o}this.visibleSlides=I(this.visibleSlides)}},updateProgress:function(e){if(void 0===e){var t=this.rtlTranslate?-1:1;e=this&&this.translate&&this.translate*t||0}var i=this.params,n=this.maxTranslate()-this.minTranslate(),a=this.progress,s=this.isBeginning,r=this.isEnd,o=s,l=r;r=0==n?s=!(a=0):(s=(a=(e-this.minTranslate())/n)<=0,1<=a),re(this,{progress:a,isBeginning:s,isEnd:r}),(i.watchSlidesProgress||i.watchSlidesVisibility||i.centeredSlides&&i.autoHeight)&&this.updateSlidesProgress(e),s&&!o&&this.emit("reachBeginning toEdge"),r&&!l&&this.emit("reachEnd toEdge"),(o&&!s||l&&!r)&&this.emit("fromEdge"),this.emit("progress",a)},updateSlidesClasses:function(){var e,t=this.slides,i=this.params,n=this.$wrapperEl,a=this.activeIndex,s=this.realIndex,r=this.virtual&&i.virtual.enabled;t.removeClass(i.slideActiveClass+" "+i.slideNextClass+" "+i.slidePrevClass+" "+i.slideDuplicateActiveClass+" "+i.slideDuplicateNextClass+" "+i.slideDuplicatePrevClass),(e=r?this.$wrapperEl.find("."+i.slideClass+'[data-swiper-slide-index="'+a+'"]'):t.eq(a)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?n.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+s+'"]').addClass(i.slideDuplicateActiveClass):n.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+s+'"]').addClass(i.slideDuplicateActiveClass));var o=e.nextAll("."+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===o.length&&(o=t.eq(0)).addClass(i.slideNextClass);var l=e.prevAll("."+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===l.length&&(l=t.eq(-1)).addClass(i.slidePrevClass),i.loop&&(o.hasClass(i.slideDuplicateClass)?n.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass):n.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass),l.hasClass(i.slideDuplicateClass)?n.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass):n.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass)),this.emitSlidesClasses()},updateActiveIndex:function(e){var t,i=this.rtlTranslate?this.translate:-this.translate,n=this.slidesGrid,a=this.snapGrid,s=this.params,r=this.activeIndex,o=this.realIndex,l=this.snapIndex,c=e;if(void 0===c){for(var u=0;u<n.length;u+=1)void 0!==n[u+1]?i>=n[u]&&i<n[u+1]-(n[u+1]-n[u])/2?c=u:i>=n[u]&&i<n[u+1]&&(c=u+1):i>=n[u]&&(c=u);s.normalizeSlideIndex&&(c<0||void 0===c)&&(c=0)}if(0<=a.indexOf(i))t=a.indexOf(i);else{var h=Math.min(s.slidesPerGroupSkip,c);t=h+Math.floor((c-h)/s.slidesPerGroup)}if(t>=a.length&&(t=a.length-1),c!==r){var d=parseInt(this.slides.eq(c).attr("data-swiper-slide-index")||c,10);re(this,{snapIndex:t,realIndex:d,previousIndex:r,activeIndex:c}),this.emit("activeIndexChange"),this.emit("snapIndexChange"),o!==d&&this.emit("realIndexChange"),(this.initialized||this.params.runCallbacksOnInit)&&this.emit("slideChange")}else t!==l&&(this.snapIndex=t,this.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this.params,i=I(e.target).closest("."+t.slideClass)[0],n=!1;if(i)for(var a=0;a<this.slides.length;a+=1)this.slides[a]===i&&(n=!0);if(!i||!n)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=i,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(I(i).attr("data-swiper-slide-index"),10):this.clickedIndex=I(i).index(),t.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}},translate:{getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtlTranslate,n=this.translate,a=this.$wrapperEl;if(t.virtualTranslate)return i?-n:n;if(t.cssMode)return n;var s=C(a[0],e);return i&&(s=-s),s||0},setTranslate:function(e,t){var i=this.rtlTranslate,n=this.params,a=this.$wrapperEl,s=this.wrapperEl,r=this.progress,o=0,l=0;this.isHorizontal()?o=i?-e:e:l=e,n.roundLengths&&(o=Math.floor(o),l=Math.floor(l)),n.cssMode?s[this.isHorizontal()?"scrollLeft":"scrollTop"]=this.isHorizontal()?-o:-l:n.virtualTranslate||a.transform("translate3d("+o+"px, "+l+"px, 0px)"),this.previousTranslate=this.translate,this.translate=this.isHorizontal()?o:l;var c=this.maxTranslate()-this.minTranslate();(0==c?0:(e-this.minTranslate())/c)!==r&&this.updateProgress(e),this.emit("setTranslate",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,t,i,n,a){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0),void 0===n&&(n=!0);var s=this,r=s.params,o=s.wrapperEl;if(s.animating&&r.preventInteractionOnTransition)return!1;var l,c=s.minTranslate(),u=s.maxTranslate();if(l=n&&c<e?c:n&&e<u?u:e,s.updateProgress(l),r.cssMode){var h,d=s.isHorizontal();return 0===t?o[d?"scrollLeft":"scrollTop"]=-l:o.scrollTo?o.scrollTo(((h={})[d?"left":"top"]=-l,h.behavior="smooth",h)):o[d?"scrollLeft":"scrollTop"]=-l,!0}return 0===t?(s.setTransition(0),s.setTranslate(l),i&&(s.emit("beforeTransitionStart",t,a),s.emit("transitionEnd"))):(s.setTransition(t),s.setTranslate(l),i&&(s.emit("beforeTransitionStart",t,a),s.emit("transitionStart")),s.animating||(s.animating=!0,s.onTranslateToWrapperTransitionEnd||(s.onTranslateToWrapperTransitionEnd=function(e){s&&!s.destroyed&&e.target===this&&(s.$wrapperEl[0].removeEventListener("transitionend",s.onTranslateToWrapperTransitionEnd),s.$wrapperEl[0].removeEventListener("webkitTransitionEnd",s.onTranslateToWrapperTransitionEnd),s.onTranslateToWrapperTransitionEnd=null,delete s.onTranslateToWrapperTransitionEnd,i&&s.emit("transitionEnd"))}),s.$wrapperEl[0].addEventListener("transitionend",s.onTranslateToWrapperTransitionEnd),s.$wrapperEl[0].addEventListener("webkitTransitionEnd",s.onTranslateToWrapperTransitionEnd))),!0}},transition:{setTransition:function(e,t){this.params.cssMode||this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,n=this.params,a=this.previousIndex;if(!n.cssMode){n.autoHeight&&this.updateAutoHeight();var s=t;if(s=s||(a<i?"next":i<a?"prev":"reset"),this.emit("transitionStart"),e&&i!==a){if("reset"===s)return void this.emit("slideResetTransitionStart");this.emit("slideChangeTransitionStart"),"next"===s?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart")}}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,n=this.previousIndex,a=this.params;if(this.animating=!1,!a.cssMode){this.setTransition(0);var s=t;if(s=s||(n<i?"next":i<n?"prev":"reset"),this.emit("transitionEnd"),e&&i!==n){if("reset"===s)return void this.emit("slideResetTransitionEnd");this.emit("slideChangeTransitionEnd"),"next"===s?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd")}}}},slide:{slideTo:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var a=this,s=e;s<0&&(s=0);var r=a.params,o=a.snapGrid,l=a.slidesGrid,c=a.previousIndex,u=a.activeIndex,h=a.rtlTranslate,d=a.wrapperEl;if(a.animating&&r.preventInteractionOnTransition)return!1;var p=Math.min(a.params.slidesPerGroupSkip,s),f=p+Math.floor((s-p)/a.params.slidesPerGroup);f>=o.length&&(f=o.length-1),(u||r.initialSlide||0)===(c||0)&&i&&a.emit("beforeSlideChangeStart");var m,g=-o[f];if(a.updateProgress(g),r.normalizeSlideIndex)for(var v=0;v<l.length;v+=1)-Math.floor(100*g)>=Math.floor(100*l[v])&&(s=v);if(a.initialized&&s!==u){if(!a.allowSlideNext&&g<a.translate&&g<a.minTranslate())return!1;if(!a.allowSlidePrev&&g>a.translate&&g>a.maxTranslate()&&(u||0)!==s)return!1}if(m=u<s?"next":s<u?"prev":"reset",h&&-g===a.translate||!h&&g===a.translate)return a.updateActiveIndex(s),r.autoHeight&&a.updateAutoHeight(),a.updateSlidesClasses(),"slide"!==r.effect&&a.setTranslate(g),"reset"!=m&&(a.transitionStart(i,m),a.transitionEnd(i,m)),!1;if(r.cssMode){var y,b=a.isHorizontal(),w=-g;return h&&(w=d.scrollWidth-d.offsetWidth-w),0===t?d[b?"scrollLeft":"scrollTop"]=w:d.scrollTo?d.scrollTo(((y={})[b?"left":"top"]=w,y.behavior="smooth",y)):d[b?"scrollLeft":"scrollTop"]=w,!0}return 0===t?(a.setTransition(0),a.setTranslate(g),a.updateActiveIndex(s),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,n),a.transitionStart(i,m),a.transitionEnd(i,m)):(a.setTransition(t),a.setTranslate(g),a.updateActiveIndex(s),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,n),a.transitionStart(i,m),a.animating||(a.animating=!0,a.onSlideToWrapperTransitionEnd||(a.onSlideToWrapperTransitionEnd=function(e){a&&!a.destroyed&&e.target===this&&(a.$wrapperEl[0].removeEventListener("transitionend",a.onSlideToWrapperTransitionEnd),a.$wrapperEl[0].removeEventListener("webkitTransitionEnd",a.onSlideToWrapperTransitionEnd),a.onSlideToWrapperTransitionEnd=null,delete a.onSlideToWrapperTransitionEnd,a.transitionEnd(i,m))}),a.$wrapperEl[0].addEventListener("transitionend",a.onSlideToWrapperTransitionEnd),a.$wrapperEl[0].addEventListener("webkitTransitionEnd",a.onSlideToWrapperTransitionEnd))),!0},slideToLoop:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var a=e;return this.params.loop&&(a+=this.loopedSlides),this.slideTo(a,t,i,n)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this.params,a=this.animating,s=this.activeIndex<n.slidesPerGroupSkip?1:n.slidesPerGroup;if(n.loop){if(a&&n.loopPreventsSlide)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}return this.slideTo(this.activeIndex+s,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this.params,a=this.animating,s=this.snapGrid,r=this.slidesGrid,o=this.rtlTranslate;if(n.loop){if(a&&n.loopPreventsSlide)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}function l(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var c,u=l(o?this.translate:-this.translate),h=s.map(function(e){return l(e)}),d=(s[h.indexOf(u)],s[h.indexOf(u)-1]);return void 0===d&&n.cssMode&&s.forEach(function(e){!d&&e<=u&&(d=e)}),void 0!==d&&(c=r.indexOf(d))<0&&(c=this.activeIndex-1),this.slideTo(c,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i,n){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),void 0===n&&(n=.5);var a=this.activeIndex,s=Math.min(this.params.slidesPerGroupSkip,a),r=s+Math.floor((a-s)/this.params.slidesPerGroup),o=this.rtlTranslate?this.translate:-this.translate;if(o>=this.snapGrid[r]){var l=this.snapGrid[r];o-l>(this.snapGrid[r+1]-l)*n&&(a+=this.params.slidesPerGroup)}else{var c=this.snapGrid[r-1];o-c<=(this.snapGrid[r]-c)*n&&(a-=this.params.slidesPerGroup)}return a=Math.max(a,0),a=Math.min(a,this.slidesGrid.length-1),this.slideTo(a,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,n=t.$wrapperEl,a="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,s=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt(I(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?s<t.loopedSlides-a/2||s>t.slides.length-t.loopedSlides+a/2?(t.loopFix(),s=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),L(function(){t.slideTo(s)})):t.slideTo(s):s>t.slides.length-a?(t.loopFix(),s=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),L(function(){t.slideTo(s)})):t.slideTo(s)}else t.slideTo(s)}},loop:{loopCreate:function(){var n=this,e=w(),t=n.params,i=n.$wrapperEl;i.children("."+t.slideClass+"."+t.slideDuplicateClass).remove();var a=i.children("."+t.slideClass);if(t.loopFillGroupWithBlank){var s=t.slidesPerGroup-a.length%t.slidesPerGroup;if(s!==t.slidesPerGroup){for(var r=0;r<s;r+=1){var o=I(e.createElement("div")).addClass(t.slideClass+" "+t.slideBlankClass);i.append(o)}a=i.children("."+t.slideClass)}}"auto"!==t.slidesPerView||t.loopedSlides||(t.loopedSlides=a.length),n.loopedSlides=Math.ceil(parseFloat(t.loopedSlides||t.slidesPerView,10)),n.loopedSlides+=t.loopAdditionalSlides,n.loopedSlides>a.length&&(n.loopedSlides=a.length);var l=[],c=[];a.each(function(e,t){var i=I(e);t<n.loopedSlides&&c.push(e),t<a.length&&t>=a.length-n.loopedSlides&&l.push(e),i.attr("data-swiper-slide-index",t)});for(var u=0;u<c.length;u+=1)i.append(I(c[u].cloneNode(!0)).addClass(t.slideDuplicateClass));for(var h=l.length-1;0<=h;h-=1)i.prepend(I(l[h].cloneNode(!0)).addClass(t.slideDuplicateClass))},loopFix:function(){this.emit("beforeLoopFix");var e,t=this.activeIndex,i=this.slides,n=this.loopedSlides,a=this.allowSlidePrev,s=this.allowSlideNext,r=this.snapGrid,o=this.rtlTranslate;this.allowSlidePrev=!0,this.allowSlideNext=!0;var l=-r[t]-this.getTranslate();t<n?(e=i.length-3*n+t,e+=n,this.slideTo(e,0,!1,!0)&&0!=l&&this.setTranslate((o?-this.translate:this.translate)-l)):t>=i.length-n&&(e=-i.length+t+n,e+=n,this.slideTo(e,0,!1,!0)&&0!=l&&this.setTranslate((o?-this.translate:this.translate)-l)),this.allowSlidePrev=a,this.allowSlideNext=s,this.emit("loopFix")},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass+",."+t.slideClass+"."+t.slideBlankClass).remove(),i.removeAttr("data-swiper-slide-index")}},grabCursor:{setGrabCursor:function(e){if(!(this.support.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked||this.params.cssMode)){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){this.support.touch||this.params.watchOverflow&&this.isLocked||this.params.cssMode||(this.el.style.cursor="")}},manipulation:{appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var n=0;n<e.length;n+=1)e[n]&&t.append(e[n]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&this.support.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,n=this.activeIndex;t.loop&&this.loopDestroy();var a=n+1;if("object"==typeof e&&"length"in e){for(var s=0;s<e.length;s+=1)e[s]&&i.prepend(e[s]);a=n+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&this.support.observer||this.update(),this.slideTo(a,0,!1)},addSlide:function(e,t){var i=this.$wrapperEl,n=this.params,a=this.activeIndex;n.loop&&(a-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+n.slideClass));var s=this.slides.length;if(e<=0)this.prependSlide(t);else if(s<=e)this.appendSlide(t);else{for(var r=e<a?a+1:a,o=[],l=s-1;e<=l;l-=1){var c=this.slides.eq(l);c.remove(),o.unshift(c)}if("object"==typeof t&&"length"in t){for(var u=0;u<t.length;u+=1)t[u]&&i.append(t[u]);r=e<a?a+t.length:a}else i.append(t);for(var h=0;h<o.length;h+=1)i.append(o[h]);n.loop&&this.loopCreate(),n.observer&&this.support.observer||this.update(),n.loop?this.slideTo(r+this.loopedSlides,0,!1):this.slideTo(r,0,!1)}},removeSlide:function(e){var t=this.params,i=this.$wrapperEl,n=this.activeIndex;t.loop&&(n-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+t.slideClass));var a,s=n;if("object"==typeof e&&"length"in e){for(var r=0;r<e.length;r+=1)a=e[r],this.slides[a]&&this.slides.eq(a).remove(),a<s&&(s-=1);s=Math.max(s,0)}else a=e,this.slides[a]&&this.slides.eq(a).remove(),a<s&&(s-=1),s=Math.max(s,0);t.loop&&this.loopCreate(),t.observer&&this.support.observer||this.update(),t.loop?this.slideTo(s+this.loopedSlides,0,!1):this.slideTo(s,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},events:{attachEvents:function(){var e=w(),t=this.params,i=this.touchEvents,n=this.el,a=this.wrapperEl,s=this.device,r=this.support;this.onTouchStart=function(e){var t=w(),i=se(),n=this.touchEventsData,a=this.params,s=this.touches;if(!this.animating||!a.preventInteractionOnTransition){var r=e;r.originalEvent&&(r=r.originalEvent);var o=I(r.target);if(("wrapper"!==a.touchEventsTarget||o.closest(this.wrapperEl).length)&&(n.isTouchEvent="touchstart"===r.type,(n.isTouchEvent||!("which"in r)||3!==r.which)&&!(!n.isTouchEvent&&"button"in r&&0<r.button||n.isTouched&&n.isMoved)))if(a.noSwiping&&o.closest(a.noSwipingSelector?a.noSwipingSelector:"."+a.noSwipingClass)[0])this.allowClick=!0;else if(!a.swipeHandler||o.closest(a.swipeHandler)[0]){s.currentX="touchstart"===r.type?r.targetTouches[0].pageX:r.pageX,s.currentY="touchstart"===r.type?r.targetTouches[0].pageY:r.pageY;var l=s.currentX,c=s.currentY,u=a.edgeSwipeDetection||a.iOSEdgeSwipeDetection,h=a.edgeSwipeThreshold||a.iOSEdgeSwipeThreshold;if(!u||!(l<=h||l>=i.screen.width-h)){if(re(n,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),s.startX=l,s.startY=c,n.touchStartTime=B(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,0<a.threshold&&(n.allowThresholdMove=!1),"touchstart"!==r.type){var d=!0;o.is(n.formElements)&&(d=!1),t.activeElement&&I(t.activeElement).is(n.formElements)&&t.activeElement!==o[0]&&t.activeElement.blur();var p=d&&this.allowTouchMove&&a.touchStartPreventDefault;(a.touchStartForcePreventDefault||p)&&r.preventDefault()}this.emit("touchStart",r)}}}}.bind(this),this.onTouchMove=function(e){var t=w(),i=this.touchEventsData,n=this.params,a=this.touches,s=this.rtlTranslate,r=e;if(r.originalEvent&&(r=r.originalEvent),i.isTouched){if(!i.isTouchEvent||"touchmove"===r.type){var o="touchmove"===r.type&&r.targetTouches&&(r.targetTouches[0]||r.changedTouches[0]),l="touchmove"===r.type?o.pageX:r.pageX,c="touchmove"===r.type?o.pageY:r.pageY;if(r.preventedByNestedSwiper)return a.startX=l,void(a.startY=c);if(!this.allowTouchMove)return this.allowClick=!1,void(i.isTouched&&(re(a,{startX:l,startY:c,currentX:l,currentY:c}),i.touchStartTime=B()));if(i.isTouchEvent&&n.touchReleaseOnEdges&&!n.loop)if(this.isVertical()){if(c<a.startY&&this.translate<=this.maxTranslate()||c>a.startY&&this.translate>=this.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(l<a.startX&&this.translate<=this.maxTranslate()||l>a.startX&&this.translate>=this.minTranslate())return;if(i.isTouchEvent&&t.activeElement&&r.target===t.activeElement&&I(r.target).is(i.formElements))return i.isMoved=!0,void(this.allowClick=!1);if(i.allowTouchCallbacks&&this.emit("touchMove",r),!(r.targetTouches&&1<r.targetTouches.length)){a.currentX=l,a.currentY=c;var u,h=a.currentX-a.startX,d=a.currentY-a.startY;if(!(this.params.threshold&&Math.sqrt(Math.pow(h,2)+Math.pow(d,2))<this.params.threshold))if(void 0===i.isScrolling&&(this.isHorizontal()&&a.currentY===a.startY||this.isVertical()&&a.currentX===a.startX?i.isScrolling=!1:25<=h*h+d*d&&(u=180*Math.atan2(Math.abs(d),Math.abs(h))/Math.PI,i.isScrolling=this.isHorizontal()?u>n.touchAngle:90-u>n.touchAngle)),i.isScrolling&&this.emit("touchMoveOpposite",r),void 0===i.startMoving&&(a.currentX===a.startX&&a.currentY===a.startY||(i.startMoving=!0)),i.isScrolling)i.isTouched=!1;else if(i.startMoving){this.allowClick=!1,!n.cssMode&&r.cancelable&&r.preventDefault(),n.touchMoveStopPropagation&&!n.nested&&r.stopPropagation(),i.isMoved||(n.loop&&this.loopFix(),i.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger("webkitTransitionEnd transitionend"),i.allowMomentumBounce=!1,!n.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit("sliderFirstMove",r)),this.emit("sliderMove",r),i.isMoved=!0;var p=this.isHorizontal()?h:d;a.diff=p,p*=n.touchRatio,s&&(p=-p),this.swipeDirection=0<p?"prev":"next",i.currentTranslate=p+i.startTranslate;var f=!0,m=n.resistanceRatio;if(n.touchReleaseOnEdges&&(m=0),0<p&&i.currentTranslate>this.minTranslate()?(f=!1,n.resistance&&(i.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+i.startTranslate+p,m))):p<0&&i.currentTranslate<this.maxTranslate()&&(f=!1,n.resistance&&(i.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-i.startTranslate-p,m))),f&&(r.preventedByNestedSwiper=!0),!this.allowSlideNext&&"next"===this.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!this.allowSlidePrev&&"prev"===this.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),0<n.threshold){if(!(Math.abs(p)>n.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,a.startX=a.currentX,a.startY=a.currentY,i.currentTranslate=i.startTranslate,void(a.diff=this.isHorizontal()?a.currentX-a.startX:a.currentY-a.startY)}n.followFinger&&!n.cssMode&&((n.freeMode||n.watchSlidesProgress||n.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),n.freeMode&&(0===i.velocities.length&&i.velocities.push({position:a[this.isHorizontal()?"startX":"startY"],time:i.touchStartTime}),i.velocities.push({position:a[this.isHorizontal()?"currentX":"currentY"],time:B()})),this.updateProgress(i.currentTranslate),this.setTranslate(i.currentTranslate))}}}}else i.startMoving&&i.isScrolling&&this.emit("touchMoveOpposite",r)}.bind(this),this.onTouchEnd=function(e){var t=this,i=t.touchEventsData,n=t.params,a=t.touches,s=t.rtlTranslate,r=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,c=e;if(c.originalEvent&&(c=c.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",c),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&n.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);n.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var u,h=B(),d=h-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(c),t.emit("tap click",c),d<300&&h-i.lastClickTime<300&&t.emit("doubleTap doubleClick",c)),i.lastClickTime=B(),L(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===a.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,u=n.followFinger?s?t.translate:-t.translate:-i.currentTranslate,!n.cssMode)if(n.freeMode){if(u<-t.minTranslate())return void t.slideTo(t.activeIndex);if(u>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(n.freeModeMomentum){if(1<i.velocities.length){var p=i.velocities.pop(),f=i.velocities.pop(),m=p.position-f.position,g=p.time-f.time;t.velocity=m/g,t.velocity/=2,Math.abs(t.velocity)<n.freeModeMinimumVelocity&&(t.velocity=0),(150<g||300<B()-p.time)&&(t.velocity=0)}else t.velocity=0;t.velocity*=n.freeModeMomentumVelocityRatio,i.velocities.length=0;var v=1e3*n.freeModeMomentumRatio,y=t.velocity*v,b=t.translate+y;s&&(b=-b);var w,x,C=!1,S=20*Math.abs(t.velocity)*n.freeModeMomentumBounceRatio;if(b<t.maxTranslate())n.freeModeMomentumBounce?(b+t.maxTranslate()<-S&&(b=t.maxTranslate()-S),w=t.maxTranslate(),C=!0,i.allowMomentumBounce=!0):b=t.maxTranslate(),n.loop&&n.centeredSlides&&(x=!0);else if(b>t.minTranslate())n.freeModeMomentumBounce?(b-t.minTranslate()>S&&(b=t.minTranslate()+S),w=t.minTranslate(),C=!0,i.allowMomentumBounce=!0):b=t.minTranslate(),n.loop&&n.centeredSlides&&(x=!0);else if(n.freeModeSticky){for(var E,T=0;T<l.length;T+=1)if(l[T]>-b){E=T;break}b=-(b=Math.abs(l[E]-b)<Math.abs(l[E-1]-b)||"next"===t.swipeDirection?l[E]:l[E-1])}if(x&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity){if(v=s?Math.abs((-b-t.translate)/t.velocity):Math.abs((b-t.translate)/t.velocity),n.freeModeSticky){var A=Math.abs((s?-b:b)-t.translate),M=t.slidesSizesGrid[t.activeIndex];v=A<M?n.speed:A<2*M?1.5*n.speed:2.5*n.speed}}else if(n.freeModeSticky)return void t.slideToClosest();n.freeModeMomentumBounce&&C?(t.updateProgress(w),t.setTransition(v),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(n.speed),setTimeout(function(){t.setTranslate(w),r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()})},0))})):t.velocity?(t.updateProgress(b),t.setTransition(v),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(b),t.updateActiveIndex(),t.updateSlidesClasses()}else if(n.freeModeSticky)return void t.slideToClosest();(!n.freeModeMomentum||d>=n.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var k=0,O=t.slidesSizesGrid[0],D=0;D<o.length;D+=D<n.slidesPerGroupSkip?1:n.slidesPerGroup){var I=D<n.slidesPerGroupSkip-1?1:n.slidesPerGroup;void 0!==o[D+I]?u>=o[D]&&u<o[D+I]&&(O=o[(k=D)+I]-o[D]):u>=o[D]&&(k=D,O=o[o.length-1]-o[o.length-2])}var P=(u-o[k])/O,N=k<n.slidesPerGroupSkip-1?1:n.slidesPerGroup;if(d>n.longSwipesMs){if(!n.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(P>=n.longSwipesRatio?t.slideTo(k+N):t.slideTo(k)),"prev"===t.swipeDirection&&(P>1-n.longSwipesRatio?t.slideTo(k+N):t.slideTo(k))}else{if(!n.shortSwipes)return void t.slideTo(t.activeIndex);!t.navigation||c.target!==t.navigation.nextEl&&c.target!==t.navigation.prevEl?("next"===t.swipeDirection&&t.slideTo(k+N),"prev"===t.swipeDirection&&t.slideTo(k)):c.target===t.navigation.nextEl?t.slideTo(k+N):t.slideTo(k)}}}.bind(this),t.cssMode&&(this.onScroll=function(){var e=this.wrapperEl,t=this.rtlTranslate;this.previousTranslate=this.translate,this.isHorizontal()?this.translate=t?e.scrollWidth-e.offsetWidth-e.scrollLeft:-e.scrollLeft:this.translate=-e.scrollTop,-0===this.translate&&(this.translate=0),this.updateActiveIndex(),this.updateSlidesClasses();var i=this.maxTranslate()-this.minTranslate();(0==i?0:(this.translate-this.minTranslate())/i)!==this.progress&&this.updateProgress(t?-this.translate:this.translate),this.emit("setTranslate",this.translate,!1)}.bind(this)),this.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(this);var o=!!t.nested;if(!r.touch&&r.pointerEvents)n.addEventListener(i.start,this.onTouchStart,!1),e.addEventListener(i.move,this.onTouchMove,o),e.addEventListener(i.end,this.onTouchEnd,!1);else{if(r.touch){var l=!("touchstart"!==i.start||!r.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};n.addEventListener(i.start,this.onTouchStart,l),n.addEventListener(i.move,this.onTouchMove,r.passiveListener?{passive:!1,capture:o}:o),n.addEventListener(i.end,this.onTouchEnd,l),i.cancel&&n.addEventListener(i.cancel,this.onTouchEnd,l),D||(e.addEventListener("touchstart",P),D=!0)}(t.simulateTouch&&!s.ios&&!s.android||t.simulateTouch&&!r.touch&&s.ios)&&(n.addEventListener("mousedown",this.onTouchStart,!1),e.addEventListener("mousemove",this.onTouchMove,o),e.addEventListener("mouseup",this.onTouchEnd,!1))}(t.preventClicks||t.preventClicksPropagation)&&n.addEventListener("click",this.onClick,!0),t.cssMode&&a.addEventListener("scroll",this.onScroll),t.updateOnWindowResize?this.on(s.ios||s.android?"resize orientationchange observerUpdate":"resize observerUpdate",O,!0):this.on("observerUpdate",O,!0)},detachEvents:function(){var e=w(),t=this.params,i=this.touchEvents,n=this.el,a=this.wrapperEl,s=this.device,r=this.support,o=!!t.nested;if(!r.touch&&r.pointerEvents)n.removeEventListener(i.start,this.onTouchStart,!1),e.removeEventListener(i.move,this.onTouchMove,o),e.removeEventListener(i.end,this.onTouchEnd,!1);else{if(r.touch){var l=!("onTouchStart"!==i.start||!r.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};n.removeEventListener(i.start,this.onTouchStart,l),n.removeEventListener(i.move,this.onTouchMove,o),n.removeEventListener(i.end,this.onTouchEnd,l),i.cancel&&n.removeEventListener(i.cancel,this.onTouchEnd,l)}(t.simulateTouch&&!s.ios&&!s.android||t.simulateTouch&&!r.touch&&s.ios)&&(n.removeEventListener("mousedown",this.onTouchStart,!1),e.removeEventListener("mousemove",this.onTouchMove,o),e.removeEventListener("mouseup",this.onTouchEnd,!1))}(t.preventClicks||t.preventClicksPropagation)&&n.removeEventListener("click",this.onClick,!0),t.cssMode&&a.removeEventListener("scroll",this.onScroll),this.off(s.ios||s.android?"resize orientationchange observerUpdate":"resize observerUpdate",O)}},breakpoints:{setBreakpoint:function(){var e=this.activeIndex,t=this.initialized,i=this.loopedSlides,n=void 0===i?0:i,a=this.params,s=this.$el,r=a.breakpoints;if(r&&(!r||0!==Object.keys(r).length)){var o=this.getBreakpoint(r);if(o&&this.currentBreakpoint!==o){var l=o in r?r[o]:void 0;l&&["slidesPerView","spaceBetween","slidesPerGroup","slidesPerGroupSkip","slidesPerColumn"].forEach(function(e){var t=l[e];void 0!==t&&(l[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")});var c=l||this.originalParams,u=1<a.slidesPerColumn,h=1<c.slidesPerColumn;u&&!h?(s.removeClass(a.containerModifierClass+"multirow "+a.containerModifierClass+"multirow-column"),this.emitContainerClasses()):!u&&h&&(s.addClass(a.containerModifierClass+"multirow"),"column"===c.slidesPerColumnFill&&s.addClass(a.containerModifierClass+"multirow-column"),this.emitContainerClasses());var d=c.direction&&c.direction!==a.direction,p=a.loop&&(c.slidesPerView!==a.slidesPerView||d);d&&t&&this.changeDirection(),re(this.params,c),re(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=o,p&&t&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(e-n+this.loopedSlides,0,!1)),this.emit("breakpoint",c)}}},getBreakpoint:function(e){var i=se();if(e){var t=!1,n=Object.keys(e).map(function(e){if("string"!=typeof e||0!==e.indexOf("@"))return{value:e,point:e};var t=parseFloat(e.substr(1));return{value:i.innerHeight*t,point:e}});n.sort(function(e,t){return parseInt(e.value,10)-parseInt(t.value,10)});for(var a=0;a<n.length;a+=1){var s=n[a],r=s.point;s.value<=i.innerWidth&&(t=r)}return t||"max"}}},checkOverflow:{checkOverflow:function(){var e=this.params,t=this.isLocked,i=0<this.slides.length&&e.slidesOffsetBefore+e.spaceBetween*(this.slides.length-1)+this.slides[0].offsetWidth*this.slides.length;e.slidesOffsetBefore&&e.slidesOffsetAfter&&i?this.isLocked=i<=this.size:this.isLocked=1===this.snapGrid.length,this.allowSlideNext=!this.isLocked,this.allowSlidePrev=!this.isLocked,t!==this.isLocked&&this.emit(this.isLocked?"lock":"unlock"),t&&t!==this.isLocked&&(this.isEnd=!1,this.navigation&&this.navigation.update())}},classes:{addClasses:function(){var t=this.classNames,i=this.params,e=this.rtl,n=this.$el,a=this.device,s=[];s.push("initialized"),s.push(i.direction),i.freeMode&&s.push("free-mode"),i.autoHeight&&s.push("autoheight"),e&&s.push("rtl"),1<i.slidesPerColumn&&(s.push("multirow"),"column"===i.slidesPerColumnFill&&s.push("multirow-column")),a.android&&s.push("android"),a.ios&&s.push("ios"),i.cssMode&&s.push("css-mode"),s.forEach(function(e){t.push(i.containerModifierClass+e)}),n.addClass(t.join(" ")),this.emitContainerClasses()},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" ")),this.emitContainerClasses()}},images:{loadImage:function(e,t,i,n,a,s){var r,o=se();function l(){s&&s()}I(e).parent("picture")[0]||e.complete&&a?l():t?((r=new o.Image).onload=l,r.onerror=l,n&&(r.sizes=n),i&&(r.srcset=i),t&&(r.src=t)):l()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var n=e.imagesToLoad[i];e.loadImage(n,n.currentSrc||n.getAttribute("src"),n.srcset||n.getAttribute("srcset"),n.sizes||n.getAttribute("sizes"),!0,t)}}}},F={},j=((N=H.prototype).emitContainerClasses=function(){var t=this;if(t.params._emitClasses&&t.el){var e=t.el.className.split(" ").filter(function(e){return 0===e.indexOf("swiper-container")||0===e.indexOf(t.params.containerModifierClass)});t.emit("_containerClasses",e.join(" "))}},N.emitSlidesClasses=function(){var i=this;i.params._emitClasses&&i.el&&i.slides.each(function(e){var t=e.className.split(" ").filter(function(e){return 0===e.indexOf("swiper-slide")||0===e.indexOf(i.params.slideClass)});i.emit("_slideClass",e,t.join(" "))})},N.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,n=this.size,a=this.activeIndex,s=1;if(e.centeredSlides){for(var r,o=t[a].swiperSlideSize,l=a+1;l<t.length;l+=1)t[l]&&!r&&(s+=1,(o+=t[l].swiperSlideSize)>n&&(r=!0));for(var c=a-1;0<=c;c-=1)t[c]&&!r&&(s+=1,(o+=t[c].swiperSlideSize)>n&&(r=!0))}else for(var u=a+1;u<t.length;u+=1)i[u]-i[a]<n&&(s+=1);return s},N.update=function(){var i=this;if(i&&!i.destroyed){var e=i.snapGrid,t=i.params;t.breakpoints&&i.setBreakpoint(),i.updateSize(),i.updateSlides(),i.updateProgress(),i.updateSlidesClasses(),i.params.freeMode?(n(),i.params.autoHeight&&i.updateAutoHeight()):(("auto"===i.params.slidesPerView||1<i.params.slidesPerView)&&i.isEnd&&!i.params.centeredSlides?i.slideTo(i.slides.length-1,0,!1,!0):i.slideTo(i.activeIndex,0,!1,!0))||n(),t.watchOverflow&&e!==i.snapGrid&&i.checkOverflow(),i.emit("update")}function n(){var e=i.rtlTranslate?-1*i.translate:i.translate,t=Math.min(Math.max(e,i.maxTranslate()),i.minTranslate());i.setTranslate(t),i.updateActiveIndex(),i.updateSlidesClasses()}},N.changeDirection=function(t,e){void 0===e&&(e=!0);var i=this.params.direction;return(t=t||("horizontal"===i?"vertical":"horizontal"))===i||"horizontal"!==t&&"vertical"!==t||(this.$el.removeClass(""+this.params.containerModifierClass+i).addClass(""+this.params.containerModifierClass+t),this.emitContainerClasses(),this.params.direction=t,this.slides.each(function(e){"vertical"===t?e.style.width="":e.style.height=""}),this.emit("changeDirection"),e&&this.update()),this},N.init=function(){this.initialized||(this.emit("beforeInit"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit("init"))},N.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i,n=this,a=n.params,s=n.$el,r=n.$wrapperEl,o=n.slides;return void 0===n.params||n.destroyed||(n.emit("beforeDestroy"),n.initialized=!1,n.detachEvents(),a.loop&&n.loopDestroy(),t&&(n.removeClasses(),s.removeAttr("style"),r.removeAttr("style"),o&&o.length&&o.removeClass([a.slideVisibleClass,a.slideActiveClass,a.slideNextClass,a.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),n.emit("destroy"),Object.keys(n.eventsListeners).forEach(function(e){n.off(e)}),!1!==e&&(n.$el[0].swiper=null,i=n,Object.keys(i).forEach(function(e){try{i[e]=null}catch(e){}try{delete i[e]}catch(e){}})),n.destroyed=!0),null},H.extendDefaults=function(e){re(F,e)},H.installModule=function(e){H.prototype.modules||(H.prototype.modules={});var t=e.name||Object.keys(H.prototype.modules).length+"_"+B();H.prototype.modules[t]=e},H.use=function(e){return Array.isArray(e)?e.forEach(function(e){return H.installModule(e)}):H.installModule(e),H},null,e(H,[{key:"extendedDefaults",get:function(){return F}},{key:"defaults",get:function(){return R}}]),H);function H(){for(var e,a,t=arguments.length,i=new Array(t),n=0;n<t;n++)i[n]=arguments[n];a=re({},a=(a=1===i.length&&i[0].constructor&&i[0].constructor===Object?i[0]:(e=i[0],i[1]))||{}),e&&!a.el&&(a.el=e);var s=this;s.support=T(),s.device=function(e){return void 0===e&&(e={}),y||(t=(void 0===e?{}:e).userAgent,i=T(),n=se(),a=n.navigator.platform,s=t||n.navigator.userAgent,r={ios:!1,android:!1},o=n.screen.width,l=n.screen.height,c=s.match(/(Android);?[\s\/]+([\d.]+)?/),u=s.match(/(iPad).*OS\s([\d_]+)/),h=s.match(/(iPod)(.*OS\s([\d_]+))?/),d=!u&&s.match(/(iPhone\sOS|iOS)\s([\d_]+)/),p="Win32"===a,f="MacIntel"===a,!u&&f&&i.touch&&0<=["1024x1366","1366x1024","834x1194","1194x834","834x1112","1112x834","768x1024","1024x768"].indexOf(o+"x"+l)&&((u=s.match(/(Version)\/([\d.]+)/))||(u=[0,1,"13_0_0"]),f=!1),c&&!p&&(r.os="android",r.android=!0),(u||d||h)&&(r.os="ios",r.ios=!0),y=r),y;var t,i,n,a,s,r,o,l,c,u,h,d,p,f}({userAgent:a.userAgent}),s.browser=function(){return b||(t=se(),b={isEdge:!!t.navigator.userAgent.match(/Edge/g),isSafari:(e=t.navigator.userAgent.toLowerCase(),0<=e.indexOf("safari")&&e.indexOf("chrome")<0&&e.indexOf("android")<0),isWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(t.navigator.userAgent)}),b;var e,t}(),s.eventsListeners={},s.eventsAnyListeners=[],Object.keys(z).forEach(function(t){Object.keys(z[t]).forEach(function(e){H.prototype[e]||(H.prototype[e]=z[t][e])})}),void 0===s.modules&&(s.modules={}),Object.keys(s.modules).forEach(function(e){var t=s.modules[e];if(t.params){var i=Object.keys(t.params)[0],n=t.params[i];if("object"!=typeof n||null===n)return;if(!(i in a&&"enabled"in n))return;!0===a[i]&&(a[i]={enabled:!0}),"object"!=typeof a[i]||"enabled"in a[i]||(a[i].enabled=!0),a[i]||(a[i]={enabled:!1})}});var r=re({},R);s.useParams(r),s.params=re({},r,F,a),s.originalParams=re({},s.params),s.passedParams=re({},a),s.params&&s.params.on&&Object.keys(s.params.on).forEach(function(e){s.on(e,s.params.on[e])});var o=(s.$=I)(s.params.el);if(e=o[0]){if(1<o.length){var l=[];return o.each(function(e){var t=re({},a,{el:e});l.push(new H(t))}),l}var c,u,h;return e.swiper=s,e&&e.shadowRoot&&e.shadowRoot.querySelector?(c=I(e.shadowRoot.querySelector("."+s.params.wrapperClass))).children=function(e){return o.children(e)}:c=o.children("."+s.params.wrapperClass),re(s,{$el:o,el:e,$wrapperEl:c,wrapperEl:c[0],classNames:[],slides:I(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===s.params.direction},isVertical:function(){return"vertical"===s.params.direction},rtl:"rtl"===e.dir.toLowerCase()||"rtl"===o.css("direction"),rtlTranslate:"horizontal"===s.params.direction&&("rtl"===e.dir.toLowerCase()||"rtl"===o.css("direction")),wrongRTL:"-webkit-box"===c.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:s.params.allowSlideNext,allowSlidePrev:s.params.allowSlidePrev,touchEvents:(u=["touchstart","touchmove","touchend","touchcancel"],h=["mousedown","mousemove","mouseup"],s.support.pointerEvents&&(h=["pointerdown","pointermove","pointerup"]),s.touchEventsTouch={start:u[0],move:u[1],end:u[2],cancel:u[3]},s.touchEventsDesktop={start:h[0],move:h[1],end:h[2]},s.support.touch||!s.params.simulateTouch?s.touchEventsTouch:s.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video, label",lastClickTime:B(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:s.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),s.useModules(),s.emit("_swiper"),s.params.init&&s.init(),s}}j.use([A,k]);var $={update:function(e){var t=this,i=t.params,n=i.slidesPerView,a=i.slidesPerGroup,s=i.centeredSlides,r=t.params.virtual,o=r.addSlidesBefore,l=r.addSlidesAfter,c=t.virtual,u=c.from,h=c.to,d=c.slides,p=c.slidesGrid,f=c.renderSlide,m=c.offset;t.updateActiveIndex();var g,v,y,b=t.activeIndex||0;g=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",y=s?(v=Math.floor(n/2)+a+l,Math.floor(n/2)+a+o):(v=n+(a-1)+l,a+o);var w=Math.max((b||0)-y,0),x=Math.min((b||0)+v,d.length-1),C=(t.slidesGrid[w]||0)-(t.slidesGrid[0]||0);function S(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(re(t.virtual,{from:w,to:x,offset:C,slidesGrid:t.slidesGrid}),u===w&&h===x&&!e)return t.slidesGrid!==p&&C!==m&&t.slides.css(g,C+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:C,from:w,to:x,slides:function(){for(var e=[],t=w;t<=x;t+=1)e.push(d[t]);return e}()}),void(t.params.virtual.renderExternalUpdate&&S());var E=[],T=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var A=u;A<=h;A+=1)(A<w||x<A)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+A+'"]').remove();for(var M=0;M<d.length;M+=1)w<=M&&M<=x&&(void 0===h||e?T.push(M):(h<M&&T.push(M),M<u&&E.push(M)));T.forEach(function(e){t.$wrapperEl.append(f(d[e],e))}),E.sort(function(e,t){return t-e}).forEach(function(e){t.$wrapperEl.prepend(f(d[e],e))}),t.$wrapperEl.children(".swiper-slide").css(g,C+"px"),S()},renderSlide:function(e,t){var i=this.params.virtual;if(i.cache&&this.virtual.cache[t])return this.virtual.cache[t];var n=i.renderSlide?I(i.renderSlide.call(this,e,t)):I('<div class="'+this.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return n.attr("data-swiper-slide-index")||n.attr("data-swiper-slide-index",t),i.cache&&(this.virtual.cache[t]=n),n},appendSlide:function(e){if("object"==typeof e&&"length"in e)for(var t=0;t<e.length;t+=1)e[t]&&this.virtual.slides.push(e[t]);else this.virtual.slides.push(e);this.virtual.update(!0)},prependSlide:function(e){var t=this.activeIndex,i=t+1,n=1;if(Array.isArray(e)){for(var a=0;a<e.length;a+=1)e[a]&&this.virtual.slides.unshift(e[a]);i=t+e.length,n=e.length}else this.virtual.slides.unshift(e);if(this.params.virtual.cache){var s=this.virtual.cache,r={};Object.keys(s).forEach(function(e){var t=s[e],i=t.attr("data-swiper-slide-index");i&&t.attr("data-swiper-slide-index",parseInt(i,10)+1),r[parseInt(e,10)+n]=t}),this.virtual.cache=r}this.virtual.update(!0),this.slideTo(i,0)},removeSlide:function(e){if(null!=e){var t=this.activeIndex;if(Array.isArray(e))for(var i=e.length-1;0<=i;i-=1)this.virtual.slides.splice(e[i],1),this.params.virtual.cache&&delete this.virtual.cache[e[i]],e[i]<t&&(t-=1),t=Math.max(t,0);else this.virtual.slides.splice(e,1),this.params.virtual.cache&&delete this.virtual.cache[e],e<t&&(t-=1),t=Math.max(t,0);this.virtual.update(!0),this.slideTo(t,0)}},removeAllSlides:function(){this.virtual.slides=[],this.params.virtual.cache&&(this.virtual.cache={}),this.virtual.update(!0),this.slideTo(0,0)}},_={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,renderExternalUpdate:!0,addSlidesBefore:0,addSlidesAfter:0}},create:function(){E(this,{virtual:t(t({},$),{},{slides:this.params.virtual.slides,cache:{}})})},on:{beforeInit:function(e){if(e.params.virtual.enabled){e.classNames.push(e.params.containerModifierClass+"virtual");var t={watchSlidesProgress:!0};re(e.params,t),re(e.originalParams,t),e.params.initialSlide||e.virtual.update()}},setTranslate:function(e){e.params.virtual.enabled&&e.virtual.update()}}},q={handle:function(e){var t=se(),i=w(),n=this.rtlTranslate,a=e;a.originalEvent&&(a=a.originalEvent);var s=a.keyCode||a.charCode,r=this.params.keyboard.pageUpDown,o=r&&33===s,l=r&&34===s,c=37===s,u=39===s,h=38===s,d=40===s;if(!this.allowSlideNext&&(this.isHorizontal()&&u||this.isVertical()&&d||l))return!1;if(!this.allowSlidePrev&&(this.isHorizontal()&&c||this.isVertical()&&h||o))return!1;if(!(a.shiftKey||a.altKey||a.ctrlKey||a.metaKey||i.activeElement&&i.activeElement.nodeName&&("input"===i.activeElement.nodeName.toLowerCase()||"textarea"===i.activeElement.nodeName.toLowerCase()))){if(this.params.keyboard.onlyInViewport&&(o||l||c||u||h||d)){var p=!1;if(0<this.$el.parents("."+this.params.slideClass).length&&0===this.$el.parents("."+this.params.slideActiveClass).length)return;var f=t.innerWidth,m=t.innerHeight,g=this.$el.offset();n&&(g.left-=this.$el[0].scrollLeft);for(var v=[[g.left,g.top],[g.left+this.width,g.top],[g.left,g.top+this.height],[g.left+this.width,g.top+this.height]],y=0;y<v.length;y+=1){var b=v[y];0<=b[0]&&b[0]<=f&&0<=b[1]&&b[1]<=m&&(p=!0)}if(!p)return}this.isHorizontal()?((o||l||c||u)&&(a.preventDefault?a.preventDefault():a.returnValue=!1),((l||u)&&!n||(o||c)&&n)&&this.slideNext(),((o||c)&&!n||(l||u)&&n)&&this.slidePrev()):((o||l||h||d)&&(a.preventDefault?a.preventDefault():a.returnValue=!1),(l||d)&&this.slideNext(),(o||h)&&this.slidePrev()),this.emit("keyPress",s)}},enable:function(){var e=w();this.keyboard.enabled||(I(e).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){var e=w();this.keyboard.enabled&&(I(e).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},G={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0,pageUpDown:!0}},create:function(){E(this,{keyboard:t({enabled:!1},q)})},on:{init:function(e){e.params.keyboard.enabled&&e.keyboard.enable()},destroy:function(e){e.keyboard.enabled&&e.keyboard.disable()}}},W={lastScrollTime:B(),lastEventBeforeSnap:void 0,recentWheelEvents:[],event:function(){return-1<se().navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":function(){var e=w(),t="onwheel"in e;if(!t){var i=e.createElement("div");i.setAttribute("onwheel","return;"),t="function"==typeof i.onwheel}return!t&&e.implementation&&e.implementation.hasFeature&&!0!==e.implementation.hasFeature("","")&&(t=e.implementation.hasFeature("Events.wheel","3.0")),t}()?"wheel":"mousewheel"},normalize:function(e){var t=0,i=0,n=0,a=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),n=10*t,a=10*i,"deltaY"in e&&(a=e.deltaY),"deltaX"in e&&(n=e.deltaX),e.shiftKey&&!n&&(n=a,a=0),(n||a)&&e.deltaMode&&(1===e.deltaMode?(n*=40,a*=40):(n*=800,a*=800)),n&&!t&&(t=n<1?-1:1),a&&!i&&(i=a<1?-1:1),{spinX:t,spinY:i,pixelX:n,pixelY:a}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,n=i.params.mousewheel;i.params.cssMode&&t.preventDefault();var a=i.$el;if("container"!==i.params.mousewheel.eventsTarget&&(a=I(i.params.mousewheel.eventsTarget)),!i.mouseEntered&&!a[0].contains(t.target)&&!n.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var s=0,r=i.rtlTranslate?-1:1,o=W.normalize(t);if(n.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(o.pixelX)>Math.abs(o.pixelY)))return!0;s=-o.pixelX*r}else{if(!(Math.abs(o.pixelY)>Math.abs(o.pixelX)))return!0;s=-o.pixelY}else s=Math.abs(o.pixelX)>Math.abs(o.pixelY)?-o.pixelX*r:-o.pixelY;if(0===s)return!0;if(n.invert&&(s=-s),i.params.freeMode){var l={time:B(),delta:Math.abs(s),direction:Math.sign(s)},c=i.mousewheel.lastEventBeforeSnap,u=c&&l.time<c.time+500&&l.delta<=c.delta&&l.direction===c.direction;if(!u){i.mousewheel.lastEventBeforeSnap=void 0,i.params.loop&&i.loopFix();var h=i.getTranslate()+s*n.sensitivity,d=i.isBeginning,p=i.isEnd;if(h>=i.minTranslate()&&(h=i.minTranslate()),h<=i.maxTranslate()&&(h=i.maxTranslate()),i.setTransition(0),i.setTranslate(h),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!d&&i.isBeginning||!p&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky){clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=void 0;var f=i.mousewheel.recentWheelEvents;15<=f.length&&f.shift();var m=f.length?f[f.length-1]:void 0,g=f[0];if(f.push(l),m&&(l.delta>m.delta||l.direction!==m.direction))f.splice(0);else if(15<=f.length&&l.time-g.time<500&&1<=g.delta-l.delta&&l.delta<=6){var v=0<s?.8:.2;i.mousewheel.lastEventBeforeSnap=l,f.splice(0),i.mousewheel.timeout=L(function(){i.slideToClosest(i.params.speed,!0,void 0,v)},0)}i.mousewheel.timeout||(i.mousewheel.timeout=L(function(){i.mousewheel.lastEventBeforeSnap=l,f.splice(0),i.slideToClosest(i.params.speed,!0,void 0,.5)},500))}if(u||i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),h===i.minTranslate()||h===i.maxTranslate())return!0}}else{var y={time:B(),delta:Math.abs(s),direction:Math.sign(s),raw:e},b=i.mousewheel.recentWheelEvents;2<=b.length&&b.shift();var w=b.length?b[b.length-1]:void 0;if(b.push(y),w?(y.direction!==w.direction||y.delta>w.delta||y.time>w.time+150)&&i.mousewheel.animateSlider(y):i.mousewheel.animateSlider(y),i.mousewheel.releaseScroll(y))return!0}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},animateSlider:function(e){var t=se();return!(this.params.mousewheel.thresholdDelta&&e.delta<this.params.mousewheel.thresholdDelta||this.params.mousewheel.thresholdTime&&B()-this.mousewheel.lastScrollTime<this.params.mousewheel.thresholdTime||!(6<=e.delta&&B()-this.mousewheel.lastScrollTime<60)&&(e.direction<0?this.isEnd&&!this.params.loop||this.animating||(this.slideNext(),this.emit("scroll",e.raw)):this.isBeginning&&!this.params.loop||this.animating||(this.slidePrev(),this.emit("scroll",e.raw)),this.mousewheel.lastScrollTime=(new t.Date).getTime(),1))},releaseScroll:function(e){var t=this.params.mousewheel;if(e.direction<0){if(this.isEnd&&!this.params.loop&&t.releaseOnEdges)return!0}else if(this.isBeginning&&!this.params.loop&&t.releaseOnEdges)return!0;return!1},enable:function(){var e=W.event();if(this.params.cssMode)return this.wrapperEl.removeEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarget&&(t=I(this.params.mousewheel.eventsTarget)),t.on("mouseenter",this.mousewheel.handleMouseEnter),t.on("mouseleave",this.mousewheel.handleMouseLeave),t.on(e,this.mousewheel.handle),this.mousewheel.enabled=!0},disable:function(){var e=W.event();if(this.params.cssMode)return this.wrapperEl.addEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(!this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarget&&(t=I(this.params.mousewheel.eventsTarget)),t.off(e,this.mousewheel.handle),!(this.mousewheel.enabled=!1)}},X={update:function(){var e=this.params.navigation;if(!this.params.loop){var t=this.navigation,i=t.$nextEl,n=t.$prevEl;n&&0<n.length&&(this.isBeginning?n.addClass(e.disabledClass):n.removeClass(e.disabledClass),n[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass)),i&&0<i.length&&(this.isEnd?i.addClass(e.disabledClass):i.removeClass(e.disabledClass),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass))}},onPrevClick:function(e){e.preventDefault(),this.isBeginning&&!this.params.loop||this.slidePrev()},onNextClick:function(e){e.preventDefault(),this.isEnd&&!this.params.loop||this.slideNext()},init:function(){var e,t,i=this.params.navigation;(i.nextEl||i.prevEl)&&(i.nextEl&&(e=I(i.nextEl),this.params.uniqueNavElements&&"string"==typeof i.nextEl&&1<e.length&&1===this.$el.find(i.nextEl).length&&(e=this.$el.find(i.nextEl))),i.prevEl&&(t=I(i.prevEl),this.params.uniqueNavElements&&"string"==typeof i.prevEl&&1<t.length&&1===this.$el.find(i.prevEl).length&&(t=this.$el.find(i.prevEl))),e&&0<e.length&&e.on("click",this.navigation.onNextClick),t&&0<t.length&&t.on("click",this.navigation.onPrevClick),re(this.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;t&&t.length&&(t.off("click",this.navigation.onNextClick),t.removeClass(this.params.navigation.disabledClass)),i&&i.length&&(i.off("click",this.navigation.onPrevClick),i.removeClass(this.params.navigation.disabledClass))}},V={update:function(){var e=this.rtl,n=this.params.pagination;if(n.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var a,t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,s=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((a=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>t-1-2*this.loopedSlides&&(a-=t-2*this.loopedSlides),s-1<a&&(a-=s),a<0&&"bullets"!==this.params.paginationType&&(a=s+a)):a=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,"bullets"===n.type&&this.pagination.bullets&&0<this.pagination.bullets.length){var r,o,l,c=this.pagination.bullets;if(n.dynamicBullets&&(this.pagination.bulletSize=c.eq(0)[this.isHorizontal()?"outerWidth":"outerHeight"](!0),i.css(this.isHorizontal()?"width":"height",this.pagination.bulletSize*(n.dynamicMainBullets+4)+"px"),1<n.dynamicMainBullets&&void 0!==this.previousIndex&&(this.pagination.dynamicBulletIndex+=a-this.previousIndex,this.pagination.dynamicBulletIndex>n.dynamicMainBullets-1?this.pagination.dynamicBulletIndex=n.dynamicMainBullets-1:this.pagination.dynamicBulletIndex<0&&(this.pagination.dynamicBulletIndex=0)),r=a-this.pagination.dynamicBulletIndex,l=((o=r+(Math.min(c.length,n.dynamicMainBullets)-1))+r)/2),c.removeClass(n.bulletActiveClass+" "+n.bulletActiveClass+"-next "+n.bulletActiveClass+"-next-next "+n.bulletActiveClass+"-prev "+n.bulletActiveClass+"-prev-prev "+n.bulletActiveClass+"-main"),1<i.length)c.each(function(e){var t=I(e),i=t.index();i===a&&t.addClass(n.bulletActiveClass),n.dynamicBullets&&(r<=i&&i<=o&&t.addClass(n.bulletActiveClass+"-main"),i===r&&t.prev().addClass(n.bulletActiveClass+"-prev").prev().addClass(n.bulletActiveClass+"-prev-prev"),i===o&&t.next().addClass(n.bulletActiveClass+"-next").next().addClass(n.bulletActiveClass+"-next-next"))});else{var u=c.eq(a),h=u.index();if(u.addClass(n.bulletActiveClass),n.dynamicBullets){for(var d=c.eq(r),p=c.eq(o),f=r;f<=o;f+=1)c.eq(f).addClass(n.bulletActiveClass+"-main");if(this.params.loop)if(h>=c.length-n.dynamicMainBullets){for(var m=n.dynamicMainBullets;0<=m;m-=1)c.eq(c.length-m).addClass(n.bulletActiveClass+"-main");c.eq(c.length-n.dynamicMainBullets-1).addClass(n.bulletActiveClass+"-prev")}else d.prev().addClass(n.bulletActiveClass+"-prev").prev().addClass(n.bulletActiveClass+"-prev-prev"),p.next().addClass(n.bulletActiveClass+"-next").next().addClass(n.bulletActiveClass+"-next-next");else d.prev().addClass(n.bulletActiveClass+"-prev").prev().addClass(n.bulletActiveClass+"-prev-prev"),p.next().addClass(n.bulletActiveClass+"-next").next().addClass(n.bulletActiveClass+"-next-next")}}if(n.dynamicBullets){var g=Math.min(c.length,n.dynamicMainBullets+4),v=(this.pagination.bulletSize*g-this.pagination.bulletSize)/2-l*this.pagination.bulletSize,y=e?"right":"left";c.css(this.isHorizontal()?y:"top",v+"px")}}if("fraction"===n.type&&(i.find("."+n.currentClass).text(n.formatFractionCurrent(a+1)),i.find("."+n.totalClass).text(n.formatFractionTotal(s))),"progressbar"===n.type){var b;b=n.progressbarOpposite?this.isHorizontal()?"vertical":"horizontal":this.isHorizontal()?"horizontal":"vertical";var w=(a+1)/s,x=1,C=1;"horizontal"==b?x=w:C=w,i.find("."+n.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+x+") scaleY("+C+")").transition(this.params.speed)}"custom"===n.type&&n.renderCustom?(i.html(n.renderCustom(this,a+1,s)),this.emit("paginationRender",i[0])):this.emit("paginationUpdate",i[0]),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](n.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,n="";if("bullets"===e.type){for(var a=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,s=0;s<a;s+=1)e.renderBullet?n+=e.renderBullet.call(this,s,e.bulletClass):n+="<"+e.bulletElement+' class="'+e.bulletClass+'"></'+e.bulletElement+">";i.html(n),this.pagination.bullets=i.find("."+e.bulletClass)}"fraction"===e.type&&(n=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class="'+e.currentClass+'"></span> / <span class="'+e.totalClass+'"></span>',i.html(n)),"progressbar"===e.type&&(n=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class="'+e.progressbarFillClass+'"></span>',i.html(n)),"custom"!==e.type&&this.emit("paginationRender",this.pagination.$el[0])}},init:function(){var i=this,e=i.params.pagination;if(e.el){var t=I(e.el);0!==t.length&&(i.params.uniqueNavElements&&"string"==typeof e.el&&1<t.length&&(t=i.$el.find(e.el)),"bullets"===e.type&&e.clickable&&t.addClass(e.clickableClass),t.addClass(e.modifierClass+e.type),"bullets"===e.type&&e.dynamicBullets&&(t.addClass(""+e.modifierClass+e.type+"-dynamic"),i.pagination.dynamicBulletIndex=0,e.dynamicMainBullets<1&&(e.dynamicMainBullets=1)),"progressbar"===e.type&&e.progressbarOpposite&&t.addClass(e.progressbarOppositeClass),e.clickable&&t.on("click","."+e.bulletClass,function(e){e.preventDefault();var t=I(this).index()*i.params.slidesPerGroup;i.params.loop&&(t+=i.loopedSlides),i.slideTo(t)}),re(i.pagination,{$el:t,el:t[0]}))}},destroy:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.pagination.$el;t.removeClass(e.hiddenClass),t.removeClass(e.modifierClass+e.type),this.pagination.bullets&&this.pagination.bullets.removeClass(e.bulletActiveClass),e.clickable&&t.off("click","."+e.bulletClass)}}},U={setTranslate:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=this.rtlTranslate,i=this.progress,n=e.dragSize,a=e.trackSize,s=e.$dragEl,r=e.$el,o=this.params.scrollbar,l=n,c=(a-n)*i;t?0<(c=-c)?(l=n-c,c=0):a<-c+n&&(l=a+c):c<0?(l=n+c,c=0):a<c+n&&(l=a-c),this.isHorizontal()?(s.transform("translate3d("+c+"px, 0, 0)"),s[0].style.width=l+"px"):(s.transform("translate3d(0px, "+c+"px, 0)"),s[0].style.height=l+"px"),o.hide&&(clearTimeout(this.scrollbar.timeout),r[0].style.opacity=1,this.scrollbar.timeout=setTimeout(function(){r[0].style.opacity=0,r.transition(400)},1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=e.$dragEl,i=e.$el;t[0].style.width="",t[0].style.height="";var n,a=this.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,s=this.size/this.virtualSize,r=s*(a/this.size);n="auto"===this.params.scrollbar.dragSize?a*s:parseInt(this.params.scrollbar.dragSize,10),this.isHorizontal()?t[0].style.width=n+"px":t[0].style.height=n+"px",i[0].style.display=1<=s?"none":"",this.params.scrollbar.hide&&(i[0].style.opacity=0),re(e,{trackSize:a,divider:s,moveDivider:r,dragSize:n}),e.$el[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](this.params.scrollbar.lockClass)}},getPointerPosition:function(e){return this.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientX:e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientY:e.clientY},setDragPosition:function(e){var t,i=this.scrollbar,n=this.rtlTranslate,a=i.$el,s=i.dragSize,r=i.trackSize,o=i.dragStartPos;t=(i.getPointerPosition(e)-a.offset()[this.isHorizontal()?"left":"top"]-(null!==o?o:s/2))/(r-s),t=Math.max(Math.min(t,1),0),n&&(t=1-t);var l=this.minTranslate()+(this.maxTranslate()-this.minTranslate())*t;this.updateProgress(l),this.setTranslate(l),this.updateActiveIndex(),this.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,n=this.$wrapperEl,a=i.$el,s=i.$dragEl;this.scrollbar.isTouched=!0,this.scrollbar.dragStartPos=e.target===s[0]||e.target===s?i.getPointerPosition(e)-e.target.getBoundingClientRect()[this.isHorizontal()?"left":"top"]:null,e.preventDefault(),e.stopPropagation(),n.transition(100),s.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),a.transition(0),t.hide&&a.css("opacity",1),this.params.cssMode&&this.$wrapperEl.css("scroll-snap-type","none"),this.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,n=t.$el,a=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),n.transition(0),a.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar,n=this.$wrapperEl,a=i.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,this.params.cssMode&&(this.$wrapperEl.css("scroll-snap-type",""),n.transition("")),t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=L(function(){a.css("opacity",0),a.transition(400)},1e3)),this.emit("scrollbarDragEnd",e),t.snapOnRelease&&this.slideToClosest())},enableDraggable:function(){if(this.params.scrollbar.el){var e=w(),t=this.scrollbar,i=this.touchEventsTouch,n=this.touchEventsDesktop,a=this.params,s=this.support,r=t.$el[0],o=!(!s.passiveListener||!a.passiveListeners)&&{passive:!1,capture:!1},l=!(!s.passiveListener||!a.passiveListeners)&&{passive:!0,capture:!1};s.touch?(r.addEventListener(i.start,this.scrollbar.onDragStart,o),r.addEventListener(i.move,this.scrollbar.onDragMove,o),r.addEventListener(i.end,this.scrollbar.onDragEnd,l)):(r.addEventListener(n.start,this.scrollbar.onDragStart,o),e.addEventListener(n.move,this.scrollbar.onDragMove,o),e.addEventListener(n.end,this.scrollbar.onDragEnd,l))}},disableDraggable:function(){if(this.params.scrollbar.el){var e=w(),t=this.scrollbar,i=this.touchEventsTouch,n=this.touchEventsDesktop,a=this.params,s=this.support,r=t.$el[0],o=!(!s.passiveListener||!a.passiveListeners)&&{passive:!1,capture:!1},l=!(!s.passiveListener||!a.passiveListeners)&&{passive:!0,capture:!1};s.touch?(r.removeEventListener(i.start,this.scrollbar.onDragStart,o),r.removeEventListener(i.move,this.scrollbar.onDragMove,o),r.removeEventListener(i.end,this.scrollbar.onDragEnd,l)):(r.removeEventListener(n.start,this.scrollbar.onDragStart,o),e.removeEventListener(n.move,this.scrollbar.onDragMove,o),e.removeEventListener(n.end,this.scrollbar.onDragEnd,l))}},init:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.$el,i=this.params.scrollbar,n=I(i.el);this.params.uniqueNavElements&&"string"==typeof i.el&&1<n.length&&1===t.find(i.el).length&&(n=t.find(i.el));var a=n.find("."+this.params.scrollbar.dragClass);0===a.length&&(a=I('<div class="'+this.params.scrollbar.dragClass+'"></div>'),n.append(a)),re(e,{$el:n,el:n[0],$dragEl:a,dragEl:a[0]}),i.draggable&&e.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},Y={setTransform:function(e,t){var i=this.rtl,n=I(e),a=i?-1:1,s=n.attr("data-swiper-parallax")||"0",r=n.attr("data-swiper-parallax-x"),o=n.attr("data-swiper-parallax-y"),l=n.attr("data-swiper-parallax-scale"),c=n.attr("data-swiper-parallax-opacity");if(r||o?(r=r||"0",o=o||"0"):this.isHorizontal()?(r=s,o="0"):(o=s,r="0"),r=0<=r.indexOf("%")?parseInt(r,10)*t*a+"%":r*t*a+"px",o=0<=o.indexOf("%")?parseInt(o,10)*t+"%":o*t+"px",null!=c){var u=c-(c-1)*(1-Math.abs(t));n[0].style.opacity=u}if(null==l)n.transform("translate3d("+r+", "+o+", 0px)");else{var h=l-(l-1)*(1-Math.abs(t));n.transform("translate3d("+r+", "+o+", 0px) scale("+h+")")}},setTranslate:function(){var n=this,e=n.$el,t=n.slides,a=n.progress,s=n.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){n.parallax.setTransform(e,a)}),t.each(function(e,t){var i=e.progress;1<n.params.slidesPerGroup&&"auto"!==n.params.slidesPerView&&(i+=Math.ceil(t/2)-a*(s.length-1)),i=Math.min(Math.max(i,-1),1),I(e).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){n.parallax.setTransform(e,i)})})},setTransition:function(n){void 0===n&&(n=this.params.speed),this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){var t=I(e),i=parseInt(t.attr("data-swiper-parallax-duration"),10)||n;0===n&&(i=0),t.transition(i)})}},K={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,n=e.targetTouches[1].pageX,a=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(n-t,2)+Math.pow(a-i,2))},onGestureStart:function(e){var t=this.support,i=this.params.zoom,n=this.zoom,a=n.gesture;if(n.fakeGestureTouched=!1,n.fakeGestureMoved=!1,!t.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;n.fakeGestureTouched=!0,a.scaleStart=K.getDistanceBetweenTouches(e)}a.$slideEl&&a.$slideEl.length||(a.$slideEl=I(e.target).closest("."+this.params.slideClass),0===a.$slideEl.length&&(a.$slideEl=this.slides.eq(this.activeIndex)),a.$imageEl=a.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),a.$imageWrapEl=a.$imageEl.parent("."+i.containerClass),a.maxRatio=a.$imageWrapEl.attr("data-swiper-zoom")||i.maxRatio,0!==a.$imageWrapEl.length)?(a.$imageEl&&a.$imageEl.transition(0),this.zoom.isScaling=!0):a.$imageEl=void 0},onGestureChange:function(e){var t=this.support,i=this.params.zoom,n=this.zoom,a=n.gesture;if(!t.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;n.fakeGestureMoved=!0,a.scaleMove=K.getDistanceBetweenTouches(e)}a.$imageEl&&0!==a.$imageEl.length?(t.gestures?n.scale=e.scale*n.currentScale:n.scale=a.scaleMove/a.scaleStart*n.currentScale,n.scale>a.maxRatio&&(n.scale=a.maxRatio-1+Math.pow(n.scale-a.maxRatio+1,.5)),n.scale<i.minRatio&&(n.scale=i.minRatio+1-Math.pow(i.minRatio-n.scale+1,.5)),a.$imageEl.transform("translate3d(0,0,0) scale("+n.scale+")")):"gesturechange"===e.type&&n.onGestureStart(e)},onGestureEnd:function(e){var t=this.device,i=this.support,n=this.params.zoom,a=this.zoom,s=a.gesture;if(!i.gestures){if(!a.fakeGestureTouched||!a.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!t.android)return;a.fakeGestureTouched=!1,a.fakeGestureMoved=!1}s.$imageEl&&0!==s.$imageEl.length&&(a.scale=Math.max(Math.min(a.scale,s.maxRatio),n.minRatio),s.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+a.scale+")"),a.currentScale=a.scale,a.isScaling=!1,1===a.scale&&(s.$slideEl=void 0))},onTouchStart:function(e){var t=this.device,i=this.zoom,n=i.gesture,a=i.image;n.$imageEl&&0!==n.$imageEl.length&&(a.isTouched||(t.android&&e.cancelable&&e.preventDefault(),a.isTouched=!0,a.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,a.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,n=t.image,a=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,n.isTouched&&i.$slideEl)){n.isMoved||(n.width=i.$imageEl[0].offsetWidth,n.height=i.$imageEl[0].offsetHeight,n.startX=C(i.$imageWrapEl[0],"x")||0,n.startY=C(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(n.startX=-n.startX,n.startY=-n.startY));var s=n.width*t.scale,r=n.height*t.scale;if(!(s<i.slideWidth&&r<i.slideHeight)){if(n.minX=Math.min(i.slideWidth/2-s/2,0),n.maxX=-n.minX,n.minY=Math.min(i.slideHeight/2-r/2,0),n.maxY=-n.minY,n.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,n.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!n.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(n.minX)===Math.floor(n.startX)&&n.touchesCurrent.x<n.touchesStart.x||Math.floor(n.maxX)===Math.floor(n.startX)&&n.touchesCurrent.x>n.touchesStart.x))return void(n.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(n.minY)===Math.floor(n.startY)&&n.touchesCurrent.y<n.touchesStart.y||Math.floor(n.maxY)===Math.floor(n.startY)&&n.touchesCurrent.y>n.touchesStart.y))return void(n.isTouched=!1)}e.cancelable&&e.preventDefault(),e.stopPropagation(),n.isMoved=!0,n.currentX=n.touchesCurrent.x-n.touchesStart.x+n.startX,n.currentY=n.touchesCurrent.y-n.touchesStart.y+n.startY,n.currentX<n.minX&&(n.currentX=n.minX+1-Math.pow(n.minX-n.currentX+1,.8)),n.currentX>n.maxX&&(n.currentX=n.maxX-1+Math.pow(n.currentX-n.maxX+1,.8)),n.currentY<n.minY&&(n.currentY=n.minY+1-Math.pow(n.minY-n.currentY+1,.8)),n.currentY>n.maxY&&(n.currentY=n.maxY-1+Math.pow(n.currentY-n.maxY+1,.8)),a.prevPositionX||(a.prevPositionX=n.touchesCurrent.x),a.prevPositionY||(a.prevPositionY=n.touchesCurrent.y),a.prevTime||(a.prevTime=Date.now()),a.x=(n.touchesCurrent.x-a.prevPositionX)/(Date.now()-a.prevTime)/2,a.y=(n.touchesCurrent.y-a.prevPositionY)/(Date.now()-a.prevTime)/2,Math.abs(n.touchesCurrent.x-a.prevPositionX)<2&&(a.x=0),Math.abs(n.touchesCurrent.y-a.prevPositionY)<2&&(a.y=0),a.prevPositionX=n.touchesCurrent.x,a.prevPositionY=n.touchesCurrent.y,a.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+n.currentX+"px, "+n.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,n=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var a=300,s=300,r=n.x*a,o=i.currentX+r,l=n.y*s,c=i.currentY+l;0!==n.x&&(a=Math.abs((o-i.currentX)/n.x)),0!==n.y&&(s=Math.abs((c-i.currentY)/n.y));var u=Math.max(a,s);i.currentX=o,i.currentY=c;var h=i.width*e.scale,d=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-h/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-d/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(u).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl&&t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl&&t.$imageWrapEl.transform("translate3d(0,0,0)"),e.scale=1,e.currentScale=1,t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,n,a,s,r,o,l,c,u,h,d,p,f,m,g,v=this.zoom,y=this.params.zoom,b=v.gesture,w=v.image;b.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?b.$slideEl=this.$wrapperEl.children("."+this.params.slideActiveClass):b.$slideEl=this.slides.eq(this.activeIndex),b.$imageEl=b.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),b.$imageWrapEl=b.$imageEl.parent("."+y.containerClass)),b.$imageEl&&0!==b.$imageEl.length&&(b.$slideEl.addClass(""+y.zoomedSlideClass),i=void 0===w.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,"touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=w.touchesStart.x,w.touchesStart.y),v.scale=b.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,v.currentScale=b.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,e?(m=b.$slideEl[0].offsetWidth,g=b.$slideEl[0].offsetHeight,n=b.$slideEl.offset().left+m/2-t,a=b.$slideEl.offset().top+g/2-i,o=b.$imageEl[0].offsetWidth,l=b.$imageEl[0].offsetHeight,c=o*v.scale,u=l*v.scale,p=-(h=Math.min(m/2-c/2,0)),f=-(d=Math.min(g/2-u/2,0)),(s=n*v.scale)<h&&(s=h),p<s&&(s=p),(r=a*v.scale)<d&&(r=d),f<r&&(r=f)):r=s=0,b.$imageWrapEl.transition(300).transform("translate3d("+s+"px, "+r+"px,0)"),b.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+v.scale+")"))},out:function(){var e=this.zoom,t=this.params.zoom,i=e.gesture;i.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?i.$slideEl=this.$wrapperEl.children("."+this.params.slideActiveClass):i.$slideEl=this.slides.eq(this.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),i.$imageWrapEl=i.$imageEl.parent("."+t.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(e.scale=1,e.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+t.zoomedSlideClass),i.$slideEl=void 0)},toggleGestures:function(e){var t=this.zoom,i=t.slideSelector,n=t.passiveListener;this.$wrapperEl[e]("gesturestart",i,t.onGestureStart,n),this.$wrapperEl[e]("gesturechange",i,t.onGestureChange,n),this.$wrapperEl[e]("gestureend",i,t.onGestureEnd,n)},enableGestures:function(){this.zoom.gesturesEnabled||(this.zoom.gesturesEnabled=!0,this.zoom.toggleGestures("on"))},disableGestures:function(){this.zoom.gesturesEnabled&&(this.zoom.gesturesEnabled=!1,this.zoom.toggleGestures("off"))},enable:function(){var e=this.support,t=this.zoom;if(!t.enabled){t.enabled=!0;var i=!("touchstart"!==this.touchEvents.start||!e.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},n=!e.passiveListener||{passive:!1,capture:!0},a="."+this.params.slideClass;this.zoom.passiveListener=i,this.zoom.slideSelector=a,e.gestures?(this.$wrapperEl.on(this.touchEvents.start,this.zoom.enableGestures,i),this.$wrapperEl.on(this.touchEvents.end,this.zoom.disableGestures,i)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.on(this.touchEvents.start,a,t.onGestureStart,i),this.$wrapperEl.on(this.touchEvents.move,a,t.onGestureChange,n),this.$wrapperEl.on(this.touchEvents.end,a,t.onGestureEnd,i),this.touchEvents.cancel&&this.$wrapperEl.on(this.touchEvents.cancel,a,t.onGestureEnd,i)),this.$wrapperEl.on(this.touchEvents.move,"."+this.params.zoom.containerClass,t.onTouchMove,n)}},disable:function(){var e=this.zoom;if(e.enabled){var t=this.support;this.zoom.enabled=!1;var i=!("touchstart"!==this.touchEvents.start||!t.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},n=!t.passiveListener||{passive:!1,capture:!0},a="."+this.params.slideClass;t.gestures?(this.$wrapperEl.off(this.touchEvents.start,this.zoom.enableGestures,i),this.$wrapperEl.off(this.touchEvents.end,this.zoom.disableGestures,i)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.off(this.touchEvents.start,a,e.onGestureStart,i),this.$wrapperEl.off(this.touchEvents.move,a,e.onGestureChange,n),this.$wrapperEl.off(this.touchEvents.end,a,e.onGestureEnd,i),this.touchEvents.cancel&&this.$wrapperEl.off(this.touchEvents.cancel,a,e.onGestureEnd,i)),this.$wrapperEl.off(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove,n)}}},Q={loadInSlide:function(e,c){void 0===c&&(c=!0);var u=this,h=u.params.lazy;if(void 0!==e&&0!==u.slides.length){var d=u.virtual&&u.params.virtual.enabled?u.$wrapperEl.children("."+u.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):u.slides.eq(e),t=d.find("."+h.elementClass+":not(."+h.loadedClass+"):not(."+h.loadingClass+")");!d.hasClass(h.elementClass)||d.hasClass(h.loadedClass)||d.hasClass(h.loadingClass)||t.push(d[0]),0!==t.length&&t.each(function(e){var n=I(e);n.addClass(h.loadingClass);var a=n.attr("data-background"),s=n.attr("data-src"),r=n.attr("data-srcset"),o=n.attr("data-sizes"),l=n.parent("picture");u.loadImage(n[0],s||a,r,o,!1,function(){if(null!=u&&u&&(!u||u.params)&&!u.destroyed){if(a?(n.css("background-image",'url("'+a+'")'),n.removeAttr("data-background")):(r&&(n.attr("srcset",r),n.removeAttr("data-srcset")),o&&(n.attr("sizes",o),n.removeAttr("data-sizes")),l.length&&l.children("source").each(function(e){var t=I(e);t.attr("data-srcset")&&(t.attr("srcset",t.attr("data-srcset")),t.removeAttr("data-srcset"))}),s&&(n.attr("src",s),n.removeAttr("data-src"))),n.addClass(h.loadedClass).removeClass(h.loadingClass),d.find("."+h.preloaderClass).remove(),u.params.loop&&c){var e=d.attr("data-swiper-slide-index");if(d.hasClass(u.params.slideDuplicateClass)){var t=u.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+u.params.slideDuplicateClass+")");u.lazy.loadInSlide(t.index(),!1)}else{var i=u.$wrapperEl.children("."+u.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]');u.lazy.loadInSlide(i.index(),!1)}}u.emit("lazyImageReady",d[0],n[0]),u.params.autoHeight&&u.updateAutoHeight()}}),u.emit("lazyImageLoad",d[0],n[0])})}},load:function(){var i=this,t=i.$wrapperEl,n=i.params,a=i.slides,e=i.activeIndex,s=i.virtual&&n.virtual.enabled,r=n.lazy,o=n.slidesPerView;function l(e){if(s){if(t.children("."+n.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return!0}else if(a[e])return!0;return!1}function c(e){return s?I(e).attr("data-swiper-slide-index"):I(e).index()}if("auto"===o&&(o=0),i.lazy.initialImageLoaded||(i.lazy.initialImageLoaded=!0),i.params.watchSlidesVisibility)t.children("."+n.slideVisibleClass).each(function(e){var t=s?I(e).attr("data-swiper-slide-index"):I(e).index();i.lazy.loadInSlide(t)});else if(1<o)for(var u=e;u<e+o;u+=1)l(u)&&i.lazy.loadInSlide(u);else i.lazy.loadInSlide(e);if(r.loadPrevNext)if(1<o||r.loadPrevNextAmount&&1<r.loadPrevNextAmount){for(var h=r.loadPrevNextAmount,d=o,p=Math.min(e+d+Math.max(h,d),a.length),f=Math.max(e-Math.max(d,h),0),m=e+o;m<p;m+=1)l(m)&&i.lazy.loadInSlide(m);for(var g=f;g<e;g+=1)l(g)&&i.lazy.loadInSlide(g)}else{var v=t.children("."+n.slideNextClass);0<v.length&&i.lazy.loadInSlide(c(v));var y=t.children("."+n.slidePrevClass);0<y.length&&i.lazy.loadInSlide(c(y))}}},Z={LinearSpline:function(e,t){var i,n,a,s,r;return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(r=function(e,t){for(n=-1,i=e.length;1<i-n;)e[a=i+n>>1]<=t?n=a:i=a;return i}(this.x,e),s=r-1,(e-this.x[s])*(this.y[r]-this.y[s])/(this.x[r]-this.x[s])+this.y[s]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new Z.LinearSpline(this.slidesGrid,e.slidesGrid):new Z.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,n,a=this,s=a.controller.control,r=a.constructor;function o(e){var t=a.rtlTranslate?-a.translate:a.translate;"slide"===a.params.controller.by&&(a.controller.getInterpolateFunction(e),n=-a.controller.spline.interpolate(-t)),n&&"container"!==a.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(a.maxTranslate()-a.minTranslate()),n=(t-a.minTranslate())*i+e.minTranslate()),a.params.controller.inverse&&(n=e.maxTranslate()-n),e.updateProgress(n),e.setTranslate(n,a),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(s))for(var l=0;l<s.length;l+=1)s[l]!==t&&s[l]instanceof r&&o(s[l]);else s instanceof r&&t!==s&&o(s)},setTransition:function(t,e){var i,n=this,a=n.constructor,s=n.controller.control;function r(e){e.setTransition(t,n),0!==t&&(e.transitionStart(),e.params.autoHeight&&L(function(){e.updateAutoHeight()}),e.$wrapperEl.transitionEnd(function(){s&&(e.params.loop&&"slide"===n.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(s))for(i=0;i<s.length;i+=1)s[i]!==e&&s[i]instanceof a&&r(s[i]);else s instanceof a&&e!==s&&r(s)}},J={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},makeElNotFocusable:function(e){return e.attr("tabIndex","-1"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this.params.a11y;if(13===e.keyCode){var i=I(e.target);this.navigation&&this.navigation.$nextEl&&i.is(this.navigation.$nextEl)&&(this.isEnd&&!this.params.loop||this.slideNext(),this.isEnd?this.a11y.notify(t.lastSlideMessage):this.a11y.notify(t.nextSlideMessage)),this.navigation&&this.navigation.$prevEl&&i.is(this.navigation.$prevEl)&&(this.isBeginning&&!this.params.loop||this.slidePrev(),this.isBeginning?this.a11y.notify(t.firstSlideMessage):this.a11y.notify(t.prevSlideMessage)),this.pagination&&i.is("."+this.params.pagination.bulletClass)&&i[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){if(!this.params.loop&&this.navigation){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;i&&0<i.length&&(this.isBeginning?(this.a11y.disableEl(i),this.a11y.makeElNotFocusable(i)):(this.a11y.enableEl(i),this.a11y.makeElFocusable(i))),t&&0<t.length&&(this.isEnd?(this.a11y.disableEl(t),this.a11y.makeElNotFocusable(t)):(this.a11y.enableEl(t),this.a11y.makeElFocusable(t)))}},updatePagination:function(){var i=this,n=i.params.a11y;i.pagination&&i.params.pagination.clickable&&i.pagination.bullets&&i.pagination.bullets.length&&i.pagination.bullets.each(function(e){var t=I(e);i.a11y.makeElFocusable(t),i.a11y.addElRole(t,"button"),i.a11y.addElLabel(t,n.paginationBulletMessage.replace(/\{\{index\}\}/,t.index()+1))})},init:function(){this.$el.append(this.a11y.liveRegion);var e,t,i=this.params.a11y;this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&(this.a11y.makeElFocusable(e),this.a11y.addElRole(e,"button"),this.a11y.addElLabel(e,i.nextSlideMessage),e.on("keydown",this.a11y.onEnterKey)),t&&(this.a11y.makeElFocusable(t),this.a11y.addElRole(t,"button"),this.a11y.addElLabel(t,i.prevSlideMessage),t.on("keydown",this.a11y.onEnterKey)),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.on("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)},destroy:function(){var e,t;this.a11y.liveRegion&&0<this.a11y.liveRegion.length&&this.a11y.liveRegion.remove(),this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&e.off("keydown",this.a11y.onEnterKey),t&&t.off("keydown",this.a11y.onEnterKey),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.off("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)}},ee={init:function(){var e=se();if(this.params.history){if(!e.history||!e.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var t=this.history;t.initialized=!0,t.paths=ee.getPathValues(this.params.url),(t.paths.key||t.paths.value)&&(t.scrollToSlide(0,t.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||e.addEventListener("popstate",this.history.setHistoryPopState))}},destroy:function(){var e=se();this.params.history.replaceState||e.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=ee.getPathValues(this.params.url),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(e){var t=se(),i=(e?new URL(e):t.location).pathname.slice(1).split("/").filter(function(e){return""!==e}),n=i.length;return{key:i[n-2],value:i[n-1]}},setHistory:function(e,t){var i=se();if(this.history.initialized&&this.params.history.enabled){var n;n=this.params.url?new URL(this.params.url):i.location;var a=this.slides.eq(t),s=ee.slugify(a.attr("data-history"));n.pathname.includes(e)||(s=e+"/"+s);var r=i.history.state;r&&r.value===s||(this.params.history.replaceState?i.history.replaceState({value:s},null,s):i.history.pushState({value:s},null,s))}},slugify:function(e){return e.toString().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var n=0,a=this.slides.length;n<a;n+=1){var s=this.slides.eq(n);if(ee.slugify(s.attr("data-history"))===t&&!s.hasClass(this.params.slideDuplicateClass)){var r=s.index();this.slideTo(r,e,i)}}else this.slideTo(0,e,i)}},te={onHashCange:function(){var e=w();this.emit("hashChange");var t=e.location.hash.replace("#","");if(t!==this.slides.eq(this.activeIndex).attr("data-hash")){var i=this.$wrapperEl.children("."+this.params.slideClass+'[data-hash="'+t+'"]').index();if(void 0===i)return;this.slideTo(i)}},setHash:function(){var e=se(),t=w();if(this.hashNavigation.initialized&&this.params.hashNavigation.enabled)if(this.params.hashNavigation.replaceState&&e.history&&e.history.replaceState)e.history.replaceState(null,null,"#"+this.slides.eq(this.activeIndex).attr("data-hash")||""),this.emit("hashSet");else{var i=this.slides.eq(this.activeIndex),n=i.attr("data-hash")||i.attr("data-history");t.location.hash=n||"",this.emit("hashSet")}},init:function(){var e=w(),t=se();if(!(!this.params.hashNavigation.enabled||this.params.history&&this.params.history.enabled)){this.hashNavigation.initialized=!0;var i=e.location.hash.replace("#","");if(i)for(var n=0,a=this.slides.length;n<a;n+=1){var s=this.slides.eq(n);if((s.attr("data-hash")||s.attr("data-history"))===i&&!s.hasClass(this.params.slideDuplicateClass)){var r=s.index();this.slideTo(r,0,this.params.runCallbacksOnInit,!0)}}this.params.hashNavigation.watchState&&I(t).on("hashchange",this.hashNavigation.onHashCange)}},destroy:function(){var e=se();this.params.hashNavigation.watchState&&I(e).off("hashchange",this.hashNavigation.onHashCange)}},ie={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),clearTimeout(e.autoplay.timeout),e.autoplay.timeout=L(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")),e.params.cssMode&&e.autoplay.running&&e.autoplay.run()},i)},start:function(){return void 0===this.autoplay.timeout&&!this.autoplay.running&&(this.autoplay.running=!0,this.emit("autoplayStart"),this.autoplay.run(),!0)},stop:function(){return!!this.autoplay.running&&void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit("autoplayStop"),!0)},pause:function(e){this.autoplay.running&&(this.autoplay.paused||(this.autoplay.timeout&&clearTimeout(this.autoplay.timeout),this.autoplay.paused=!0,0!==e&&this.params.autoplay.waitForTransition?(this.$wrapperEl[0].addEventListener("transitionend",this.autoplay.onTransitionEnd),this.$wrapperEl[0].addEventListener("webkitTransitionEnd",this.autoplay.onTransitionEnd)):(this.autoplay.paused=!1,this.autoplay.run())))},onVisibilityChange:function(){var e=w();"hidden"===e.visibilityState&&this.autoplay.running&&this.autoplay.pause(),"visible"===e.visibilityState&&this.autoplay.paused&&(this.autoplay.run(),this.autoplay.paused=!1)},onTransitionEnd:function(e){this&&!this.destroyed&&this.$wrapperEl&&e.target===this.$wrapperEl[0]&&(this.$wrapperEl[0].removeEventListener("transitionend",this.autoplay.onTransitionEnd),this.$wrapperEl[0].removeEventListener("webkitTransitionEnd",this.autoplay.onTransitionEnd),this.autoplay.paused=!1,this.autoplay.running?this.autoplay.run():this.autoplay.stop())}},ne={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),n=-i[0].swiperSlideOffset;this.params.virtualTranslate||(n-=this.translate);var a=0;this.isHorizontal()||(a=n,n=0);var s=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:s}).transform("translate3d("+n+"px, "+a+"px, 0px)")}},setTransition:function(e){var i=this,t=i.slides,n=i.$wrapperEl;if(t.transition(e),i.params.virtualTranslate&&0!==e){var a=!1;t.transitionEnd(function(){if(!a&&i&&!i.destroyed){a=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)n.trigger(e[t])}})}}},ae={setTranslate:function(){var e,t=this.$el,i=this.$wrapperEl,n=this.slides,a=this.width,s=this.height,r=this.rtlTranslate,o=this.size,l=this.browser,c=this.params.cubeEffect,u=this.isHorizontal(),h=this.virtual&&this.params.virtual.enabled,d=0;c.shadow&&(u?(0===(e=i.find(".swiper-cube-shadow")).length&&(e=I('<div class="swiper-cube-shadow"></div>'),i.append(e)),e.css({height:a+"px"})):0===(e=t.find(".swiper-cube-shadow")).length&&(e=I('<div class="swiper-cube-shadow"></div>'),t.append(e)));for(var p=0;p<n.length;p+=1){var f=n.eq(p),m=p;h&&(m=parseInt(f.attr("data-swiper-slide-index"),10));var g=90*m,v=Math.floor(g/360);r&&(g=-g,v=Math.floor(-g/360));var y=Math.max(Math.min(f[0].progress,1),-1),b=0,w=0,x=0;m%4==0?(b=4*-v*o,x=0):(m-1)%4==0?(b=0,x=4*-v*o):(m-2)%4==0?(b=o+4*v*o,x=o):(m-3)%4==0&&(b=-o,x=3*o+4*o*v),r&&(b=-b),u||(w=b,b=0);var C="rotateX("+(u?0:-g)+"deg) rotateY("+(u?g:0)+"deg) translate3d("+b+"px, "+w+"px, "+x+"px)";if(y<=1&&-1<y&&(d=90*m+90*y,r&&(d=90*-m-90*y)),f.transform(C),c.slideShadows){var S=u?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),E=u?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom");0===S.length&&(S=I('<div class="swiper-slide-shadow-'+(u?"left":"top")+'"></div>'),f.append(S)),0===E.length&&(E=I('<div class="swiper-slide-shadow-'+(u?"right":"bottom")+'"></div>'),f.append(E)),S.length&&(S[0].style.opacity=Math.max(-y,0)),E.length&&(E[0].style.opacity=Math.max(y,0))}}if(i.css({"-webkit-transform-origin":"50% 50% -"+o/2+"px","-moz-transform-origin":"50% 50% -"+o/2+"px","-ms-transform-origin":"50% 50% -"+o/2+"px","transform-origin":"50% 50% -"+o/2+"px"}),c.shadow)if(u)e.transform("translate3d(0px, "+(a/2+c.shadowOffset)+"px, "+-a/2+"px) rotateX(90deg) rotateZ(0deg) scale("+c.shadowScale+")");else{var T=Math.abs(d)-90*Math.floor(Math.abs(d)/90),A=1.5-(Math.sin(2*T*Math.PI/360)/2+Math.cos(2*T*Math.PI/360)/2),M=c.shadowScale,k=c.shadowScale/A,O=c.shadowOffset;e.transform("scale3d("+M+", 1, "+k+") translate3d(0px, "+(s/2+O)+"px, "+-s/2/k+"px) rotateX(-90deg)")}var D=l.isSafari||l.isWebView?-o/2:0;i.transform("translate3d(0px,0,"+D+"px) rotateX("+(this.isHorizontal()?0:d)+"deg) rotateY("+(this.isHorizontal()?-d:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},oe={setTranslate:function(){for(var e=this.slides,t=this.rtlTranslate,i=0;i<e.length;i+=1){var n=e.eq(i),a=n[0].progress;this.params.flipEffect.limitRotation&&(a=Math.max(Math.min(n[0].progress,1),-1));var s=-180*a,r=0,o=-n[0].swiperSlideOffset,l=0;if(this.isHorizontal()?t&&(s=-s):(l=o,r=-s,s=o=0),n[0].style.zIndex=-Math.abs(Math.round(a))+e.length,this.params.flipEffect.slideShadows){var c=this.isHorizontal()?n.find(".swiper-slide-shadow-left"):n.find(".swiper-slide-shadow-top"),u=this.isHorizontal()?n.find(".swiper-slide-shadow-right"):n.find(".swiper-slide-shadow-bottom");0===c.length&&(c=I('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"left":"top")+'"></div>'),n.append(c)),0===u.length&&(u=I('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"right":"bottom")+'"></div>'),n.append(u)),c.length&&(c[0].style.opacity=Math.max(-a,0)),u.length&&(u[0].style.opacity=Math.max(a,0))}n.transform("translate3d("+o+"px, "+l+"px, 0px) rotateX("+r+"deg) rotateY("+s+"deg)")}},setTransition:function(e){var i=this,t=i.slides,n=i.activeIndex,a=i.$wrapperEl;if(t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),i.params.virtualTranslate&&0!==e){var s=!1;t.eq(n).transitionEnd(function(){if(!s&&i&&!i.destroyed){s=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)a.trigger(e[t])}})}}},le={setTranslate:function(){for(var e=this.width,t=this.height,i=this.slides,n=this.slidesSizesGrid,a=this.params.coverflowEffect,s=this.isHorizontal(),r=this.translate,o=s?e/2-r:t/2-r,l=s?a.rotate:-a.rotate,c=a.depth,u=0,h=i.length;u<h;u+=1){var d=i.eq(u),p=n[u],f=(o-d[0].swiperSlideOffset-p/2)/p*a.modifier,m=s?l*f:0,g=s?0:l*f,v=-c*Math.abs(f),y=a.stretch;"string"==typeof y&&-1!==y.indexOf("%")&&(y=parseFloat(a.stretch)/100*p);var b=s?0:y*f,w=s?y*f:0,x=1-(1-a.scale)*Math.abs(f);Math.abs(w)<.001&&(w=0),Math.abs(b)<.001&&(b=0),Math.abs(v)<.001&&(v=0),Math.abs(m)<.001&&(m=0),Math.abs(g)<.001&&(g=0),Math.abs(x)<.001&&(x=0);var C="translate3d("+w+"px,"+b+"px,"+v+"px)  rotateX("+g+"deg) rotateY("+m+"deg) scale("+x+")";if(d.transform(C),d[0].style.zIndex=1-Math.abs(Math.round(f)),a.slideShadows){var S=s?d.find(".swiper-slide-shadow-left"):d.find(".swiper-slide-shadow-top"),E=s?d.find(".swiper-slide-shadow-right"):d.find(".swiper-slide-shadow-bottom");0===S.length&&(S=I('<div class="swiper-slide-shadow-'+(s?"left":"top")+'"></div>'),d.append(S)),0===E.length&&(E=I('<div class="swiper-slide-shadow-'+(s?"right":"bottom")+'"></div>'),d.append(E)),S.length&&(S[0].style.opacity=0<f?f:0),E.length&&(E[0].style.opacity=0<-f?-f:0)}}},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},ce={init:function(){var e=this.params.thumbs;if(this.thumbs.initialized)return!1;this.thumbs.initialized=!0;var t=this.constructor;return e.swiper instanceof t?(this.thumbs.swiper=e.swiper,re(this.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),re(this.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1})):S(e.swiper)&&(this.thumbs.swiper=new t(re({},e.swiper,{watchSlidesVisibility:!0,watchSlidesProgress:!0,slideToClickedSlide:!1})),this.thumbs.swiperCreated=!0),this.thumbs.swiper.$el.addClass(this.params.thumbs.thumbsContainerClass),this.thumbs.swiper.on("tap",this.thumbs.onThumbClick),!0},onThumbClick:function(){var e=this.thumbs.swiper;if(e){var t=e.clickedIndex,i=e.clickedSlide;if(!(i&&I(i).hasClass(this.params.thumbs.slideThumbActiveClass)||null==t)){var n;if(n=e.params.loop?parseInt(I(e.clickedSlide).attr("data-swiper-slide-index"),10):t,this.params.loop){var a=this.activeIndex;this.slides.eq(a).hasClass(this.params.slideDuplicateClass)&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,a=this.activeIndex);var s=this.slides.eq(a).prevAll('[data-swiper-slide-index="'+n+'"]').eq(0).index(),r=this.slides.eq(a).nextAll('[data-swiper-slide-index="'+n+'"]').eq(0).index();n=void 0===s?r:void 0===r?s:r-a<a-s?r:s}this.slideTo(n)}}},update:function(e){var t=this.thumbs.swiper;if(t){var i="auto"===t.params.slidesPerView?t.slidesPerViewDynamic():t.params.slidesPerView,n=this.params.thumbs.autoScrollOffset,a=n&&!t.params.loop;if(this.realIndex!==t.realIndex||a){var s,r,o=t.activeIndex;if(t.params.loop){t.slides.eq(o).hasClass(t.params.slideDuplicateClass)&&(t.loopFix(),t._clientLeft=t.$wrapperEl[0].clientLeft,o=t.activeIndex);var l=t.slides.eq(o).prevAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index(),c=t.slides.eq(o).nextAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index();s=void 0===l?c:void 0===c?l:c-o==o-l?o:c-o<o-l?c:l,r=this.activeIndex>this.previousIndex?"next":"prev"}else r=(s=this.realIndex)>this.previousIndex?"next":"prev";a&&(s+="next"===r?n:-1*n),t.visibleSlidesIndexes&&t.visibleSlidesIndexes.indexOf(s)<0&&(t.params.centeredSlides?s=o<s?s-Math.floor(i/2)+1:s+Math.floor(i/2)-1:o<s&&(s=s-i+1),t.slideTo(s,e?0:void 0))}var u=1,h=this.params.thumbs.slideThumbActiveClass;if(1<this.params.slidesPerView&&!this.params.centeredSlides&&(u=this.params.slidesPerView),this.params.thumbs.multipleActiveThumbs||(u=1),u=Math.floor(u),t.slides.removeClass(h),t.params.loop||t.params.virtual&&t.params.virtual.enabled)for(var d=0;d<u;d+=1)t.$wrapperEl.children('[data-swiper-slide-index="'+(this.realIndex+d)+'"]').addClass(h);else for(var p=0;p<u;p+=1)t.slides.eq(this.realIndex+p).addClass(h)}}},ue=[_,G,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarget:"container",thresholdDelta:null,thresholdTime:null}},create:function(){E(this,{mousewheel:{enabled:!1,lastScrollTime:B(),lastEventBeforeSnap:void 0,recentWheelEvents:[],enable:W.enable,disable:W.disable,handle:W.handle,handleMouseEnter:W.handleMouseEnter,handleMouseLeave:W.handleMouseLeave,animateSlider:W.animateSlider,releaseScroll:W.releaseScroll}})},on:{init:function(e){!e.params.mousewheel.enabled&&e.params.cssMode&&e.mousewheel.disable(),e.params.mousewheel.enabled&&e.mousewheel.enable()},destroy:function(e){e.params.cssMode&&e.mousewheel.enable(),e.mousewheel.enabled&&e.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){E(this,{navigation:t({},X)})},on:{init:function(e){e.navigation.init(),e.navigation.update()},toEdge:function(e){e.navigation.update()},fromEdge:function(e){e.navigation.update()},destroy:function(e){e.navigation.destroy()},click:function(e,t){var i,n=e.navigation,a=n.$nextEl,s=n.$prevEl;!e.params.navigation.hideOnClick||I(t.target).is(s)||I(t.target).is(a)||(a?i=a.hasClass(e.params.navigation.hiddenClass):s&&(i=s.hasClass(e.params.navigation.hiddenClass)),!0===i?e.emit("navigationShow"):e.emit("navigationHide"),a&&a.toggleClass(e.params.navigation.hiddenClass),s&&s.toggleClass(e.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){E(this,{pagination:t({dynamicBulletIndex:0},V)})},on:{init:function(e){e.pagination.init(),e.pagination.render(),e.pagination.update()},activeIndexChange:function(e){!e.params.loop&&void 0!==e.snapIndex||e.pagination.update()},snapIndexChange:function(e){e.params.loop||e.pagination.update()},slidesLengthChange:function(e){e.params.loop&&(e.pagination.render(),e.pagination.update())},snapGridLengthChange:function(e){e.params.loop||(e.pagination.render(),e.pagination.update())},destroy:function(e){e.pagination.destroy()},click:function(e,t){e.params.pagination.el&&e.params.pagination.hideOnClick&&0<e.pagination.$el.length&&!I(t.target).hasClass(e.params.pagination.bulletClass)&&(!0===e.pagination.$el.hasClass(e.params.pagination.hiddenClass)?e.emit("paginationShow"):e.emit("paginationHide"),e.pagination.$el.toggleClass(e.params.pagination.hiddenClass))}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){E(this,{scrollbar:t({isTouched:!1,timeout:null,dragTimeout:null},U)})},on:{init:function(e){e.scrollbar.init(),e.scrollbar.updateSize(),e.scrollbar.setTranslate()},update:function(e){e.scrollbar.updateSize()},resize:function(e){e.scrollbar.updateSize()},observerUpdate:function(e){e.scrollbar.updateSize()},setTranslate:function(e){e.scrollbar.setTranslate()},setTransition:function(e,t){e.scrollbar.setTransition(t)},destroy:function(e){e.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){E(this,{parallax:t({},Y)})},on:{beforeInit:function(e){e.params.parallax.enabled&&(e.params.watchSlidesProgress=!0,e.originalParams.watchSlidesProgress=!0)},init:function(e){e.params.parallax.enabled&&e.parallax.setTranslate()},setTranslate:function(e){e.params.parallax.enabled&&e.parallax.setTranslate()},setTransition:function(e,t){e.params.parallax.enabled&&e.parallax.setTransition(t)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var n=this;E(n,{zoom:t({enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}},K)});var a=1;Object.defineProperty(n.zoom,"scale",{get:function(){return a},set:function(e){if(a!==e){var t=n.zoom.gesture.$imageEl?n.zoom.gesture.$imageEl[0]:void 0,i=n.zoom.gesture.$slideEl?n.zoom.gesture.$slideEl[0]:void 0;n.emit("zoomChange",e,t,i)}a=e}})},on:{init:function(e){e.params.zoom.enabled&&e.zoom.enable()},destroy:function(e){e.zoom.disable()},touchStart:function(e,t){e.zoom.enabled&&e.zoom.onTouchStart(t)},touchEnd:function(e,t){e.zoom.enabled&&e.zoom.onTouchEnd(t)},doubleTap:function(e,t){e.params.zoom.enabled&&e.zoom.enabled&&e.params.zoom.toggle&&e.zoom.toggle(t)},transitionEnd:function(e){e.zoom.enabled&&e.params.zoom.enabled&&e.zoom.onTransitionEnd()},slideChange:function(e){e.zoom.enabled&&e.params.zoom.enabled&&e.params.cssMode&&e.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){E(this,{lazy:t({initialImageLoaded:!1},Q)})},on:{beforeInit:function(e){e.params.lazy.enabled&&e.params.preloadImages&&(e.params.preloadImages=!1)},init:function(e){e.params.lazy.enabled&&!e.params.loop&&0===e.params.initialSlide&&e.lazy.load()},scroll:function(e){e.params.freeMode&&!e.params.freeModeSticky&&e.lazy.load()},resize:function(e){e.params.lazy.enabled&&e.lazy.load()},scrollbarDragMove:function(e){e.params.lazy.enabled&&e.lazy.load()},transitionStart:function(e){e.params.lazy.enabled&&(e.params.lazy.loadOnTransitionStart||!e.params.lazy.loadOnTransitionStart&&!e.lazy.initialImageLoaded)&&e.lazy.load()},transitionEnd:function(e){e.params.lazy.enabled&&!e.params.lazy.loadOnTransitionStart&&e.lazy.load()},slideChange:function(e){e.params.lazy.enabled&&e.params.cssMode&&e.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){E(this,{controller:t({control:this.params.controller.control},Z)})},on:{update:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},resize:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},observerUpdate:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},setTranslate:function(e,t,i){e.controller.control&&e.controller.setTranslate(t,i)},setTransition:function(e,t,i){e.controller.control&&e.controller.setTransition(t,i)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){E(this,{a11y:t(t({},J),{},{liveRegion:I('<span class="'+this.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')})})},on:{init:function(e){e.params.a11y.enabled&&(e.a11y.init(),e.a11y.updateNavigation())},toEdge:function(e){e.params.a11y.enabled&&e.a11y.updateNavigation()},fromEdge:function(e){e.params.a11y.enabled&&e.a11y.updateNavigation()},paginationUpdate:function(e){e.params.a11y.enabled&&e.a11y.updatePagination()},destroy:function(e){e.params.a11y.enabled&&e.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){E(this,{history:t({},ee)})},on:{init:function(e){e.params.history.enabled&&e.history.init()},destroy:function(e){e.params.history.enabled&&e.history.destroy()},transitionEnd:function(e){e.history.initialized&&e.history.setHistory(e.params.history.key,e.activeIndex)},slideChange:function(e){e.history.initialized&&e.params.cssMode&&e.history.setHistory(e.params.history.key,e.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){E(this,{hashNavigation:t({initialized:!1},te)})},on:{init:function(e){e.params.hashNavigation.enabled&&e.hashNavigation.init()},destroy:function(e){e.params.hashNavigation.enabled&&e.hashNavigation.destroy()},transitionEnd:function(e){e.hashNavigation.initialized&&e.hashNavigation.setHash()},slideChange:function(e){e.hashNavigation.initialized&&e.params.cssMode&&e.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){E(this,{autoplay:t(t({},ie),{},{running:!1,paused:!1})})},on:{init:function(e){e.params.autoplay.enabled&&(e.autoplay.start(),w().addEventListener("visibilitychange",e.autoplay.onVisibilityChange))},beforeTransitionStart:function(e,t,i){e.autoplay.running&&(i||!e.params.autoplay.disableOnInteraction?e.autoplay.pause(t):e.autoplay.stop())},sliderFirstMove:function(e){e.autoplay.running&&(e.params.autoplay.disableOnInteraction?e.autoplay.stop():e.autoplay.pause())},touchEnd:function(e){e.params.cssMode&&e.autoplay.paused&&!e.params.autoplay.disableOnInteraction&&e.autoplay.run()},destroy:function(e){e.autoplay.running&&e.autoplay.stop(),w().removeEventListener("visibilitychange",e.autoplay.onVisibilityChange)}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){E(this,{fadeEffect:t({},ne)})},on:{beforeInit:function(e){if("fade"===e.params.effect){e.classNames.push(e.params.containerModifierClass+"fade");var t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};re(e.params,t),re(e.originalParams,t)}},setTranslate:function(e){"fade"===e.params.effect&&e.fadeEffect.setTranslate()},setTransition:function(e,t){"fade"===e.params.effect&&e.fadeEffect.setTransition(t)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){E(this,{cubeEffect:t({},ae)})},on:{beforeInit:function(e){if("cube"===e.params.effect){e.classNames.push(e.params.containerModifierClass+"cube"),e.classNames.push(e.params.containerModifierClass+"3d");var t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};re(e.params,t),re(e.originalParams,t)}},setTranslate:function(e){"cube"===e.params.effect&&e.cubeEffect.setTranslate()},setTransition:function(e,t){"cube"===e.params.effect&&e.cubeEffect.setTransition(t)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){E(this,{flipEffect:t({},oe)})},on:{beforeInit:function(e){if("flip"===e.params.effect){e.classNames.push(e.params.containerModifierClass+"flip"),e.classNames.push(e.params.containerModifierClass+"3d");var t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};re(e.params,t),re(e.originalParams,t)}},setTranslate:function(e){"flip"===e.params.effect&&e.flipEffect.setTranslate()},setTransition:function(e,t){"flip"===e.params.effect&&e.flipEffect.setTransition(t)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,scale:1,modifier:1,slideShadows:!0}},create:function(){E(this,{coverflowEffect:t({},le)})},on:{beforeInit:function(e){"coverflow"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"coverflow"),e.classNames.push(e.params.containerModifierClass+"3d"),e.params.watchSlidesProgress=!0,e.originalParams.watchSlidesProgress=!0)},setTranslate:function(e){"coverflow"===e.params.effect&&e.coverflowEffect.setTranslate()},setTransition:function(e,t){"coverflow"===e.params.effect&&e.coverflowEffect.setTransition(t)}}},{name:"thumbs",params:{thumbs:{swiper:null,multipleActiveThumbs:!0,autoScrollOffset:0,slideThumbActiveClass:"swiper-slide-thumb-active",thumbsContainerClass:"swiper-container-thumbs"}},create:function(){E(this,{thumbs:t({swiper:null,initialized:!1},ce)})},on:{beforeInit:function(e){var t=e.params.thumbs;t&&t.swiper&&(e.thumbs.init(),e.thumbs.update(!0))},slideChange:function(e){e.thumbs.swiper&&e.thumbs.update()},update:function(e){e.thumbs.swiper&&e.thumbs.update()},resize:function(e){e.thumbs.swiper&&e.thumbs.update()},observerUpdate:function(e){e.thumbs.swiper&&e.thumbs.update()},setTransition:function(e,t){var i=e.thumbs.swiper;i&&i.setTransition(t)},beforeDestroy:function(e){var t=e.thumbs.swiper;t&&e.thumbs.swiperCreated&&t&&t.destroy()}}}];return j.use(ue),j}),function(){function t(e,t){return function(){return e.apply(t,arguments)}}var n,e,i,l,a,r=[].indexOf||function(e){for(var t=0,i=this.length;t<i;t++)if(t in this&&this[t]===e)return t;return-1};function s(){}function o(){this.keys=[],this.values=[]}function c(){"undefined"!=typeof console&&null!==console&&console.warn("MutationObserver is not supported by your browser."),"undefined"!=typeof console&&null!==console&&console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content.")}function u(e){null==e&&(e={}),this.scrollCallback=t(this.scrollCallback,this),this.scrollHandler=t(this.scrollHandler,this),this.resetAnimation=t(this.resetAnimation,this),this.start=t(this.start,this),this.scrolled=!0,this.config=this.util().extend(e,this.defaults),null!=e.scrollContainer&&(this.config.scrollContainer=document.querySelector(e.scrollContainer)),this.animationNameCache=new i,this.wowEvent=this.util().createEvent(this.config.boxClass)}s.prototype.extend=function(e,t){var i,n;for(i in t)n=t[i],null==e[i]&&(e[i]=n);return e},s.prototype.isMobile=function(e){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e)},s.prototype.createEvent=function(e,t,i,n){var a;return null==t&&(t=!1),null==i&&(i=!1),null==n&&(n=null),null!=document.createEvent?(a=document.createEvent("CustomEvent")).initCustomEvent(e,t,i,n):null!=document.createEventObject?(a=document.createEventObject()).eventType=e:a.eventName=e,a},s.prototype.emitEvent=function(e,t){return null!=e.dispatchEvent?e.dispatchEvent(t):t in(null!=e)?e[t]():"on"+t in(null!=e)?e["on"+t]():void 0},s.prototype.addEvent=function(e,t,i){return null!=e.addEventListener?e.addEventListener(t,i,!1):null!=e.attachEvent?e.attachEvent("on"+t,i):e[t]=i},s.prototype.removeEvent=function(e,t,i){return null!=e.removeEventListener?e.removeEventListener(t,i,!1):null!=e.detachEvent?e.detachEvent("on"+t,i):delete e[t]},s.prototype.innerHeight=function(){return"innerHeight"in window?window.innerHeight:document.documentElement.clientHeight},e=s,i=this.WeakMap||this.MozWeakMap||(o.prototype.get=function(e){var t,i,n,a;for(t=i=0,n=(a=this.keys).length;i<n;t=++i)if(a[t]===e)return this.values[t]},o.prototype.set=function(e,t){var i,n,a,s;for(i=n=0,a=(s=this.keys).length;n<a;i=++n)if(s[i]===e)return void(this.values[i]=t);return this.keys.push(e),this.values.push(t)},i=o),n=this.MutationObserver||this.WebkitMutationObserver||this.MozMutationObserver||(c.notSupported=!0,c.prototype.observe=function(){},n=c),l=this.getComputedStyle||function(i,e){return this.getPropertyValue=function(e){var t;return"float"===e&&(e="styleFloat"),a.test(e)&&e.replace(a,function(e,t){return t.toUpperCase()}),(null!=(t=i.currentStyle)?t[e]:void 0)||null},this},a=/(\-([a-z]){1})/g,this.WOW=(u.prototype.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0,live:!0,callback:null,scrollContainer:null},u.prototype.init=function(){var e;return this.element=window.document.documentElement,"interactive"===(e=document.readyState)||"complete"===e?this.start():this.util().addEvent(document,"DOMContentLoaded",this.start),this.finished=[]},u.prototype.start=function(){var a,e,t,i,r;if(this.stopped=!1,this.boxes=function(){var e,t,i,n;for(n=[],e=0,t=(i=this.element.querySelectorAll("."+this.config.boxClass)).length;e<t;e++)a=i[e],n.push(a);return n}.call(this),this.all=function(){var e,t,i,n;for(n=[],e=0,t=(i=this.boxes).length;e<t;e++)a=i[e],n.push(a);return n}.call(this),this.boxes.length)if(this.disabled())this.resetStyle();else for(e=0,t=(i=this.boxes).length;e<t;e++)a=i[e],this.applyStyle(a,!0);if(this.disabled()||(this.util().addEvent(this.config.scrollContainer||window,"scroll",this.scrollHandler),this.util().addEvent(window,"resize",this.scrollHandler),this.interval=setInterval(this.scrollCallback,50)),this.config.live)return new n((r=this,function(e){var t,i,a,s,n;for(n=[],t=0,i=e.length;t<i;t++)s=e[t],n.push(function(){var e,t,i,n;for(n=[],e=0,t=(i=s.addedNodes||[]).length;e<t;e++)a=i[e],n.push(this.doSync(a));return n}.call(r));return n})).observe(document.body,{childList:!0,subtree:!0})},u.prototype.stop=function(){if(this.stopped=!0,this.util().removeEvent(this.config.scrollContainer||window,"scroll",this.scrollHandler),this.util().removeEvent(window,"resize",this.scrollHandler),null!=this.interval)return clearInterval(this.interval)},u.prototype.sync=function(e){if(n.notSupported)return this.doSync(this.element)},u.prototype.doSync=function(e){var t,i,n,a,s;if(null==e&&(e=this.element),1===e.nodeType){for(s=[],i=0,n=(a=(e=e.parentNode||e).querySelectorAll("."+this.config.boxClass)).length;i<n;i++)t=a[i],r.call(this.all,t)<0?(this.boxes.push(t),this.all.push(t),this.stopped||this.disabled()?this.resetStyle():this.applyStyle(t,!0),s.push(this.scrolled=!0)):s.push(void 0);return s}},u.prototype.show=function(e){return this.applyStyle(e),e.className=e.className+" "+this.config.animateClass,null!=this.config.callback&&this.config.callback(e),this.util().emitEvent(e,this.wowEvent),this.util().addEvent(e,"animationend",this.resetAnimation),this.util().addEvent(e,"oanimationend",this.resetAnimation),this.util().addEvent(e,"webkitAnimationEnd",this.resetAnimation),this.util().addEvent(e,"MSAnimationEnd",this.resetAnimation),e},u.prototype.applyStyle=function(e,t){var i,n,a,s;return n=e.getAttribute("data-wow-duration"),i=e.getAttribute("data-wow-delay"),a=e.getAttribute("data-wow-iteration"),this.animate((s=this,function(){return s.customStyle(e,t,n,i,a)}))},u.prototype.animate="requestAnimationFrame"in window?function(e){return window.requestAnimationFrame(e)}:function(e){return e()},u.prototype.resetStyle=function(){var e,t,i,n,a;for(a=[],t=0,i=(n=this.boxes).length;t<i;t++)e=n[t],a.push(e.style.visibility="visible");return a},u.prototype.resetAnimation=function(e){var t;if(0<=e.type.toLowerCase().indexOf("animationend"))return(t=e.target||e.srcElement).className=t.className.replace(this.config.animateClass,"").trim()},u.prototype.customStyle=function(e,t,i,n,a){return t&&this.cacheAnimationName(e),e.style.visibility=t?"hidden":"visible",i&&this.vendorSet(e.style,{animationDuration:i}),n&&this.vendorSet(e.style,{animationDelay:n}),a&&this.vendorSet(e.style,{animationIterationCount:a}),this.vendorSet(e.style,{animationName:t?"none":this.cachedAnimationName(e)}),e},u.prototype.vendors=["moz","webkit"],u.prototype.vendorSet=function(a,e){var s,t,r,o;for(s in t=[],e)r=e[s],a[""+s]=r,t.push(function(){var e,t,i,n;for(n=[],e=0,t=(i=this.vendors).length;e<t;e++)o=i[e],n.push(a[""+o+s.charAt(0).toUpperCase()+s.substr(1)]=r);return n}.call(this));return t},u.prototype.vendorCSS=function(e,t){var i,n,a,s,r,o;for(s=(r=l(e)).getPropertyCSSValue(t),i=0,n=(a=this.vendors).length;i<n;i++)o=a[i],s=s||r.getPropertyCSSValue("-"+o+"-"+t);return s},u.prototype.animationName=function(t){var i;try{i=this.vendorCSS(t,"animation-name").cssText}catch(e){i=l(t).getPropertyValue("animation-name")}return"none"===i?"":i},u.prototype.cacheAnimationName=function(e){return this.animationNameCache.set(e,this.animationName(e))},u.prototype.cachedAnimationName=function(e){return this.animationNameCache.get(e)},u.prototype.scrollHandler=function(){return this.scrolled=!0},u.prototype.scrollCallback=function(){var a;if(this.scrolled&&(this.scrolled=!1,this.boxes=function(){var e,t,i,n;for(n=[],e=0,t=(i=this.boxes).length;e<t;e++)(a=i[e])&&(this.isVisible(a)?this.show(a):n.push(a));return n}.call(this),!this.boxes.length&&!this.config.live))return this.stop()},u.prototype.offsetTop=function(e){for(var t;void 0===e.offsetTop;)e=e.parentNode;for(t=e.offsetTop;e=e.offsetParent;)t+=e.offsetTop;return t},u.prototype.isVisible=function(e){var t,i,n,a,s;return i=e.getAttribute("data-wow-offset")||this.config.offset,a=(s=this.config.scrollContainer&&this.config.scrollContainer.scrollTop||window.pageYOffset)+Math.min(this.element.clientHeight,this.util().innerHeight())-i,t=(n=this.offsetTop(e))+e.clientHeight,n<=a&&s<=t},u.prototype.util=function(){return null!=this._util?this._util:this._util=new e},u.prototype.disabled=function(){return!this.config.mobile&&this.util().isMobile(navigator.userAgent)},u)}.call(this),function(d){"use strict";var p=null,f=null;!function(){var a,s,r,o,e,t=["webkit","moz","o","ms"],i=d.document.createElement("div"),n=-1;for(n=0;n<t.length&&!d.requestAnimationFrame;n++)d.requestAnimationFrame=d[t[n]+"RequestAnimationFrame"];function l(){}void 0===i.nextElementSibling&&Object.defineProperty(d.Element.prototype,"nextElementSibling",{get:function(){for(var e=this.nextSibling;e;){if(1===e.nodeType)return e;e=e.nextSibling}return null}}),(e=d.Element.prototype).matches=e.matches||e.machesSelector||e.mozMatchesSelector||e.msMatchesSelector||e.oMatchesSelector||e.webkitMatchesSelector||function(e){return-1<Array.prototype.indexOf.call(this.parentElement.querySelectorAll(e),this)},Object.keys||(Object.keys=(o=Object.prototype.hasOwnProperty,a=!{toString:null}.propertyIsEnumerable("toString"),r=(s=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"]).length,function(e){var t=[],i="",n=-1;if("object"!=typeof e&&("function"!=typeof e||null===e))throw new TypeError("Object.keys called on non-object");for(i in e)o.call(e,i)&&t.push(i);if(a)for(n=0;n<r;n++)o.call(e,s[n])&&t.push(s[n]);return t})),Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),"function"!=typeof Object.create&&(Object.create=function(e,t){if(e!==Object(e)&&null!==e)throw TypeError("Argument must be an object, or null");l.prototype=e||{};var i=new l;return l.prototype=null,void 0!==t&&Object.defineProperties(i,t),null===e&&(i.__proto__=null),i}),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){var t,i,n,a;if(null===this)throw new TypeError;if(0==(a=(n=Object(this)).length>>>0))return-1;if(t=0,1<arguments.length&&((t=Number(arguments[1]))!=t?t=0:0!==t&&t!==1/0&&t!==-1/0&&(t=(0<t||-1)*Math.floor(Math.abs(t)))),a<=t)return-1;for(i=0<=t?t:Math.max(a-Math.abs(t),0);i<a;i++)if(i in n&&n[i]===e)return i;return-1}),Function.prototype.bind||(Function.prototype.bind=function(e){var t,i,n,a;if("function"!=typeof this)throw new TypeError;return t=Array.prototype.slice.call(arguments,1),n=function(){},a=function(){return i.apply(this instanceof n?this:e,t.concat(Array.prototype.slice.call(arguments)))},(i=this).prototype&&(n.prototype=this.prototype),a.prototype=new n,a}),d.Element.prototype.dispatchEvent||(d.Element.prototype.dispatchEvent=function(e){try{return this.fireEvent("on"+e.type,e)}catch(e){}})}(),(p=function(e,t,i){var n=null,a=!1,s=null,r=null,o=null,l=[],c="",u=[],h=-1;if(o=i||d.document,(a=arguments[3])&&(a="boolean"==typeof a),"string"==typeof e)u=o.querySelectorAll(e);else if(e&&"object"==typeof e&&f.isElement(e,o))u=[e];else{if(!e||"object"!=typeof e||!e.length)throw new Error(p.messages.errorFactoryInvalidContainer());u=e}if(u.length<1)throw new Error(p.messages.errorFactoryContainerNotFound());for(h=0;(n=u[h])&&(!(0<h)||a);h++)n.id?c=n.id:(c="MixItUp"+f.randomHex(),n.id=c),p.instances[c]instanceof p.Mixer?(s=p.instances[c],(!t||t&&t.debug&&!1!==t.debug.showWarnings)&&console.warn(p.messages.warningFactoryPreexistingInstance())):((s=new p.Mixer).attach(n,o,c,t),p.instances[c]=s),r=new p.Facade(s),t&&t.debug&&t.debug.enable?l.push(s):l.push(r);return a?new p.Collection(l):l[0]}).use=function(e){p.Base.prototype.callActions.call(p,"beforeUse",arguments),"function"==typeof e&&"mixitup-extension"===e.TYPE?void 0===p.extensions[e.NAME]&&(e(p),p.extensions[e.NAME]=e):e.fn&&e.fn.jquery&&(p.libraries.$=e),p.Base.prototype.callActions.call(p,"afterUse",arguments)},p.instances={},p.extensions={},p.libraries={},f={hasClass:function(e,t){return!!e.className.match(new RegExp("(\\s|^)"+t+"(\\s|$)"))},addClass:function(e,t){this.hasClass(e,t)||(e.className+=e.className?" "+t:t)},removeClass:function(e,t){if(this.hasClass(e,t)){var i=new RegExp("(\\s|^)"+t+"(\\s|$)");e.className=e.className.replace(i," ").trim()}},extend:function(t,e,i,n){var a=[],s="",r=-1;i=i||!1,n=n||!1;try{if(Array.isArray(e))for(r=0;r<e.length;r++)a.push(r);else e&&(a=Object.keys(e));for(r=0;r<a.length;r++)s=a[r],!i||"object"!=typeof e[s]||this.isElement(e[s])?t[s]=e[s]:(Array.isArray(e[s])?t[s]||(t[s]=[]):t[s]||(t[s]={}),this.extend(t[s],e[s],i,n))}catch(e){if(!n)throw e;this.handleExtendError(e,t)}return t},handleExtendError:function(e,t){var i=null,n="",a="",s="",r="",o="",l=-1,c=-1;if(e instanceof TypeError&&(i=/property "?(\w*)"?[,:] object/i.exec(e.message))){for(o in n=i[1],t){for(c=0;c<n.length&&n.charAt(c)===o.charAt(c);)c++;l<c&&(l=c,r=o)}throw 1<l&&(s=p.messages.errorConfigInvalidPropertySuggestion({probableMatch:r})),a=p.messages.errorConfigInvalidProperty({erroneous:n,suggestion:s}),new TypeError(a)}throw e},template:function(n){for(var e=/\${([\w]*)}/g,a={},t=null;t=e.exec(n);)a[t[1]]=new RegExp("\\${"+t[1]+"}","g");return function(e){var t="",i=n;for(t in e=e||{},a)i=i.replace(a[t],void 0!==e[t]?e[t]:"");return i}},on:function(e,t,i,n){e&&(e.addEventListener?e.addEventListener(t,i,n):e.attachEvent&&(e["e"+t+i]=i,e[t+i]=function(){e["e"+t+i](d.event)},e.attachEvent("on"+t,e[t+i])))},off:function(e,t,i){e&&(e.removeEventListener?e.removeEventListener(t,i,!1):e.detachEvent&&(e.detachEvent("on"+t,e[t+i]),e[t+i]=null))},getCustomEvent:function(e,t,i){var n=null;return i=i||d.document,"function"==typeof d.CustomEvent?n=new d.CustomEvent(e,{detail:t,bubbles:!0,cancelable:!0}):"function"==typeof i.createEvent?(n=i.createEvent("CustomEvent")).initCustomEvent(e,!0,!0,t):((n=i.createEventObject()).type=e,n.returnValue=!1,n.cancelBubble=!1,n.detail=t),n},getOriginalEvent:function(e){return e.touches&&e.touches.length?e.touches[0]:e.changedTouches&&e.changedTouches.length?e.changedTouches[0]:e},index:function(e,t){for(var i=0;null!==(e=e.previousElementSibling);)t&&!e.matches(t)||++i;return i},camelCase:function(e){return e.toLowerCase().replace(/([_-][a-z])/g,function(e){return e.toUpperCase().replace(/[_-]/,"")})},pascalCase:function(e){return(e=this.camelCase(e)).charAt(0).toUpperCase()+e.slice(1)},dashCase:function(e){return e.replace(/([A-Z])/g,"-$1").replace(/^-/,"").toLowerCase()},isElement:function(e,t){return t=t||d.document,!!(d.HTMLElement&&e instanceof d.HTMLElement)||!!(t.defaultView&&t.defaultView.HTMLElement&&e instanceof t.defaultView.HTMLElement)||null!==e&&1===e.nodeType&&"string"==typeof e.nodeName},createElement:function(e,t){var i=null,n=null;for(i=(t=t||d.document).createDocumentFragment(),(n=t.createElement("div")).innerHTML=e.trim();n.firstChild;)i.appendChild(n.firstChild);return i},removeWhitespace:function(e){for(var t;e&&"#text"===e.nodeName;)e=(t=e).previousSibling,t.parentElement&&t.parentElement.removeChild(t)},isEqualArray:function(e,t){var i=e.length;if(i!==t.length)return!1;for(;i--;)if(e[i]!==t[i])return!1;return!0},deepEquals:function(e,t){var i;if("object"==typeof e&&e&&"object"==typeof t&&t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(i in e)if(!t.hasOwnProperty(i)||!this.deepEquals(e[i],t[i]))return!1}else if(e!==t)return!1;return!0},arrayShuffle:function(e){for(var t=e.slice(),i=t.length,n=i,a=-1,s=[];n--;)a=~~(Math.random()*i),s=t[n],t[n]=t[a],t[a]=s;return t},arrayFromList:function(t){var i,n;try{return Array.prototype.slice.call(t)}catch(e){for(i=[],n=0;n<t.length;n++)i.push(t[n]);return i}},debounce:function(a,s,r){var o;return function(){var e,t=this,i=arguments,n=r&&!o;e=function(){o=null,r||a.apply(t,i)},clearTimeout(o),o=setTimeout(e,s),n&&a.apply(t,i)}},position:function(e){for(var t=0,i=0,n=e;e;)t-=e.scrollLeft,i-=e.scrollTop,e===n&&(t+=e.offsetLeft,i+=e.offsetTop,n=e.offsetParent),e=e.parentElement;return{x:t,y:i}},getHypotenuse:function(e,t){var i=e.x-t.x,n=e.y-t.y;return i=i<0?-1*i:i,n=n<0?-1*n:n,Math.sqrt(Math.pow(i,2)+Math.pow(n,2))},getIntersectionRatio:function(e,t){var i,n=e.width*e.height;return i=Math.max(0,Math.min(e.left+e.width,t.left+t.width)-Math.max(e.left,t.left)),Math.max(0,Math.min(e.top+e.height,t.top+t.height)-Math.max(e.top,t.top))*i/n},closestParent:function(e,t,i,n){var a=e.parentNode;if(n=n||d.document,i&&e.matches(t))return e;for(;a&&a!=n.body;){if(a.matches&&a.matches(t))return a;if(!a.parentNode)return null;a=a.parentNode}return null},children:function(e,t,i){var n=[],a="";return i=i||d.doc,e&&(e.id||(a="Temp"+this.randomHexKey(),e.id=a),n=i.querySelectorAll("#"+e.id+" > "+t),a&&e.removeAttribute("id")),n},clean:function(e){var t=[],i=-1;for(i=0;i<e.length;i++)""!==e[i]&&t.push(e[i]);return t},defer:function(e){var t=null,i=null,n=null;return i=new this.Deferred,p.features.has.promises?i.promise=new Promise(function(e,t){i.resolve=e,i.reject=t}):(n=d.jQuery||e.$)&&"function"==typeof n.Deferred?(t=n.Deferred(),i.promise=t.promise(),i.resolve=t.resolve,i.reject=t.reject):d.console&&console.warn(p.messages.warningNoPromiseImplementation()),i},all:function(e,t){var i=null;return p.features.has.promises?Promise.all(e):(i=d.jQuery||t.$)&&"function"==typeof i.when?i.when.apply(i,e).done(function(){return arguments}):(d.console&&console.warn(p.messages.warningNoPromiseImplementation()),[])},getPrefix:function(e,t,i){var n=-1,a="";if(f.dashCase(t)in e.style)return"";for(n=0;a=i[n];n++)if(a+t in e.style)return a.toLowerCase();return"unsupported"},randomHex:function(){return("00000"+(16777216*Math.random()<<0).toString(16)).substr(-6).toUpperCase()},getDocumentState:function(e){return e="object"==typeof e.body?e:d.document,{scrollTop:d.pageYOffset,scrollLeft:d.pageXOffset,docHeight:e.documentElement.scrollHeight,docWidth:e.documentElement.scrollWidth,viewportHeight:e.documentElement.clientHeight,viewportWidth:e.documentElement.clientWidth}},bind:function(e,t){return function(){return t.apply(e,arguments)}},isVisible:function(e){var t=null;return!!e.offsetParent||"fixed"===(t=d.getComputedStyle(e)).position&&"hidden"!==t.visibility&&"0"!==t.opacity},seal:function(e){"function"==typeof Object.seal&&Object.seal(e)},freeze:function(e){"function"==typeof Object.freeze&&Object.freeze(e)},compareVersions:function(e,t){var i=e.split("."),n=t.split("."),a=-1,s=-1,r=-1;for(r=0;r<i.length;r++){if(a=parseInt(i[r].replace(/[^\d.]/g,"")),(s=parseInt(n[r].replace(/[^\d.]/g,"")||0))<a)return!1;if(a<s)return!0}return!0},Deferred:function(){this.promise=null,this.resolve=null,this.reject=null,this.id=f.randomHex()},isEmptyObject:function(e){var t="";if("function"==typeof Object.keys)return 0===Object.keys(e).length;for(t in e)if(e.hasOwnProperty(t))return!1;return!0},getClassname:function(e,t,i){var n="";return(n+=e.block).length&&(n+=e.delineatorElement),n+=e["element"+this.pascalCase(t)],i?(n.length&&(n+=e.delineatorModifier),n+=i):n},getProperty:function(e,t){var i,n=t.split("."),a="",s=0;if(!t)return e;for(i=function(e){return e?e[a]:null};s<n.length;)a=n[s],e=i(e),s++;return void 0!==e?e:null}},p.h=f,p.Base=function(){},p.Base.prototype={constructor:p.Base,callActions:function(e,t){var i=this.constructor.actions[e],n="";if(i&&!f.isEmptyObject(i))for(n in i)i[n].apply(this,t)},callFilters:function(e,t,i){var n=this.constructor.filters[e],a=t,s="";if(!n||f.isEmptyObject(n))return a;for(s in i=i||[],n)(i=f.arrayFromList(i)).unshift(a),a=n[s].apply(this,i);return a}},p.BaseStatic=function(){this.actions={},this.filters={},this.extend=function(e){f.extend(this.prototype,e)},this.registerAction=function(e,t,i){(this.actions[e]=this.actions[e]||{})[t]=i},this.registerFilter=function(e,t,i){(this.filters[e]=this.filters[e]||{})[t]=i}},p.Features=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.boxSizingPrefix="",this.transformPrefix="",this.transitionPrefix="",this.boxSizingPrefix="",this.transformProp="",this.transformRule="",this.transitionProp="",this.perspectiveProp="",this.perspectiveOriginProp="",this.has=new p.Has,this.canary=null,this.BOX_SIZING_PROP="boxSizing",this.TRANSITION_PROP="transition",this.TRANSFORM_PROP="transform",this.PERSPECTIVE_PROP="perspective",this.PERSPECTIVE_ORIGIN_PROP="perspectiveOrigin",this.VENDORS=["Webkit","moz","O","ms"],this.TWEENABLE=["opacity","width","height","marginRight","marginBottom","x","y","scale","translateX","translateY","translateZ","rotateX","rotateY","rotateZ"],this.callActions("afterConstruct")},p.BaseStatic.call(p.Features),p.Features.prototype=Object.create(p.Base.prototype),f.extend(p.Features.prototype,{constructor:p.Features,init:function(){this.callActions("beforeInit",arguments),this.canary=document.createElement("div"),this.setPrefixes(),this.runTests(),this.callActions("beforeInit",arguments)},runTests:function(){this.callActions("beforeRunTests",arguments),this.has.promises="function"==typeof d.Promise,this.has.transitions="unsupported"!==this.transitionPrefix,this.callActions("afterRunTests",arguments),f.freeze(this.has)},setPrefixes:function(){var e=this;e.callActions("beforeSetPrefixes",arguments),e.transitionPrefix=f.getPrefix(e.canary,"Transition",e.VENDORS),e.transformPrefix=f.getPrefix(e.canary,"Transform",e.VENDORS),e.boxSizingPrefix=f.getPrefix(e.canary,"BoxSizing",e.VENDORS),e.boxSizingProp=e.boxSizingPrefix?e.boxSizingPrefix+f.pascalCase(e.BOX_SIZING_PROP):e.BOX_SIZING_PROP,e.transitionProp=e.transitionPrefix?e.transitionPrefix+f.pascalCase(e.TRANSITION_PROP):e.TRANSITION_PROP,e.transformProp=e.transformPrefix?e.transformPrefix+f.pascalCase(e.TRANSFORM_PROP):e.TRANSFORM_PROP,e.transformRule=e.transformPrefix?"-"+e.transformPrefix+"-"+e.TRANSFORM_PROP:e.TRANSFORM_PROP,e.perspectiveProp=e.transformPrefix?e.transformPrefix+f.pascalCase(e.PERSPECTIVE_PROP):e.PERSPECTIVE_PROP,e.perspectiveOriginProp=e.transformPrefix?e.transformPrefix+f.pascalCase(e.PERSPECTIVE_ORIGIN_PROP):e.PERSPECTIVE_ORIGIN_PROP,e.callActions("afterSetPrefixes",arguments)}}),p.Has=function(){this.transitions=!1,this.promises=!1,f.seal(this)},p.features=new p.Features,p.features.init(),p.ConfigAnimation=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.enable=!0,this.effects="fade scale",this.effectsIn="",this.effectsOut="",this.duration=600,this.easing="ease",this.applyPerspective=!0,this.perspectiveDistance="3000px",this.perspectiveOrigin="50% 50%",this.queue=!0,this.queueLimit=3,this.animateResizeContainer=!0,this.animateResizeTargets=!1,this.staggerSequence=null,this.reverseOut=!1,this.nudge=!0,this.clampHeight=!0,this.clampWidth=!0,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigAnimation),p.ConfigAnimation.prototype=Object.create(p.Base.prototype),p.ConfigAnimation.prototype.constructor=p.ConfigAnimation,p.ConfigBehavior=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.liveSort=!1,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigBehavior),p.ConfigBehavior.prototype=Object.create(p.Base.prototype),p.ConfigBehavior.prototype.constructor=p.ConfigBehavior,p.ConfigCallbacks=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.onMixStart=null,this.onMixBusy=null,this.onMixEnd=null,this.onMixFail=null,this.onMixClick=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigCallbacks),p.ConfigCallbacks.prototype=Object.create(p.Base.prototype),p.ConfigCallbacks.prototype.constructor=p.ConfigCallbacks,p.ConfigControls=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.enable=!0,this.live=!1,this.scope="global",this.toggleLogic="or",this.toggleDefault="all",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigControls),p.ConfigControls.prototype=Object.create(p.Base.prototype),p.ConfigControls.prototype.constructor=p.ConfigControls,p.ConfigClassNames=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.block="mixitup",this.elementContainer="container",this.elementFilter="control",this.elementSort="control",this.elementMultimix="control",this.elementToggle="control",this.modifierActive="active",this.modifierDisabled="disabled",this.modifierFailed="failed",this.delineatorElement="-",this.delineatorModifier="-",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigClassNames),p.ConfigClassNames.prototype=Object.create(p.Base.prototype),p.ConfigClassNames.prototype.constructor=p.ConfigClassNames,p.ConfigData=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.uidKey="",this.dirtyCheck=!1,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigData),p.ConfigData.prototype=Object.create(p.Base.prototype),p.ConfigData.prototype.constructor=p.ConfigData,p.ConfigDebug=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.enable=!1,this.showWarnings=!0,this.fauxAsync=!1,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigDebug),p.ConfigDebug.prototype=Object.create(p.Base.prototype),p.ConfigDebug.prototype.constructor=p.ConfigDebug,p.ConfigLayout=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.allowNestedTargets=!0,this.containerClassName="",this.siblingBefore=null,this.siblingAfter=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigLayout),p.ConfigLayout.prototype=Object.create(p.Base.prototype),p.ConfigLayout.prototype.constructor=p.ConfigLayout,p.ConfigLoad=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.filter="all",this.sort="default:asc",this.dataset=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigLoad),p.ConfigLoad.prototype=Object.create(p.Base.prototype),p.ConfigLoad.prototype.constructor=p.ConfigLoad,p.ConfigSelectors=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.target=".mix",this.control="",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigSelectors),p.ConfigSelectors.prototype=Object.create(p.Base.prototype),p.ConfigSelectors.prototype.constructor=p.ConfigSelectors,p.ConfigRender=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.target=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigRender),p.ConfigRender.prototype=Object.create(p.Base.prototype),p.ConfigRender.prototype.constructor=p.ConfigRender,p.ConfigTemplates=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigTemplates),p.ConfigTemplates.prototype=Object.create(p.Base.prototype),p.ConfigTemplates.prototype.constructor=p.ConfigTemplates,p.Config=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.animation=new p.ConfigAnimation,this.behavior=new p.ConfigBehavior,this.callbacks=new p.ConfigCallbacks,this.controls=new p.ConfigControls,this.classNames=new p.ConfigClassNames,this.data=new p.ConfigData,this.debug=new p.ConfigDebug,this.layout=new p.ConfigLayout,this.load=new p.ConfigLoad,this.selectors=new p.ConfigSelectors,this.render=new p.ConfigRender,this.templates=new p.ConfigTemplates,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Config),p.Config.prototype=Object.create(p.Base.prototype),p.Config.prototype.constructor=p.Config,p.MixerDom=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.document=null,this.body=null,this.container=null,this.parent=null,this.targets=[],this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.MixerDom),p.MixerDom.prototype=Object.create(p.Base.prototype),p.MixerDom.prototype.constructor=p.MixerDom,p.UiClassNames=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.base="",this.active="",this.disabled="",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.UiClassNames),p.UiClassNames.prototype=Object.create(p.Base.prototype),p.UiClassNames.prototype.constructor=p.UiClassNames,p.CommandDataset=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.dataset=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandDataset),p.CommandDataset.prototype=Object.create(p.Base.prototype),p.CommandDataset.prototype.constructor=p.CommandDataset,p.CommandMultimix=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.filter=null,this.sort=null,this.insert=null,this.remove=null,this.changeLayout=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandMultimix),p.CommandMultimix.prototype=Object.create(p.Base.prototype),p.CommandMultimix.prototype.constructor=p.CommandMultimix,p.CommandFilter=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.selector="",this.collection=null,this.action="show",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandFilter),p.CommandFilter.prototype=Object.create(p.Base.prototype),p.CommandFilter.prototype.constructor=p.CommandFilter,p.CommandSort=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.sortString="",this.attribute="",this.order="asc",this.collection=null,this.next=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandSort),p.CommandSort.prototype=Object.create(p.Base.prototype),p.CommandSort.prototype.constructor=p.CommandSort,p.CommandInsert=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.index=0,this.collection=[],this.position="before",this.sibling=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandInsert),p.CommandInsert.prototype=Object.create(p.Base.prototype),p.CommandInsert.prototype.constructor=p.CommandInsert,p.CommandRemove=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.targets=[],this.collection=[],this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandRemove),p.CommandRemove.prototype=Object.create(p.Base.prototype),p.CommandRemove.prototype.constructor=p.CommandRemove,p.CommandChangeLayout=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.containerClassName="",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandChangeLayout),p.CommandChangeLayout.prototype=Object.create(p.Base.prototype),p.CommandChangeLayout.prototype.constructor=p.CommandChangeLayout,p.ControlDefinition=function(e,t,i,n){p.Base.call(this),this.callActions("beforeConstruct"),this.type=e,this.selector=t,this.live=i||!1,this.parent=n||"",this.callActions("afterConstruct"),f.freeze(this),f.seal(this)},p.BaseStatic.call(p.ControlDefinition),p.ControlDefinition.prototype=Object.create(p.Base.prototype),p.ControlDefinition.prototype.constructor=p.ControlDefinition,p.controlDefinitions=[],p.controlDefinitions.push(new p.ControlDefinition("multimix","[data-filter][data-sort]")),p.controlDefinitions.push(new p.ControlDefinition("filter","[data-filter]")),p.controlDefinitions.push(new p.ControlDefinition("sort","[data-sort]")),p.controlDefinitions.push(new p.ControlDefinition("toggle","[data-toggle]")),p.Control=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.el=null,this.selector="",this.bound=[],this.pending=-1,this.type="",this.status="inactive",this.filter="",this.sort="",this.canDisable=!1,this.handler=null,this.classNames=new p.UiClassNames,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Control),p.Control.prototype=Object.create(p.Base.prototype),f.extend(p.Control.prototype,{constructor:p.Control,init:function(e,t,i){var n=this;if(this.callActions("beforeInit",arguments),n.el=e,n.type=t,n.selector=i,n.selector)n.status="live";else switch(n.canDisable="boolean"==typeof n.el.disable,n.type){case"filter":n.filter=n.el.getAttribute("data-filter");break;case"toggle":n.filter=n.el.getAttribute("data-toggle");break;case"sort":n.sort=n.el.getAttribute("data-sort");break;case"multimix":n.filter=n.el.getAttribute("data-filter"),n.sort=n.el.getAttribute("data-sort")}n.bindClick(),p.controls.push(n),this.callActions("afterInit",arguments)},isBound:function(e){var t;return this.callActions("beforeIsBound",arguments),t=-1<this.bound.indexOf(e),this.callFilters("afterIsBound",t,arguments)},addBinding:function(e){this.callActions("beforeAddBinding",arguments),this.isBound()||this.bound.push(e),this.callActions("afterAddBinding",arguments)},removeBinding:function(e){var t=-1;this.callActions("beforeRemoveBinding",arguments),-1<(t=this.bound.indexOf(e))&&this.bound.splice(t,1),this.bound.length<1&&(this.unbindClick(),t=p.controls.indexOf(this),p.controls.splice(t,1),"active"===this.status&&this.renderStatus(this.el,"inactive")),this.callActions("afterRemoveBinding",arguments)},bindClick:function(){var t=this;this.callActions("beforeBindClick",arguments),t.handler=function(e){t.handleClick(e)},f.on(t.el,"click",t.handler),this.callActions("afterBindClick",arguments)},unbindClick:function(){this.callActions("beforeUnbindClick",arguments),f.off(this.el,"click",this.handler),this.handler=null,this.callActions("afterUnbindClick",arguments)},handleClick:function(e){var t=this,i=null,n=null,a=!1,s={},r=null,o=[],l=-1;if(this.callActions("beforeHandleClick",arguments),this.pending=0,n=t.bound[0],i=t.selector?f.closestParent(e.target,n.config.selectors.control+t.selector,!0,n.dom.document):t.el){switch(t.type){case"filter":s.filter=t.filter||i.getAttribute("data-filter");break;case"sort":s.sort=t.sort||i.getAttribute("data-sort");break;case"multimix":s.filter=t.filter||i.getAttribute("data-filter"),s.sort=t.sort||i.getAttribute("data-sort");break;case"toggle":s.filter=t.filter||i.getAttribute("data-toggle"),a="live"===t.status?f.hasClass(i,t.classNames.active):"active"===t.status}for(l=0;l<t.bound.length;l++)r=new p.CommandMultimix,f.extend(r,s),o.push(r);for(o=t.callFilters("commandsHandleClick",o,arguments),t.pending=t.bound.length,l=0;n=t.bound[l];l++)(s=o[l])&&(n.lastClicked||(n.lastClicked=i),p.events.fire("mixClick",n.dom.container,{state:n.state,instance:n,originalEvent:e,control:n.lastClicked},n.dom.document),"function"==typeof n.config.callbacks.onMixClick&&!1===n.config.callbacks.onMixClick.call(n.lastClicked,n.state,e,n)||("toggle"===t.type?a?n.toggleOff(s.filter):n.toggleOn(s.filter):n.multimix(s)));this.callActions("afterHandleClick",arguments)}else t.callActions("afterHandleClick",arguments)},update:function(e,t){var i=this,n=new p.CommandMultimix;i.callActions("beforeUpdate",arguments),i.pending--,i.pending=Math.max(0,i.pending),0<i.pending||("live"===i.status?i.updateLive(e,t):(n.sort=i.sort,n.filter=i.filter,i.callFilters("actionsUpdate",n,arguments),i.parseStatusChange(i.el,e,n,t)),i.callActions("afterUpdate",arguments))},updateLive:function(e,t){var i=null,n=null,a=null,s=-1;if(this.callActions("beforeUpdateLive",arguments),this.el){for(i=this.el.querySelectorAll(this.selector),s=0;a=i[s];s++){switch(n=new p.CommandMultimix,this.type){case"filter":n.filter=a.getAttribute("data-filter");break;case"sort":n.sort=a.getAttribute("data-sort");break;case"multimix":n.filter=a.getAttribute("data-filter"),n.sort=a.getAttribute("data-sort");break;case"toggle":n.filter=a.getAttribute("data-toggle")}n=this.callFilters("actionsUpdateLive",n,arguments),this.parseStatusChange(a,e,n,t)}this.callActions("afterUpdateLive",arguments)}},parseStatusChange:function(e,t,i,n){var a=this,s="",r=-1;switch(a.callActions("beforeParseStatusChange",arguments),a.type){case"filter":t.filter===i.filter?a.renderStatus(e,"active"):a.renderStatus(e,"inactive");break;case"multimix":t.sort===i.sort&&t.filter===i.filter?a.renderStatus(e,"active"):a.renderStatus(e,"inactive");break;case"sort":t.sort.match(/:asc/g)&&(s=t.sort.replace(/:asc/g,"")),t.sort===i.sort||s===i.sort?a.renderStatus(e,"active"):a.renderStatus(e,"inactive");break;case"toggle":for(n.length<1&&a.renderStatus(e,"inactive"),t.filter===i.filter&&a.renderStatus(e,"active"),r=0;r<n.length;r++){if(n[r]===i.filter){a.renderStatus(e,"active");break}a.renderStatus(e,"inactive")}}a.callActions("afterParseStatusChange",arguments)},renderStatus:function(e,t){var i=this;switch(i.callActions("beforeRenderStatus",arguments),t){case"active":f.addClass(e,i.classNames.active),f.removeClass(e,i.classNames.disabled),i.canDisable&&(i.el.disabled=!1);break;case"inactive":f.removeClass(e,i.classNames.active),f.removeClass(e,i.classNames.disabled),i.canDisable&&(i.el.disabled=!1);break;case"disabled":i.canDisable&&(i.el.disabled=!0),f.addClass(e,i.classNames.disabled),f.removeClass(e,i.classNames.active)}"live"!==i.status&&(i.status=t),i.callActions("afterRenderStatus",arguments)}}),p.controls=[],p.StyleData=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.x=0,this.y=0,this.top=0,this.right=0,this.bottom=0,this.left=0,this.width=0,this.height=0,this.marginRight=0,this.marginBottom=0,this.opacity=0,this.scale=new p.TransformData,this.translateX=new p.TransformData,this.translateY=new p.TransformData,this.translateZ=new p.TransformData,this.rotateX=new p.TransformData,this.rotateY=new p.TransformData,this.rotateZ=new p.TransformData,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.StyleData),p.StyleData.prototype=Object.create(p.Base.prototype),p.StyleData.prototype.constructor=p.StyleData,p.TransformData=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.value=0,this.unit="",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.TransformData),p.TransformData.prototype=Object.create(p.Base.prototype),p.TransformData.prototype.constructor=p.TransformData,p.TransformDefaults=function(){p.StyleData.apply(this),this.callActions("beforeConstruct"),this.scale.value=.01,this.scale.unit="",this.translateX.value=20,this.translateX.unit="px",this.translateY.value=20,this.translateY.unit="px",this.translateZ.value=20,this.translateZ.unit="px",this.rotateX.value=90,this.rotateX.unit="deg",this.rotateY.value=90,this.rotateY.unit="deg",this.rotateX.value=90,this.rotateX.unit="deg",this.rotateZ.value=180,this.rotateZ.unit="deg",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.TransformDefaults),p.TransformDefaults.prototype=Object.create(p.StyleData.prototype),p.TransformDefaults.prototype.constructor=p.TransformDefaults,p.transformDefaults=new p.TransformDefaults,p.EventDetail=function(){this.state=null,this.futureState=null,this.instance=null,this.originalEvent=null},p.Events=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.mixStart=null,this.mixBusy=null,this.mixEnd=null,this.mixFail=null,this.mixClick=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Events),p.Events.prototype=Object.create(p.Base.prototype),p.Events.prototype.constructor=p.Events,p.Events.prototype.fire=function(e,t,i,n){var a,s=new p.EventDetail;if(this.callActions("beforeFire",arguments),void 0===this[e])throw new Error('Event type "'+e+'" not found.');s.state=new p.State,f.extend(s.state,i.state),i.futureState&&(s.futureState=new p.State,f.extend(s.futureState,i.futureState)),s.instance=i.instance,i.originalEvent&&(s.originalEvent=i.originalEvent),a=f.getCustomEvent(e,s,n),this.callFilters("eventFire",a,arguments),t.dispatchEvent(a)},p.events=new p.Events,p.QueueItem=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.args=[],this.instruction=null,this.triggerElement=null,this.deferred=null,this.isToggling=!1,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.QueueItem),p.QueueItem.prototype=Object.create(p.Base.prototype),p.QueueItem.prototype.constructor=p.QueueItem,p.Mixer=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.config=new p.Config,this.id="",this.isBusy=!1,this.isToggling=!1,this.incPadding=!0,this.controls=[],this.targets=[],this.origOrder=[],this.cache={},this.toggleArray=[],this.targetsMoved=0,this.targetsImmovable=0,this.targetsBound=0,this.targetsDone=0,this.staggerDuration=0,this.effectsIn=null,this.effectsOut=null,this.transformIn=[],this.transformOut=[],this.queue=[],this.state=null,this.lastOperation=null,this.lastClicked=null,this.userCallback=null,this.userDeferred=null,this.dom=new p.MixerDom,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Mixer),p.Mixer.prototype=Object.create(p.Base.prototype),f.extend(p.Mixer.prototype,{constructor:p.Mixer,attach:function(e,t,i,n){var a=this,s=null,r=-1;for(a.callActions("beforeAttach",arguments),a.id=i,n&&f.extend(a.config,n,!0,!0),a.sanitizeConfig(),a.cacheDom(e,t),a.config.layout.containerClassName&&f.addClass(a.dom.container,a.config.layout.containerClassName),p.features.has.transitions||(a.config.animation.enable=!1),void 0===d.console&&(a.config.debug.showWarnings=!1),a.config.data.uidKey&&(a.config.controls.enable=!1),a.indexTargets(),a.state=a.getInitialState(),r=0;s=a.lastOperation.toHide[r];r++)s.hide();a.config.controls.enable&&(a.initControls(),a.buildToggleArray(null,a.state),a.updateControls({filter:a.state.activeFilter,sort:a.state.activeSort})),a.parseEffects(),a.callActions("afterAttach",arguments)},sanitizeConfig:function(){var e=this;e.callActions("beforeSanitizeConfig",arguments),e.config.controls.scope=e.config.controls.scope.toLowerCase().trim(),e.config.controls.toggleLogic=e.config.controls.toggleLogic.toLowerCase().trim(),e.config.controls.toggleDefault=e.config.controls.toggleDefault.toLowerCase().trim(),e.config.animation.effects=e.config.animation.effects.trim(),e.callActions("afterSanitizeConfig",arguments)},getInitialState:function(){var e=this,t=new p.State,i=new p.Operation;if(e.callActions("beforeGetInitialState",arguments),t.activeContainerClassName=e.config.layout.containerClassName,e.config.load.dataset){if(!e.config.data.uidKey||"string"!=typeof e.config.data.uidKey)throw new TypeError(p.messages.errorConfigDataUidKeyNotSet());i.startDataset=i.newDataset=t.activeDataset=e.config.load.dataset.slice(),i.startContainerClassName=i.newContainerClassName=t.activeContainerClassName,i.show=e.targets.slice(),t=e.callFilters("stateGetInitialState",t,arguments)}else t.activeFilter=e.parseFilterArgs([e.config.load.filter]).command,t.activeSort=e.parseSortArgs([e.config.load.sort]).command,t.totalTargets=e.targets.length,(t=e.callFilters("stateGetInitialState",t,arguments)).activeSort.collection||t.activeSort.attribute||"random"===t.activeSort.order||"desc"===t.activeSort.order?(i.newSort=t.activeSort,e.sortOperation(i),e.printSort(!1,i),e.targets=i.newOrder):i.startOrder=i.newOrder=e.targets,i.startFilter=i.newFilter=t.activeFilter,i.startSort=i.newSort=t.activeSort,i.startContainerClassName=i.newContainerClassName=t.activeContainerClassName,"all"===i.newFilter.selector?i.newFilter.selector=e.config.selectors.target:"none"===i.newFilter.selector&&(i.newFilter.selector="");return i=e.callFilters("operationGetInitialState",i,[t]),(e.lastOperation=i).newFilter&&e.filterOperation(i),e.buildState(i)},cacheDom:function(e,t){this.callActions("beforeCacheDom",arguments),this.dom.document=t,this.dom.body=this.dom.document.querySelector("body"),this.dom.container=e,this.dom.parent=e,this.callActions("afterCacheDom",arguments)},indexTargets:function(){var e,t=this,i=null,n=null,a=-1;if(t.callActions("beforeIndexTargets",arguments),t.dom.targets=t.config.layout.allowNestedTargets?t.dom.container.querySelectorAll(t.config.selectors.target):f.children(t.dom.container,t.config.selectors.target,t.dom.document),t.dom.targets=f.arrayFromList(t.dom.targets),t.targets=[],(e=t.config.load.dataset)&&e.length!==t.dom.targets.length)throw new Error(p.messages.errorDatasetPrerenderedMismatch());if(t.dom.targets.length){for(a=0;n=t.dom.targets[a];a++)(i=new p.Target).init(n,t,e?e[a]:void 0),i.isInDom=!0,t.targets.push(i);t.dom.parent=t.dom.targets[0].parentElement===t.dom.container?t.dom.container:t.dom.targets[0].parentElement}t.origOrder=t.targets,t.callActions("afterIndexTargets",arguments)},initControls:function(){var e=this,t="",i=null,n=null,a=null,s=null,r=null,o=-1,l=-1;switch(e.callActions("beforeInitControls",arguments),e.config.controls.scope){case"local":a=e.dom.container;break;case"global":a=e.dom.document;break;default:throw new Error(p.messages.errorConfigInvalidControlsScope())}for(o=0;t=p.controlDefinitions[o];o++)if(e.config.controls.live||t.live){if(t.parent){if(!(s=e.dom[t.parent])||s.length<0)continue;"number"!=typeof s.length&&(s=[s])}else s=[a];for(l=0;n=s[l];l++)r=e.getControl(n,t.type,t.selector),e.controls.push(r)}else for(i=a.querySelectorAll(e.config.selectors.control+t.selector),l=0;n=i[l];l++)(r=e.getControl(n,t.type,""))&&e.controls.push(r);e.callActions("afterInitControls",arguments)},getControl:function(e,t,i){var n=this,a=null,s=-1;if(n.callActions("beforeGetControl",arguments),!i)for(s=0;a=p.controls[s];s++){if(a.el===e&&a.isBound(n))return n.callFilters("controlGetControl",null,arguments);if(a.el===e&&a.type===t&&a.selector===i)return a.addBinding(n),n.callFilters("controlGetControl",a,arguments)}return(a=new p.Control).init(e,t,i),a.classNames.base=f.getClassname(n.config.classNames,t),a.classNames.active=f.getClassname(n.config.classNames,t,n.config.classNames.modifierActive),a.classNames.disabled=f.getClassname(n.config.classNames,t,n.config.classNames.modifierDisabled),a.addBinding(n),n.callFilters("controlGetControl",a,arguments)},getToggleSelector:function(){var e="or"===this.config.controls.toggleLogic?", ":"",t="";return this.callActions("beforeGetToggleSelector",arguments),this.toggleArray=f.clean(this.toggleArray),""===(t=this.toggleArray.join(e))&&(t=this.config.controls.toggleDefault),this.callFilters("selectorGetToggleSelector",t,arguments)},buildToggleArray:function(e,t){var i="";if(this.callActions("beforeBuildToggleArray",arguments),e&&e.filter)i=e.filter.selector.replace(/\s/g,"");else{if(!t)return;i=t.activeFilter.selector.replace(/\s/g,"")}i!==this.config.selectors.target&&"all"!==i||(i=""),"or"===this.config.controls.toggleLogic?this.toggleArray=i.split(","):this.toggleArray=this.splitCompoundSelector(i),this.toggleArray=f.clean(this.toggleArray),this.callActions("afterBuildToggleArray",arguments)},splitCompoundSelector:function(e){var t=e.split(/([\.\[])/g),i=[],n="",a=-1;for(""===t[0]&&t.shift(),a=0;a<t.length;a++)a%2==0&&(n=""),n+=t[a],a%2!=0&&i.push(n);return i},updateControls:function(e){var t=null,i=new p.CommandMultimix,n=-1;for(this.callActions("beforeUpdateControls",arguments),e.filter?i.filter=e.filter.selector:i.filter=this.state.activeFilter.selector,e.sort?i.sort=this.buildSortString(e.sort):i.sort=this.buildSortString(this.state.activeSort),i.filter===this.config.selectors.target&&(i.filter="all"),""===i.filter&&(i.filter="none"),f.freeze(i),n=0;t=this.controls[n];n++)t.update(i,this.toggleArray);this.callActions("afterUpdateControls",arguments)},buildSortString:function(e){var t="";return t+=e.sortString,e.next&&(t+=" "+this.buildSortString(e.next)),t},insertTargets:function(e,t){var i,n=this,a=-1,s=null,r=null,o=null,l=-1;if(n.callActions("beforeInsertTargets",arguments),void 0===e.index&&(e.index=0),i=n.getNextSibling(e.index,e.sibling,e.position),s=n.dom.document.createDocumentFragment(),a=i?f.index(i,n.config.selectors.target):n.targets.length,e.collection){for(l=0;o=e.collection[l];l++){if(-1<n.dom.targets.indexOf(o))throw new Error(p.messages.errorInsertPreexistingElement());o.style.display="none",s.appendChild(o),s.appendChild(n.dom.document.createTextNode(" ")),f.isElement(o,n.dom.document)&&o.matches(n.config.selectors.target)&&((r=new p.Target).init(o,n),r.isInDom=!0,n.targets.splice(a,0,r),a++)}n.dom.parent.insertBefore(s,i)}t.startOrder=n.origOrder=n.targets,n.callActions("afterInsertTargets",arguments)},getNextSibling:function(e,t,i){var n=this,a=null;return e=Math.max(e,0),t&&"before"===i?a=t:t&&"after"===i?a=t.nextElementSibling||null:0<n.targets.length&&void 0!==e?a=e<n.targets.length||!n.targets.length?n.targets[e].dom.el:n.targets[n.targets.length-1].dom.el.nextElementSibling:0===n.targets.length&&0<n.dom.parent.children.length&&(n.config.layout.siblingAfter?a=n.config.layout.siblingAfter:n.config.layout.siblingBefore?a=n.config.layout.siblingBefore.nextElementSibling:n.dom.parent.children[0]),n.callFilters("elementGetNextSibling",a,arguments)},filterOperation:function(e){var t,i=!1,n=-1,a=null,s=-1;for(this.callActions("beforeFilterOperation",arguments),t=e.newFilter.action,s=0;a=e.newOrder[s];s++)i=e.newFilter.collection?-1<e.newFilter.collection.indexOf(a.dom.el):""!==e.newFilter.selector&&a.dom.el.matches(e.newFilter.selector),this.evaluateHideShow(i,a,t,e);if(e.toRemove.length)for(s=0;a=e.show[s];s++)-1<e.toRemove.indexOf(a)&&(e.show.splice(s,1),-1<(n=e.toShow.indexOf(a))&&e.toShow.splice(n,1),e.toHide.push(a),e.hide.push(a),s--);e.matching=e.show.slice(),0===e.show.length&&""!==e.newFilter.selector&&0!==this.targets.length&&(e.hasFailed=!0),this.callActions("afterFilterOperation",arguments)},evaluateHideShow:function(e,t,i,n){var a,s=Array.prototype.slice.call(arguments,1);a=this.callFilters("testResultEvaluateHideShow",e,s),this.callActions("beforeEvaluateHideShow",arguments),!0===a&&"show"===i||!1===a&&"hide"===i?(n.show.push(t),t.isShown||n.toShow.push(t)):(n.hide.push(t),t.isShown&&n.toHide.push(t)),this.callActions("afterEvaluateHideShow",arguments)},sortOperation:function(i){var n=this,e=[],t=null,a=null,s=-1;if(n.callActions("beforeSortOperation",arguments),i.startOrder=n.targets,i.newSort.collection){for(e=[],s=0;a=i.newSort.collection[s];s++){if(n.dom.targets.indexOf(a)<0)throw new Error(p.messages.errorSortNonExistentElement());(t=new p.Target).init(a,n),t.isInDom=!0,e.push(t)}i.newOrder=e}else"random"===i.newSort.order?i.newOrder=f.arrayShuffle(i.startOrder):""===i.newSort.attribute?(i.newOrder=n.origOrder.slice(),"desc"===i.newSort.order&&i.newOrder.reverse()):(i.newOrder=i.startOrder.slice(),i.newOrder.sort(function(e,t){return n.compare(e,t,i.newSort)}));f.isEqualArray(i.newOrder,i.startOrder)&&(i.willSort=!1),n.callActions("afterSortOperation",arguments)},compare:function(e,t,i){var n=i.order,a=this.getAttributeValue(e,i.attribute),s=this.getAttributeValue(t,i.attribute);return isNaN(1*a)||isNaN(1*s)?(a=a.toLowerCase(),s=s.toLowerCase()):(a*=1,s*=1),a<s?"asc"===n?-1:1:s<a?"asc"===n?1:-1:a===s&&i.next?this.compare(e,t,i.next):0},getAttributeValue:function(e,t){var i;return null===(i=e.dom.el.getAttribute("data-"+t))&&this.config.debug.showWarnings&&console.warn(p.messages.warningInconsistentSortingAttributes({attribute:"data-"+t})),this.callFilters("valueGetAttributeValue",i||0,arguments)},printSort:function(e,t){var i,n=e?t.newOrder:t.startOrder,a=e?t.startOrder:t.newOrder,s=n.length?n[n.length-1].dom.el.nextElementSibling:null,r=d.document.createDocumentFragment(),o=null,l=null,c=-1;for(this.callActions("beforePrintSort",arguments),c=0;o=n[c];c++)"absolute"!==(l=o.dom.el).style.position&&(f.removeWhitespace(l.previousSibling),l.parentElement.removeChild(l));for((i=s?s.previousSibling:this.dom.parent.lastChild)&&"#text"===i.nodeName&&f.removeWhitespace(i),c=0;o=a[c];c++)l=o.dom.el,f.isElement(r.lastChild)&&r.appendChild(d.document.createTextNode(" ")),r.appendChild(l);this.dom.parent.firstChild&&this.dom.parent.firstChild!==s&&r.insertBefore(d.document.createTextNode(" "),r.childNodes[0]),s?(r.appendChild(d.document.createTextNode(" ")),this.dom.parent.insertBefore(r,s)):this.dom.parent.appendChild(r),this.callActions("afterPrintSort",arguments)},parseSortString:function(e,t){var i=e.split(" "),n=t,a=[],s=-1;for(s=0;s<i.length;s++){switch(a=i[s].split(":"),n.sortString=i[s],n.attribute=f.dashCase(a[0]),n.order=a[1]||"asc",n.attribute){case"default":n.attribute="";break;case"random":n.attribute="",n.order="random"}if(!n.attribute||"random"===n.order)break;s<i.length-1&&(n.next=new p.CommandSort,f.freeze(n),n=n.next)}return this.callFilters("commandsParseSort",t,arguments)},parseEffects:function(){var e=this,t="",i=e.config.animation.effectsIn||e.config.animation.effects,n=e.config.animation.effectsOut||e.config.animation.effects;for(t in e.callActions("beforeParseEffects",arguments),e.effectsIn=new p.StyleData,e.effectsOut=new p.StyleData,e.transformIn=[],e.transformOut=[],e.effectsIn.opacity=e.effectsOut.opacity=1,e.parseEffect("fade",i,e.effectsIn,e.transformIn),e.parseEffect("fade",n,e.effectsOut,e.transformOut,!0),p.transformDefaults)p.transformDefaults[t]instanceof p.TransformData&&(e.parseEffect(t,i,e.effectsIn,e.transformIn),e.parseEffect(t,n,e.effectsOut,e.transformOut,!0));e.parseEffect("stagger",i,e.effectsIn,e.transformIn),e.parseEffect("stagger",n,e.effectsOut,e.transformOut,!0),e.callActions("afterParseEffects",arguments)},parseEffect:function(e,t,i,n,a){var s,r="",o="",l=["%","px","em","rem","vh","vw","deg"],c="",u=-1;if(this.callActions("beforeParseEffect",arguments),"string"!=typeof t)throw new TypeError(p.messages.errorConfigInvalidAnimationEffects());if(t.indexOf(e)<0)"stagger"===e&&(this.staggerDuration=0);else{switch(-1<(s=t.indexOf(e+"("))&&(r=t.substring(s),o=/\(([^)]+)\)/.exec(r)[1]),e){case"fade":i.opacity=o?parseFloat(o):0;break;case"stagger":this.staggerDuration=o?parseFloat(o):100;break;default:if(a&&this.config.animation.reverseOut&&"scale"!==e?i[e].value=-1*(o?parseFloat(o):p.transformDefaults[e].value):i[e].value=o?parseFloat(o):p.transformDefaults[e].value,o){for(u=0;c=l[u];u++)if(-1<o.indexOf(c)){i[e].unit=c;break}}else i[e].unit=p.transformDefaults[e].unit;n.push(e+"("+i[e].value+i[e].unit+")")}this.callActions("afterParseEffect",arguments)}},buildState:function(e){var t=new p.State,i=null,n=-1;for(this.callActions("beforeBuildState",arguments),n=0;i=this.targets[n];n++)(!e.toRemove.length||e.toRemove.indexOf(i)<0)&&t.targets.push(i.dom.el);for(n=0;i=e.matching[n];n++)t.matching.push(i.dom.el);for(n=0;i=e.show[n];n++)t.show.push(i.dom.el);for(n=0;i=e.hide[n];n++)(!e.toRemove.length||e.toRemove.indexOf(i)<0)&&t.hide.push(i.dom.el);return t.id=this.id,t.container=this.dom.container,t.activeFilter=e.newFilter,t.activeSort=e.newSort,t.activeDataset=e.newDataset,t.activeContainerClassName=e.newContainerClassName,t.hasFailed=e.hasFailed,t.totalTargets=this.targets.length,t.totalShow=e.show.length,t.totalHide=e.hide.length,t.totalMatching=e.matching.length,t.triggerElement=e.triggerElement,this.callFilters("stateBuildState",t,arguments)},goMix:function(e,t){var i,n=this;return n.callActions("beforeGoMix",arguments),n.config.animation.duration&&n.config.animation.effects&&f.isVisible(n.dom.container)||(e=!1),t.toShow.length||t.toHide.length||t.willSort||t.willChangeLayout||(e=!1),t.startState.show.length||t.show.length||(e=!1),p.events.fire("mixStart",n.dom.container,{state:t.startState,futureState:t.newState,instance:n},n.dom.document),"function"==typeof n.config.callbacks.onMixStart&&n.config.callbacks.onMixStart.call(n.dom.container,t.startState,t.newState,n),f.removeClass(n.dom.container,f.getClassname(n.config.classNames,"container",n.config.classNames.modifierFailed)),i=n.userDeferred?n.userDeferred:n.userDeferred=f.defer(p.libraries),n.isBusy=!0,e&&p.features.has.transitions?(d.pageYOffset!==t.docState.scrollTop&&d.scrollTo(t.docState.scrollLeft,t.docState.scrollTop),n.config.animation.applyPerspective&&(n.dom.parent.style[p.features.perspectiveProp]=n.config.animation.perspectiveDistance,n.dom.parent.style[p.features.perspectiveOriginProp]=n.config.animation.perspectiveOrigin),n.config.animation.animateResizeContainer&&t.startHeight!==t.newHeight&&t.viewportDeltaY!==t.startHeight-t.newHeight&&(n.dom.parent.style.height=t.startHeight+"px"),n.config.animation.animateResizeContainer&&t.startWidth!==t.newWidth&&t.viewportDeltaX!==t.startWidth-t.newWidth&&(n.dom.parent.style.width=t.startWidth+"px"),t.startHeight===t.newHeight&&(n.dom.parent.style.height=t.startHeight+"px"),t.startWidth===t.newWidth&&(n.dom.parent.style.width=t.startWidth+"px"),t.startHeight===t.newHeight&&t.startWidth===t.newWidth&&(n.dom.parent.style.overflow="hidden"),requestAnimationFrame(function(){n.moveTargets(t)})):n.config.debug.fauxAsync?setTimeout(function(){n.cleanUp(t)},n.config.animation.duration):n.cleanUp(t),n.callFilters("promiseGoMix",i.promise,arguments)},getStartMixData:function(e){var t=d.getComputedStyle(this.dom.parent),i=this.dom.parent.getBoundingClientRect(),n=null,a={},s=-1,r=t[p.features.boxSizingProp];for(this.incPadding="border-box"===r,this.callActions("beforeGetStartMixData",arguments),s=0;n=e.show[s];s++)a=n.getPosData(),e.showPosData[s]={startPosData:a};for(s=0;n=e.toHide[s];s++)a=n.getPosData(),e.toHidePosData[s]={startPosData:a};e.startX=i.left,e.startY=i.top,e.startHeight=this.incPadding?i.height:i.height-parseFloat(t.paddingTop)-parseFloat(t.paddingBottom)-parseFloat(t.borderTop)-parseFloat(t.borderBottom),e.startWidth=this.incPadding?i.width:i.width-parseFloat(t.paddingLeft)-parseFloat(t.paddingRight)-parseFloat(t.borderLeft)-parseFloat(t.borderRight),this.callActions("afterGetStartMixData",arguments)},setInter:function(e){var t=this,i=null,n=-1;for(t.callActions("beforeSetInter",arguments),t.config.animation.clampHeight&&(t.dom.parent.style.height=e.startHeight+"px",t.dom.parent.style.overflow="hidden"),t.config.animation.clampWidth&&(t.dom.parent.style.width=e.startWidth+"px",t.dom.parent.style.overflow="hidden"),n=0;i=e.toShow[n];n++)i.show();e.willChangeLayout&&(f.removeClass(t.dom.container,e.startContainerClassName),f.addClass(t.dom.container,e.newContainerClassName)),t.callActions("afterSetInter",arguments)},getInterMixData:function(e){var t=null,i=-1;for(this.callActions("beforeGetInterMixData",arguments),i=0;t=e.show[i];i++)e.showPosData[i].interPosData=t.getPosData();for(i=0;t=e.toHide[i];i++)e.toHidePosData[i].interPosData=t.getPosData();this.callActions("afterGetInterMixData",arguments)},setFinal:function(e){var t=null,i=-1;for(this.callActions("beforeSetFinal",arguments),e.willSort&&this.printSort(!1,e),i=0;t=e.toHide[i];i++)t.hide();this.callActions("afterSetFinal",arguments)},getFinalMixData:function(e){var t,i=this,n=null,a=null,s=-1;for(i.callActions("beforeGetFinalMixData",arguments),s=0;a=e.show[s];s++)e.showPosData[s].finalPosData=a.getPosData();for(s=0;a=e.toHide[s];s++)e.toHidePosData[s].finalPosData=a.getPosData();for((i.config.animation.clampHeight||i.config.animation.clampWidth)&&(i.dom.parent.style.height=i.dom.parent.style.width=i.dom.parent.style.overflow=""),i.incPadding||(n=d.getComputedStyle(i.dom.parent)),t=i.dom.parent.getBoundingClientRect(),e.newX=t.left,e.newY=t.top,e.newHeight=i.incPadding?t.height:t.height-parseFloat(n.paddingTop)-parseFloat(n.paddingBottom)-parseFloat(n.borderTop)-parseFloat(n.borderBottom),e.newWidth=i.incPadding?t.width:t.width-parseFloat(n.paddingLeft)-parseFloat(n.paddingRight)-parseFloat(n.borderLeft)-parseFloat(n.borderRight),e.viewportDeltaX=e.docState.viewportWidth-this.dom.document.documentElement.clientWidth,e.viewportDeltaY=e.docState.viewportHeight-this.dom.document.documentElement.clientHeight,e.willSort&&i.printSort(!0,e),s=0;a=e.toShow[s];s++)a.hide();for(s=0;a=e.toHide[s];s++)a.show();e.willChangeLayout&&(f.removeClass(i.dom.container,e.newContainerClassName),f.addClass(i.dom.container,i.config.layout.containerClassName)),i.callActions("afterGetFinalMixData",arguments)},getTweenData:function(e){var t=this,i=null,n=null,a=Object.getOwnPropertyNames(t.effectsIn),s="",r=null,o=-1,l=-1,c=-1,u=-1;for(t.callActions("beforeGetTweenData",arguments),c=0;i=e.show[c];c++)for((n=e.showPosData[c]).posIn=new p.StyleData,n.posOut=new p.StyleData,n.tweenData=new p.StyleData,i.isShown?(n.posIn.x=n.startPosData.x-n.interPosData.x,n.posIn.y=n.startPosData.y-n.interPosData.y):n.posIn.x=n.posIn.y=0,n.posOut.x=n.finalPosData.x-n.interPosData.x,n.posOut.y=n.finalPosData.y-n.interPosData.y,n.posIn.opacity=i.isShown?1:t.effectsIn.opacity,n.posOut.opacity=1,n.tweenData.opacity=n.posOut.opacity-n.posIn.opacity,i.isShown||t.config.animation.nudge||(n.posIn.x=n.posOut.x,n.posIn.y=n.posOut.y),n.tweenData.x=n.posOut.x-n.posIn.x,n.tweenData.y=n.posOut.y-n.posIn.y,t.config.animation.animateResizeTargets&&(n.posIn.width=n.startPosData.width,n.posIn.height=n.startPosData.height,o=(n.startPosData.width||n.finalPosData.width)-n.interPosData.width,n.posIn.marginRight=n.startPosData.marginRight-o,l=(n.startPosData.height||n.finalPosData.height)-n.interPosData.height,n.posIn.marginBottom=n.startPosData.marginBottom-l,n.posOut.width=n.finalPosData.width,n.posOut.height=n.finalPosData.height,o=(n.finalPosData.width||n.startPosData.width)-n.interPosData.width,n.posOut.marginRight=n.finalPosData.marginRight-o,l=(n.finalPosData.height||n.startPosData.height)-n.interPosData.height,n.posOut.marginBottom=n.finalPosData.marginBottom-l,n.tweenData.width=n.posOut.width-n.posIn.width,n.tweenData.height=n.posOut.height-n.posIn.height,n.tweenData.marginRight=n.posOut.marginRight-n.posIn.marginRight,n.tweenData.marginBottom=n.posOut.marginBottom-n.posIn.marginBottom),u=0;s=a[u];u++)(r=t.effectsIn[s])instanceof p.TransformData&&r.value&&(n.posIn[s].value=r.value,n.posOut[s].value=0,n.tweenData[s].value=n.posOut[s].value-n.posIn[s].value,n.posIn[s].unit=n.posOut[s].unit=n.tweenData[s].unit=r.unit);for(c=0;i=e.toHide[c];c++)for((n=e.toHidePosData[c]).posIn=new p.StyleData,n.posOut=new p.StyleData,n.tweenData=new p.StyleData,n.posIn.x=i.isShown?n.startPosData.x-n.interPosData.x:0,n.posIn.y=i.isShown?n.startPosData.y-n.interPosData.y:0,n.posOut.x=t.config.animation.nudge?0:n.posIn.x,n.posOut.y=t.config.animation.nudge?0:n.posIn.y,n.tweenData.x=n.posOut.x-n.posIn.x,n.tweenData.y=n.posOut.y-n.posIn.y,t.config.animation.animateResizeTargets&&(n.posIn.width=n.startPosData.width,n.posIn.height=n.startPosData.height,o=n.startPosData.width-n.interPosData.width,n.posIn.marginRight=n.startPosData.marginRight-o,l=n.startPosData.height-n.interPosData.height,n.posIn.marginBottom=n.startPosData.marginBottom-l),n.posIn.opacity=1,n.posOut.opacity=t.effectsOut.opacity,n.tweenData.opacity=n.posOut.opacity-n.posIn.opacity,u=0;s=a[u];u++)(r=t.effectsOut[s])instanceof p.TransformData&&r.value&&(n.posIn[s].value=0,n.posOut[s].value=r.value,n.tweenData[s].value=n.posOut[s].value-n.posIn[s].value,n.posIn[s].unit=n.posOut[s].unit=n.tweenData[s].unit=r.unit);t.callActions("afterGetTweenData",arguments)},moveTargets:function(e){var t=this,i=null,n=null,a=null,s="",r=!1,o=-1,l=-1,c=t.checkProgress.bind(t);for(t.callActions("beforeMoveTargets",arguments),l=0;i=e.show[l];l++)n=new p.IMoveData,a=e.showPosData[l],s=i.isShown?"none":"show",(r=t.willTransition(s,e.hasEffect,a.posIn,a.posOut))&&o++,i.show(),n.posIn=a.posIn,n.posOut=a.posOut,n.statusChange=s,n.staggerIndex=o,n.operation=e,n.callback=r?c:null,i.move(n);for(l=0;i=e.toHide[l];l++)a=e.toHidePosData[l],n=new p.IMoveData,s="hide",r=t.willTransition(s,a.posIn,a.posOut),n.posIn=a.posIn,n.posOut=a.posOut,n.statusChange=s,n.staggerIndex=l,n.operation=e,n.callback=r?c:null,i.move(n);t.config.animation.animateResizeContainer&&(t.dom.parent.style[p.features.transitionProp]="height "+t.config.animation.duration+"ms ease, width "+t.config.animation.duration+"ms ease ",requestAnimationFrame(function(){e.startHeight!==e.newHeight&&e.viewportDeltaY!==e.startHeight-e.newHeight&&(t.dom.parent.style.height=e.newHeight+"px"),e.startWidth!==e.newWidth&&e.viewportDeltaX!==e.startWidth-e.newWidth&&(t.dom.parent.style.width=e.newWidth+"px")})),e.willChangeLayout&&(f.removeClass(t.dom.container,t.config.layout.ContainerClassName),f.addClass(t.dom.container,e.newContainerClassName)),t.callActions("afterMoveTargets",arguments)},hasEffect:function(){var e=["scale","translateX","translateY","translateZ","rotateX","rotateY","rotateZ"],t="",i=null,n=!1,a=-1;if(1!==this.effectsIn.opacity)return this.callFilters("resultHasEffect",!0,arguments);for(a=0;t=e[a];a++)if(0!==("undefined"!==(i=this.effectsIn[t]).value?i.value:i)){n=!0;break}return this.callFilters("resultHasEffect",n,arguments)},willTransition:function(e,t,i,n){var a;return a=!(!f.isVisible(this.dom.container)||!("none"!==e&&t||i.x!==n.x||i.y!==n.y)&&(!this.config.animation.animateResizeTargets||i.width===n.width&&i.height===n.height&&i.marginRight===n.marginRight&&i.marginTop===n.marginTop)),this.callFilters("resultWillTransition",a,arguments)},checkProgress:function(e){this.targetsDone++,this.targetsBound===this.targetsDone&&this.cleanUp(e)},cleanUp:function(e){var t=this,i=null,n=null,a=null,s=null,r=-1;for(t.callActions("beforeCleanUp",arguments),t.targetsMoved=t.targetsImmovable=t.targetsBound=t.targetsDone=0,r=0;i=e.show[r];r++)i.cleanUp(),i.show();for(r=0;i=e.toHide[r];r++)i.cleanUp(),i.hide();if(e.willSort&&t.printSort(!1,e),t.dom.parent.style[p.features.transitionProp]=t.dom.parent.style.height=t.dom.parent.style.width=t.dom.parent.style.overflow=t.dom.parent.style[p.features.perspectiveProp]=t.dom.parent.style[p.features.perspectiveOriginProp]="",e.willChangeLayout&&(f.removeClass(t.dom.container,e.startContainerClassName),f.addClass(t.dom.container,e.newContainerClassName)),e.toRemove.length){for(r=0;i=t.targets[r];r++)-1<e.toRemove.indexOf(i)&&((n=i.dom.el.previousSibling)&&"#text"===n.nodeName&&(a=i.dom.el.nextSibling)&&"#text"===a.nodeName&&f.removeWhitespace(n),e.willSort||t.dom.parent.removeChild(i.dom.el),t.targets.splice(r,1),i.isInDom=!1,r--);t.origOrder=t.targets}e.willSort&&(t.targets=e.newOrder),t.state=e.newState,t.lastOperation=e,t.dom.targets=t.state.targets,p.events.fire("mixEnd",t.dom.container,{state:t.state,instance:t},t.dom.document),"function"==typeof t.config.callbacks.onMixEnd&&t.config.callbacks.onMixEnd.call(t.dom.container,t.state,t),e.hasFailed&&(p.events.fire("mixFail",t.dom.container,{state:t.state,instance:t},t.dom.document),"function"==typeof t.config.callbacks.onMixFail&&t.config.callbacks.onMixFail.call(t.dom.container,t.state,t),f.addClass(t.dom.container,f.getClassname(t.config.classNames,"container",t.config.classNames.modifierFailed))),"function"==typeof t.userCallback&&t.userCallback.call(t.dom.container,t.state,t),"function"==typeof t.userDeferred.resolve&&t.userDeferred.resolve(t.state),t.userCallback=null,t.userDeferred=null,t.lastClicked=null,t.isToggling=!1,t.isBusy=!1,t.queue.length&&(t.callActions("beforeReadQueueCleanUp",arguments),s=t.queue.shift(),t.userDeferred=s.deferred,t.isToggling=s.isToggling,t.lastClicked=s.triggerElement,s.instruction.command instanceof p.CommandMultimix?t.multimix.apply(t,s.args):t.dataset.apply(t,s.args)),t.callActions("afterCleanUp",arguments)},parseMultimixArgs:function(e){var t=new p.UserInstruction,i=null,n=-1;for(t.animate=this.config.animation.enable,t.command=new p.CommandMultimix,n=0;n<e.length;n++)null!==(i=e[n])&&("object"==typeof i?f.extend(t.command,i):"boolean"==typeof i?t.animate=i:"function"==typeof i&&(t.callback=i));return!t.command.insert||t.command.insert instanceof p.CommandInsert||(t.command.insert=this.parseInsertArgs([t.command.insert]).command),!t.command.remove||t.command.remove instanceof p.CommandRemove||(t.command.remove=this.parseRemoveArgs([t.command.remove]).command),!t.command.filter||t.command.filter instanceof p.CommandFilter||(t.command.filter=this.parseFilterArgs([t.command.filter]).command),!t.command.sort||t.command.sort instanceof p.CommandSort||(t.command.sort=this.parseSortArgs([t.command.sort]).command),!t.command.changeLayout||t.command.changeLayout instanceof p.CommandChangeLayout||(t.command.changeLayout=this.parseChangeLayoutArgs([t.command.changeLayout]).command),t=this.callFilters("instructionParseMultimixArgs",t,arguments),f.freeze(t),t},parseFilterArgs:function(e){var t=new p.UserInstruction,i=null,n=-1;for(t.animate=this.config.animation.enable,t.command=new p.CommandFilter,n=0;n<e.length;n++)"string"==typeof(i=e[n])?t.command.selector=i:null===i?t.command.collection=[]:"object"==typeof i&&f.isElement(i,this.dom.document)?t.command.collection=[i]:"object"==typeof i&&void 0!==i.length?t.command.collection=f.arrayFromList(i):"object"==typeof i?f.extend(t.command,i):"boolean"==typeof i?t.animate=i:"function"==typeof i&&(t.callback=i);if(t.command.selector&&t.command.collection)throw new Error(p.messages.errorFilterInvalidArguments());return t=this.callFilters("instructionParseFilterArgs",t,arguments),f.freeze(t),t},parseSortArgs:function(e){var t=new p.UserInstruction,i=null,n="",a=-1;for(t.animate=this.config.animation.enable,t.command=new p.CommandSort,a=0;a<e.length;a++)if(null!==(i=e[a]))switch(typeof i){case"string":n=i;break;case"object":i.length&&(t.command.collection=f.arrayFromList(i));break;case"boolean":t.animate=i;break;case"function":t.callback=i}return n&&(t.command=this.parseSortString(n,t.command)),t=this.callFilters("instructionParseSortArgs",t,arguments),f.freeze(t),t},parseInsertArgs:function(e){var t=new p.UserInstruction,i=null,n=-1;for(t.animate=this.config.animation.enable,t.command=new p.CommandInsert,n=0;n<e.length;n++)null!==(i=e[n])&&("number"==typeof i?t.command.index=i:"string"==typeof i&&-1<["before","after"].indexOf(i)?t.command.position=i:"string"==typeof i?t.command.collection=f.arrayFromList(f.createElement(i).childNodes):"object"==typeof i&&f.isElement(i,this.dom.document)?t.command.collection.length?t.command.sibling=i:t.command.collection=[i]:"object"==typeof i&&i.length?t.command.collection.length?t.command.sibling=i[0]:t.command.collection=i:"object"==typeof i&&i.childNodes&&i.childNodes.length?t.command.collection.length?t.command.sibling=i.childNodes[0]:t.command.collection=f.arrayFromList(i.childNodes):"object"==typeof i?f.extend(t.command,i):"boolean"==typeof i?t.animate=i:"function"==typeof i&&(t.callback=i));if(t.command.index&&t.command.sibling)throw new Error(p.messages.errorInsertInvalidArguments());return!t.command.collection.length&&this.config.debug.showWarnings&&console.warn(p.messages.warningInsertNoElements()),t=this.callFilters("instructionParseInsertArgs",t,arguments),f.freeze(t),t},parseRemoveArgs:function(e){var t=new p.UserInstruction,i=null,n=null,a=-1;for(t.animate=this.config.animation.enable,t.command=new p.CommandRemove,a=0;a<e.length;a++)if(null!==(n=e[a]))switch(typeof n){case"number":this.targets[n]&&(t.command.targets[0]=this.targets[n]);break;case"string":t.command.collection=f.arrayFromList(this.dom.parent.querySelectorAll(n));break;case"object":n&&n.length?t.command.collection=n:f.isElement(n,this.dom.document)?t.command.collection=[n]:f.extend(t.command,n);break;case"boolean":t.animate=n;break;case"function":t.callback=n}if(t.command.collection.length)for(a=0;i=this.targets[a];a++)-1<t.command.collection.indexOf(i.dom.el)&&t.command.targets.push(i);return!t.command.targets.length&&this.config.debug.showWarnings&&console.warn(p.messages.warningRemoveNoElements()),f.freeze(t),t},parseDatasetArgs:function(e){var t=new p.UserInstruction,i=null,n=-1;for(t.animate=this.config.animation.enable,t.command=new p.CommandDataset,n=0;n<e.length;n++)if(null!==(i=e[n]))switch(typeof i){case"object":Array.isArray(i)||"number"==typeof i.length?t.command.dataset=i:f.extend(t.command,i);break;case"boolean":t.animate=i;break;case"function":t.callback=i}return f.freeze(t),t},parseChangeLayoutArgs:function(e){var t=new p.UserInstruction,i=null,n=-1;for(t.animate=this.config.animation.enable,t.command=new p.CommandChangeLayout,n=0;n<e.length;n++)if(null!==(i=e[n]))switch(typeof i){case"string":t.command.containerClassName=i;break;case"object":f.extend(t.command,i);break;case"boolean":t.animate=i;break;case"function":t.callback=i}return f.freeze(t),t},queueMix:function(e){var t=this,i=null,n="";return t.callActions("beforeQueueMix",arguments),i=f.defer(p.libraries),t.config.animation.queue&&t.queue.length<t.config.animation.queueLimit?(e.deferred=i,t.queue.push(e),t.config.controls.enable&&(t.isToggling?(t.buildToggleArray(e.instruction.command),n=t.getToggleSelector(),t.updateControls({filter:{selector:n}})):t.updateControls(e.instruction.command))):(t.config.debug.showWarnings&&console.warn(p.messages.warningMultimixInstanceQueueFull()),i.resolve(t.state),p.events.fire("mixBusy",t.dom.container,{state:t.state,instance:t},t.dom.document),"function"==typeof t.config.callbacks.onMixBusy&&t.config.callbacks.onMixBusy.call(t.dom.container,t.state,t)),t.callFilters("promiseQueueMix",i.promise,arguments)},getDataOperation:function(e){var t=this,i=new p.Operation,n=[];if(i=t.callFilters("operationUnmappedGetDataOperation",i,arguments),t.dom.targets.length&&!(n=t.state.activeDataset||[]).length)throw new Error(p.messages.errorDatasetNotSet());return i.id=f.randomHex(),i.startState=t.state,i.startDataset=n,i.newDataset=e.slice(),t.diffDatasets(i),i.startOrder=t.targets,i.newOrder=i.show,t.config.animation.enable&&(t.getStartMixData(i),t.setInter(i),i.docState=f.getDocumentState(t.dom.document),t.getInterMixData(i),t.setFinal(i),t.getFinalMixData(i),t.parseEffects(),i.hasEffect=t.hasEffect(),t.getTweenData(i)),t.targets=i.show.slice(),i.newState=t.buildState(i),Array.prototype.push.apply(t.targets,i.toRemove),t.callFilters("operationMappedGetDataOperation",i,arguments)},diffDatasets:function(e){var t=this,i=[],n=[],a=[],s=null,r=null,o=null,l=null,c=null,u={},h="",d=-1;for(t.callActions("beforeDiffDatasets",arguments),d=0;s=e.newDataset[d];d++){if(void 0===(h=s[t.config.data.uidKey])||h.toString().length<1)throw new TypeError(p.messages.errorDatasetInvalidUidKey({uidKey:t.config.data.uidKey}));if(u[h])throw new Error(p.messages.errorDatasetDuplicateUid({uid:h}));u[h]=!0,(r=t.cache[h])instanceof p.Target?(t.config.data.dirtyCheck&&!f.deepEquals(s,r.data)&&(o=r.render(s),r.data=s,o!==r.dom.el&&(r.isInDom&&(r.unbindEvents(),t.dom.parent.replaceChild(o,r.dom.el)),r.isShown||(o.style.display="none"),r.dom.el=o,r.isInDom&&r.bindEvents())),o=r.dom.el):((r=new p.Target).init(null,t,s),r.hide()),r.isInDom?(c=r.dom.el.nextElementSibling,n.push(h),l&&(l.lastElementChild&&l.appendChild(t.dom.document.createTextNode(" ")),t.insertDatasetFrag(l,r.dom.el,a),l=null)):((l=l||t.dom.document.createDocumentFragment()).lastElementChild&&l.appendChild(t.dom.document.createTextNode(" ")),l.appendChild(r.dom.el),r.isInDom=!0,r.unbindEvents(),r.bindEvents(),r.hide(),e.toShow.push(r),a.push(r)),e.show.push(r)}for(l&&((c=c||t.config.layout.siblingAfter)&&l.appendChild(t.dom.document.createTextNode(" ")),t.insertDatasetFrag(l,c,a)),d=0;s=e.startDataset[d];d++)h=s[t.config.data.uidKey],r=t.cache[h],e.show.indexOf(r)<0?(e.hide.push(r),e.toHide.push(r),e.toRemove.push(r)):i.push(h);f.isEqualArray(i,n)||(e.willSort=!0),t.callActions("afterDiffDatasets",arguments)},insertDatasetFrag:function(e,t,i){var n=t?f.arrayFromList(this.dom.parent.children).indexOf(t):this.targets.length;for(this.dom.parent.insertBefore(e,t);i.length;)this.targets.splice(n,0,i.shift()),n++},willSort:function(e,t){var i;return i=!!(this.config.behavior.liveSort||"random"===e.order||e.attribute!==t.attribute||e.order!==t.order||e.collection!==t.collection||null===e.next&&t.next||e.next&&null===t.next)||!(!e.next||!t.next)&&this.willSort(e.next,t.next),this.callFilters("resultWillSort",i,arguments)},show:function(){return this.filter("all")},hide:function(){return this.filter("none")},isMixing:function(){return this.isBusy},filter:function(){var e=this.parseFilterArgs(arguments);return this.multimix({filter:e.command},e.animate,e.callback)},toggleOn:function(){var e,t=this.parseFilterArgs(arguments),i=t.command.selector;return this.isToggling=!0,this.toggleArray.indexOf(i)<0&&this.toggleArray.push(i),e=this.getToggleSelector(),this.multimix({filter:e},t.animate,t.callback)},toggleOff:function(){var e,t=this.parseFilterArgs(arguments),i=t.command.selector,n=this.toggleArray.indexOf(i);return this.isToggling=!0,-1<n&&this.toggleArray.splice(n,1),e=this.getToggleSelector(),this.multimix({filter:e},t.animate,t.callback)},sort:function(){var e=this.parseSortArgs(arguments);return this.multimix({sort:e.command},e.animate,e.callback)},changeLayout:function(){var e=this.parseChangeLayoutArgs(arguments);return this.multimix({changeLayout:e.command},e.animate,e.callback)},dataset:function(){var e=this.parseDatasetArgs(arguments),t=null,i=null,n=!1;return this.callActions("beforeDataset",arguments),this.isBusy?((i=new p.QueueItem).args=arguments,i.instruction=e,this.queueMix(i)):(e.callback&&(this.userCallback=e.callback),n=e.animate^this.config.animation.enable?e.animate:this.config.animation.enable,t=this.getDataOperation(e.command.dataset),this.goMix(n,t))},multimix:function(){var e=this,t=null,i=!1,n=null,a=e.parseMultimixArgs(arguments);return e.callActions("beforeMultimix",arguments),e.isBusy?((n=new p.QueueItem).args=arguments,n.instruction=a,n.triggerElement=e.lastClicked,n.isToggling=e.isToggling,e.queueMix(n)):(t=e.getOperation(a.command),e.config.controls.enable&&(a.command.filter&&!e.isToggling&&(e.toggleArray.length=0,e.buildToggleArray(t.command)),e.queue.length<1&&e.updateControls(t.command)),a.callback&&(e.userCallback=a.callback),i=a.animate^e.config.animation.enable?a.animate:e.config.animation.enable,e.callFilters("operationMultimix",t,arguments),e.goMix(i,t))},getOperation:function(e){var t=this,i=e.sort,n=e.filter,a=e.changeLayout,s=e.remove,r=e.insert,o=new p.Operation;return(o=t.callFilters("operationUnmappedGetOperation",o,arguments)).id=f.randomHex(),o.command=e,o.startState=t.state,o.triggerElement=t.lastClicked,t.isBusy?(t.config.debug.showWarnings&&console.warn(p.messages.warningGetOperationInstanceBusy()),null):(r&&t.insertTargets(r,o),s&&(o.toRemove=s.targets),o.startSort=o.newSort=o.startState.activeSort,o.startOrder=o.newOrder=t.targets,i&&(o.startSort=o.startState.activeSort,o.newSort=i,o.willSort=t.willSort(i,o.startState.activeSort),o.willSort&&t.sortOperation(o)),o.startFilter=o.startState.activeFilter,o.newFilter=n||f.extend(new p.CommandFilter,o.startFilter),"all"===o.newFilter.selector?o.newFilter.selector=t.config.selectors.target:"none"===o.newFilter.selector&&(o.newFilter.selector=""),t.filterOperation(o),o.startContainerClassName=o.startState.activeContainerClassName,a?(o.newContainerClassName=a.containerClassName,o.newContainerClassName!==o.startContainerClassName&&(o.willChangeLayout=!0)):o.newContainerClassName=o.startContainerClassName,t.config.animation.enable&&(t.getStartMixData(o),t.setInter(o),o.docState=f.getDocumentState(t.dom.document),t.getInterMixData(o),t.setFinal(o),t.getFinalMixData(o),t.parseEffects(),o.hasEffect=t.hasEffect(),t.getTweenData(o)),o.willSort&&(t.targets=o.newOrder),o.newState=t.buildState(o),t.callFilters("operationMappedGetOperation",o,arguments))},tween:function(e,t){var i=null,n=null,a=-1,s=-1;for(t=Math.min(t,1),t=Math.max(t,0),s=0;i=e.show[s];s++)n=e.showPosData[s],i.applyTween(n,t);for(s=0;i=e.hide[s];s++)i.isShown&&i.hide(),-1<(a=e.toHide.indexOf(i))&&(n=e.toHidePosData[a],i.isShown||i.show(),i.applyTween(n,t))},insert:function(){var e=this.parseInsertArgs(arguments);return this.multimix({insert:e.command},e.animate,e.callback)},insertBefore:function(){var e=this.parseInsertArgs(arguments);return this.insert(e.command.collection,"before",e.command.sibling,e.animate,e.callback)},insertAfter:function(){var e=this.parseInsertArgs(arguments);return this.insert(e.command.collection,"after",e.command.sibling,e.animate,e.callback)},prepend:function(){var e=this.parseInsertArgs(arguments);return this.insert(0,e.command.collection,e.animate,e.callback)},append:function(){var e=this.parseInsertArgs(arguments);return this.insert(this.state.totalTargets,e.command.collection,e.animate,e.callback)},remove:function(){var e=this.parseRemoveArgs(arguments);return this.multimix({remove:e.command},e.animate,e.callback)},getConfig:function(e){var t;return t=e?f.getProperty(this.config,e):this.config,this.callFilters("valueGetConfig",t,arguments)},configure:function(e){this.callActions("beforeConfigure",arguments),f.extend(this.config,e,!0,!0),this.callActions("afterConfigure",arguments)},getState:function(){var e;return e=new p.State,f.extend(e,this.state),f.freeze(e),this.callFilters("stateGetState",e,arguments)},forceRefresh:function(){this.indexTargets()},forceRender:function(){var e=null,t=null,i="";for(i in this.cache)(t=(e=this.cache[i]).render(e.data))!==e.dom.el&&(e.isInDom&&(e.unbindEvents(),this.dom.parent.replaceChild(t,e.dom.el)),e.isShown||(t.style.display="none"),e.dom.el=t,e.isInDom&&e.bindEvents());this.state=this.buildState(this.lastOperation)},destroy:function(e){var t=null,i=null,n=0;for(this.callActions("beforeDestroy",arguments),n=0;t=this.controls[n];n++)t.removeBinding(this);for(n=0;i=this.targets[n];n++)e&&i.show(),i.unbindEvents();this.dom.container.id.match(/^MixItUp/)&&this.dom.container.removeAttribute("id"),delete p.instances[this.id],this.callActions("afterDestroy",arguments)}}),p.IMoveData=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.posIn=null,this.posOut=null,this.operation=null,this.callback=null,this.statusChange="",this.duration=-1,this.staggerIndex=-1,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.IMoveData),p.IMoveData.prototype=Object.create(p.Base.prototype),p.IMoveData.prototype.constructor=p.IMoveData,p.TargetDom=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.el=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.TargetDom),p.TargetDom.prototype=Object.create(p.Base.prototype),p.TargetDom.prototype.constructor=p.TargetDom,p.Target=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.sortString="",this.mixer=null,this.callback=null,this.isShown=!1,this.isBound=!1,this.isExcluded=!1,this.isInDom=!1,this.handler=null,this.operation=null,this.data=null,this.dom=new p.TargetDom,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Target),p.Target.prototype=Object.create(p.Base.prototype),f.extend(p.Target.prototype,{constructor:p.Target,init:function(e,t,i){var n=this,a="";if(n.callActions("beforeInit",arguments),n.mixer=t,e=e||n.render(i),n.cacheDom(e),n.bindEvents(),"none"!==n.dom.el.style.display&&(n.isShown=!0),i&&t.config.data.uidKey){if(void 0===(a=i[t.config.data.uidKey])||a.toString().length<1)throw new TypeError(p.messages.errorDatasetInvalidUidKey({uidKey:t.config.data.uidKey}));n.id=a,n.data=i,t.cache[a]=n}n.callActions("afterInit",arguments)},render:function(e){var t,i=null,n=null,a=null;if(this.callActions("beforeRender",arguments),"function"!=typeof(i=this.callFilters("renderRender",this.mixer.config.render.target,arguments)))throw new TypeError(p.messages.errorDatasetRendererNotSet());return(t=i(e))&&"object"==typeof t&&f.isElement(t)?n=t:"string"==typeof t&&((a=document.createElement("div")).innerHTML=t,n=a.firstElementChild),this.callFilters("elRender",n,arguments)},cacheDom:function(e){this.callActions("beforeCacheDom",arguments),this.dom.el=e,this.callActions("afterCacheDom",arguments)},getSortString:function(e){var t=this.dom.el.getAttribute("data-"+e)||"";this.callActions("beforeGetSortString",arguments),t=isNaN(1*t)?t.toLowerCase():1*t,this.sortString=t,this.callActions("afterGetSortString",arguments)},show:function(){this.callActions("beforeShow",arguments),this.isShown||(this.dom.el.style.display="",this.isShown=!0),this.callActions("afterShow",arguments)},hide:function(){this.callActions("beforeHide",arguments),this.isShown&&(this.dom.el.style.display="none",this.isShown=!1),this.callActions("afterHide",arguments)},move:function(e){var t=this;t.callActions("beforeMove",arguments),t.isExcluded||t.mixer.targetsMoved++,t.applyStylesIn(e),requestAnimationFrame(function(){t.applyStylesOut(e)}),t.callActions("afterMove",arguments)},applyTween:function(e,t){var i="",n=null,a=e.posIn,s=[],r=new p.StyleData,o=-1;for(this.callActions("beforeApplyTween",arguments),r.x=a.x,r.y=a.y,0===t?this.hide():this.isShown||this.show(),o=0;i=p.features.TWEENABLE[o];o++)if(n=e.tweenData[i],"x"===i){if(!n)continue;r.x=a.x+n*t}else if("y"===i){if(!n)continue;r.y=a.y+n*t}else if(n instanceof p.TransformData){if(!n.value)continue;r[i].value=a[i].value+n.value*t,r[i].unit=n.unit,s.push(i+"("+r[i].value+n.unit+")")}else{if(!n)continue;r[i]=a[i]+n*t,this.dom.el.style[i]=r[i]}(r.x||r.y)&&s.unshift("translate("+r.x+"px, "+r.y+"px)"),s.length&&(this.dom.el.style[p.features.transformProp]=s.join(" ")),this.callActions("afterApplyTween",arguments)},applyStylesIn:function(e){var t=this,i=e.posIn,n=1!==t.mixer.effectsIn.opacity,a=[];t.callActions("beforeApplyStylesIn",arguments),a.push("translate("+i.x+"px, "+i.y+"px)"),t.mixer.config.animation.animateResizeTargets&&("show"!==e.statusChange&&(t.dom.el.style.width=i.width+"px",t.dom.el.style.height=i.height+"px"),t.dom.el.style.marginRight=i.marginRight+"px",t.dom.el.style.marginBottom=i.marginBottom+"px"),n&&(t.dom.el.style.opacity=i.opacity),"show"===e.statusChange&&(a=a.concat(t.mixer.transformIn)),t.dom.el.style[p.features.transformProp]=a.join(" "),t.callActions("afterApplyStylesIn",arguments)},applyStylesOut:function(e){var t=this,i=[],n=[],a=t.mixer.config.animation.animateResizeTargets,s=void 0!==t.mixer.effectsIn.opacity;if(t.callActions("beforeApplyStylesOut",arguments),i.push(t.writeTransitionRule(p.features.transformRule,e.staggerIndex)),"none"!==e.statusChange&&i.push(t.writeTransitionRule("opacity",e.staggerIndex,e.duration)),a&&(i.push(t.writeTransitionRule("width",e.staggerIndex,e.duration)),i.push(t.writeTransitionRule("height",e.staggerIndex,e.duration)),i.push(t.writeTransitionRule("margin",e.staggerIndex,e.duration))),!e.callback)return t.mixer.targetsImmovable++,void(t.mixer.targetsMoved===t.mixer.targetsImmovable&&t.mixer.cleanUp(e.operation));switch(t.operation=e.operation,t.callback=e.callback,t.isExcluded||t.mixer.targetsBound++,t.isBound=!0,t.applyTransition(i),a&&0<e.posOut.width&&0<e.posOut.height&&(t.dom.el.style.width=e.posOut.width+"px",t.dom.el.style.height=e.posOut.height+"px",t.dom.el.style.marginRight=e.posOut.marginRight+"px",t.dom.el.style.marginBottom=e.posOut.marginBottom+"px"),t.mixer.config.animation.nudge||"hide"!==e.statusChange||n.push("translate("+e.posOut.x+"px, "+e.posOut.y+"px)"),e.statusChange){case"hide":s&&(t.dom.el.style.opacity=t.mixer.effectsOut.opacity),n=n.concat(t.mixer.transformOut);break;case"show":s&&(t.dom.el.style.opacity=1)}(t.mixer.config.animation.nudge||!t.mixer.config.animation.nudge&&"hide"!==e.statusChange)&&n.push("translate("+e.posOut.x+"px, "+e.posOut.y+"px)"),t.dom.el.style[p.features.transformProp]=n.join(" "),t.callActions("afterApplyStylesOut",arguments)},writeTransitionRule:function(e,t,i){var n,a=this.getDelay(t);return n=e+" "+(0<i?i:this.mixer.config.animation.duration)+"ms "+a+"ms "+("opacity"===e?"linear":this.mixer.config.animation.easing),this.callFilters("ruleWriteTransitionRule",n,arguments)},getDelay:function(e){var t;return"function"==typeof this.mixer.config.animation.staggerSequence&&(e=this.mixer.config.animation.staggerSequence.call(this,e,this.state)),t=this.mixer.staggerDuration?e*this.mixer.staggerDuration:0,this.callFilters("delayGetDelay",t,arguments)},applyTransition:function(e){var t=e.join(", ");this.callActions("beforeApplyTransition",arguments),this.dom.el.style[p.features.transitionProp]=t,this.callActions("afterApplyTransition",arguments)},handleTransitionEnd:function(e){var t=this,i=e.propertyName,n=t.mixer.config.animation.animateResizeTargets;t.callActions("beforeHandleTransitionEnd",arguments),t.isBound&&e.target.matches(t.mixer.config.selectors.target)&&(-1<i.indexOf("transform")||-1<i.indexOf("opacity")||n&&-1<i.indexOf("height")||n&&-1<i.indexOf("width")||n&&-1<i.indexOf("margin"))&&(t.callback.call(t,t.operation),t.isBound=!1,t.callback=null,t.operation=null),t.callActions("afterHandleTransitionEnd",arguments)},eventBus:function(e){switch(this.callActions("beforeEventBus",arguments),e.type){case"webkitTransitionEnd":case"transitionend":this.handleTransitionEnd(e)}this.callActions("afterEventBus",arguments)},unbindEvents:function(){this.callActions("beforeUnbindEvents",arguments),f.off(this.dom.el,"webkitTransitionEnd",this.handler),f.off(this.dom.el,"transitionend",this.handler),this.callActions("afterUnbindEvents",arguments)},bindEvents:function(){var e,t=this;t.callActions("beforeBindEvents",arguments),e="webkit"===p.features.transitionPrefix?"webkitTransitionEnd":"transitionend",t.handler=function(e){return t.eventBus(e)},f.on(t.dom.el,e,t.handler),t.callActions("afterBindEvents",arguments)},getPosData:function(e){var t={},i=null,n=new p.StyleData;return this.callActions("beforeGetPosData",arguments),n.x=this.dom.el.offsetLeft,n.y=this.dom.el.offsetTop,(this.mixer.config.animation.animateResizeTargets||e)&&(i=this.dom.el.getBoundingClientRect(),n.top=i.top,n.right=i.right,n.bottom=i.bottom,n.left=i.left,n.width=i.width,n.height=i.height),this.mixer.config.animation.animateResizeTargets&&(t=d.getComputedStyle(this.dom.el),n.marginBottom=parseFloat(t.marginBottom),n.marginRight=parseFloat(t.marginRight)),this.callFilters("posDataGetPosData",n,arguments)},cleanUp:function(){var e=this;e.callActions("beforeCleanUp",arguments),e.dom.el.style[p.features.transformProp]="",e.dom.el.style[p.features.transitionProp]="",e.dom.el.style.opacity="",e.mixer.config.animation.animateResizeTargets&&(e.dom.el.style.width="",e.dom.el.style.height="",e.dom.el.style.marginRight="",e.dom.el.style.marginBottom=""),e.callActions("afterCleanUp",arguments)}}),p.Collection=function(e){var t=null,i=-1;for(this.callActions("beforeConstruct"),i=0;t=e[i];i++)this[i]=t;this.length=e.length,this.callActions("afterConstruct"),f.freeze(this)},p.BaseStatic.call(p.Collection),p.Collection.prototype=Object.create(p.Base.prototype),f.extend(p.Collection.prototype,{constructor:p.Collection,mixitup:function(e){var t=null,i=Array.prototype.slice.call(arguments),n=[],a=-1;for(this.callActions("beforeMixitup"),i.shift(),a=0;t=this[a];a++)n.push(t[e].apply(t,i));return this.callFilters("promiseMixitup",f.all(n,p.libraries),arguments)}}),p.Operation=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.args=[],this.command=null,this.showPosData=[],this.toHidePosData=[],this.startState=null,this.newState=null,this.docState=null,this.willSort=!1,this.willChangeLayout=!1,this.hasEffect=!1,this.hasFailed=!1,this.triggerElement=null,this.show=[],this.hide=[],this.matching=[],this.toShow=[],this.toHide=[],this.toMove=[],this.toRemove=[],this.startOrder=[],this.newOrder=[],this.startSort=null,this.newSort=null,this.startFilter=null,this.newFilter=null,this.startDataset=null,this.newDataset=null,this.viewportDeltaX=0,this.viewportDeltaY=0,this.startX=0,this.startY=0,this.startHeight=0,this.startWidth=0,this.newX=0,this.newY=0,this.newHeight=0,this.newWidth=0,this.startContainerClassName="",this.startDisplay="",this.newContainerClassName="",this.newDisplay="",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Operation),p.Operation.prototype=Object.create(p.Base.prototype),p.Operation.prototype.constructor=p.Operation,p.State=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.activeFilter=null,this.activeSort=null,this.activeContainerClassName="",this.container=null,this.targets=[],this.hide=[],this.show=[],this.matching=[],this.totalTargets=-1,this.totalShow=-1,this.totalHide=-1,this.totalMatching=-1,this.hasFailed=!1,this.triggerElement=null,this.activeDataset=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.State),p.State.prototype=Object.create(p.Base.prototype),p.State.prototype.constructor=p.State,p.UserInstruction=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.command={},this.animate=!1,this.callback=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.UserInstruction),p.UserInstruction.prototype=Object.create(p.Base.prototype),p.UserInstruction.prototype.constructor=p.UserInstruction,p.Messages=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.ERROR_FACTORY_INVALID_CONTAINER="[MixItUp] An invalid selector or element reference was passed to the mixitup factory function",this.ERROR_FACTORY_CONTAINER_NOT_FOUND="[MixItUp] The provided selector yielded no container element",this.ERROR_CONFIG_INVALID_ANIMATION_EFFECTS="[MixItUp] Invalid value for `animation.effects`",this.ERROR_CONFIG_INVALID_CONTROLS_SCOPE="[MixItUp] Invalid value for `controls.scope`",this.ERROR_CONFIG_INVALID_PROPERTY='[MixitUp] Invalid configuration object property "${erroneous}"${suggestion}',this.ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION='. Did you mean "${probableMatch}"?',this.ERROR_CONFIG_DATA_UID_KEY_NOT_SET="[MixItUp] To use the dataset API, a UID key must be specified using `data.uidKey`",this.ERROR_DATASET_INVALID_UID_KEY='[MixItUp] The specified UID key "${uidKey}" is not present on one or more dataset items',this.ERROR_DATASET_DUPLICATE_UID='[MixItUp] The UID "${uid}" was found on two or more dataset items. UIDs must be unique.',this.ERROR_INSERT_INVALID_ARGUMENTS="[MixItUp] Please provider either an index or a sibling and position to insert, not both",this.ERROR_INSERT_PREEXISTING_ELEMENT="[MixItUp] An element to be inserted already exists in the container",this.ERROR_FILTER_INVALID_ARGUMENTS="[MixItUp] Please provide either a selector or collection `.filter()`, not both",this.ERROR_DATASET_NOT_SET="[MixItUp] To use the dataset API with pre-rendered targets, a starting dataset must be set using `load.dataset`",this.ERROR_DATASET_PRERENDERED_MISMATCH="[MixItUp] `load.dataset` does not match pre-rendered targets",this.ERROR_DATASET_RENDERER_NOT_SET="[MixItUp] To insert an element via the dataset API, a target renderer function must be provided to `render.target`",this.ERROR_SORT_NON_EXISTENT_ELEMENT="[MixItUp] An element to be sorted does not already exist in the container",this.WARNING_FACTORY_PREEXISTING_INSTANCE="[MixItUp] WARNING: This element already has an active MixItUp instance. The provided configuration object will be ignored. If you wish to perform additional methods on this instance, please create a reference.",this.WARNING_INSERT_NO_ELEMENTS="[MixItUp] WARNING: No valid elements were passed to `.insert()`",this.WARNING_REMOVE_NO_ELEMENTS="[MixItUp] WARNING: No valid elements were passed to `.remove()`",this.WARNING_MULTIMIX_INSTANCE_QUEUE_FULL="[MixItUp] WARNING: An operation was requested but the MixItUp instance was busy. The operation was rejected because the queue is full or queuing is disabled.",this.WARNING_GET_OPERATION_INSTANCE_BUSY="[MixItUp] WARNING: Operations can be be created while the MixItUp instance is busy.",this.WARNING_NO_PROMISE_IMPLEMENTATION="[MixItUp] WARNING: No Promise implementations could be found. If you wish to use promises with MixItUp please install an ES6 Promise polyfill.",this.WARNING_INCONSISTENT_SORTING_ATTRIBUTES='[MixItUp] WARNING: The requested sorting data attribute "${attribute}" was not present on one or more target elements which may product unexpected sort output',this.callActions("afterConstruct"),this.compileTemplates(),f.seal(this)},p.BaseStatic.call(p.Messages),p.Messages.prototype=Object.create(p.Base.prototype),p.Messages.prototype.constructor=p.Messages,p.Messages.prototype.compileTemplates=function(){var e="",t="";for(e in this)"string"==typeof(t=this[e])&&(this[f.camelCase(e)]=f.template(t))},p.messages=new p.Messages,p.Facade=function(e){p.Base.call(this),this.callActions("beforeConstruct",arguments),this.configure=e.configure.bind(e),this.show=e.show.bind(e),this.hide=e.hide.bind(e),this.filter=e.filter.bind(e),this.toggleOn=e.toggleOn.bind(e),this.toggleOff=e.toggleOff.bind(e),this.sort=e.sort.bind(e),this.changeLayout=e.changeLayout.bind(e),this.multimix=e.multimix.bind(e),this.dataset=e.dataset.bind(e),this.tween=e.tween.bind(e),this.insert=e.insert.bind(e),this.insertBefore=e.insertBefore.bind(e),this.insertAfter=e.insertAfter.bind(e),this.prepend=e.prepend.bind(e),this.append=e.append.bind(e),this.remove=e.remove.bind(e),this.destroy=e.destroy.bind(e),this.forceRefresh=e.forceRefresh.bind(e),this.forceRender=e.forceRender.bind(e),this.isMixing=e.isMixing.bind(e),this.getOperation=e.getOperation.bind(e),this.getConfig=e.getConfig.bind(e),this.getState=e.getState.bind(e),this.callActions("afterConstruct",arguments),f.freeze(this),f.seal(this)},p.BaseStatic.call(p.Facade),p.Facade.prototype=Object.create(p.Base.prototype),p.Facade.prototype.constructor=p.Facade,"object"==typeof exports&&"object"==typeof module?module.exports=p:"function"==typeof define&&define.amd?define(function(){return p}):void 0!==d.mixitup&&"function"==typeof d.mixitup||(d.mixitup=p),p.BaseStatic.call(p.constructor),p.NAME="mixitup",p.CORE_VERSION="3.3.1"}(window),function(e,t,i){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports&&"undefined"==typeof Meteor?module.exports=e(require("jquery")):e(t||i)}(function(o){"use strict";function l(d,x,C){var S={invalid:[],getCaret:function(){try{var e,t=0,i=d.get(0),n=document.selection,a=i.selectionStart;return n&&-1===navigator.appVersion.indexOf("MSIE 10")?((e=n.createRange()).moveStart("character",-S.val().length),t=e.text.length):!a&&"0"!==a||(t=a),t}catch(e){}},setCaret:function(e){try{if(d.is(":focus")){var t,i=d.get(0);i.setSelectionRange?i.setSelectionRange(e,e):((t=i.createTextRange()).collapse(!0),t.moveEnd("character",e),t.moveStart("character",e),t.select())}}catch(e){}},events:function(){d.on("keydown.mask",function(e){d.data("mask-keycode",e.keyCode||e.which),d.data("mask-previus-value",d.val()),d.data("mask-previus-caret-pos",S.getCaret()),S.maskDigitPosMapOld=S.maskDigitPosMap}).on(o.jMaskGlobals.useInput?"input.mask":"keyup.mask",S.behaviour).on("paste.mask drop.mask",function(){setTimeout(function(){d.keydown().keyup()},100)}).on("change.mask",function(){d.data("changed",!0)}).on("blur.mask",function(){r===S.val()||d.data("changed")||d.trigger("change"),d.data("changed",!1)}).on("blur.mask",function(){r=S.val()}).on("focus.mask",function(e){!0===C.selectOnFocus&&o(e.target).select()}).on("focusout.mask",function(){C.clearIfNotMatch&&!s.test(S.val())&&S.val("")})},getRegexMask:function(){for(var e,t,i,n,a,s,r=[],o=0;o<x.length;o++)(e=E.translation[x.charAt(o)])?(t=e.pattern.toString().replace(/.{1}$|^.{1}/g,""),i=e.optional,(n=e.recursive)?(r.push(x.charAt(o)),a={digit:x.charAt(o),pattern:t}):r.push(i||n?t+"?":t)):r.push(x.charAt(o).replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"));return s=r.join(""),a&&(s=s.replace(new RegExp("("+a.digit+"(.*"+a.digit+")?)"),"($1)?").replace(new RegExp(a.digit,"g"),a.pattern)),new RegExp(s)},destroyEvents:function(){d.off(["input","keydown","keyup","paste","drop","blur","focusout",""].join(".mask "))},val:function(e){var t=d.is("input")?"val":"text";return 0<arguments.length?(d[t]()!==e&&d[t](e),d):d[t]()},calculateCaretPosition:function(e){var t=S.getMasked(),i=S.getCaret();if(e!==t){var n=d.data("mask-previus-caret-pos")||0,a=t.length,s=e.length,r=0,o=0,l=0,c=0,u=0;for(u=i;u<a&&S.maskDigitPosMap[u];u++)o++;for(u=i-1;0<=u&&S.maskDigitPosMap[u];u--)r++;for(u=i-1;0<=u;u--)S.maskDigitPosMap[u]&&l++;for(u=n-1;0<=u;u--)S.maskDigitPosMapOld[u]&&c++;if(s<i)i=10*a;else if(i<=n&&n!==s){if(!S.maskDigitPosMapOld[i]){var h=i;i-=c-l,i-=r,S.maskDigitPosMap[i]&&(i=h)}}else n<i&&(i+=l-c,i+=o)}return i},behaviour:function(e){e=e||window.event,S.invalid=[];var t=d.data("mask-keycode");if(-1===o.inArray(t,E.byPassKeys)){var i=S.getMasked(),n=S.getCaret(),a=d.data("mask-previus-value")||"";return setTimeout(function(){S.setCaret(S.calculateCaretPosition(a))},o.jMaskGlobals.keyStrokeCompensation),S.val(i),S.setCaret(n),S.callbacks(e)}},getMasked:function(e,t){var i,n,a,s=[],r=void 0===t?S.val():t+"",o=0,l=x.length,c=0,u=r.length,h=1,d="push",p=-1,f=0,m=[];for(n=C.reverse?(d="unshift",h=-1,i=0,o=l-1,c=u-1,function(){return-1<o&&-1<c}):(i=l-1,function(){return o<l&&c<u});n();){var g=x.charAt(o),v=r.charAt(c),y=E.translation[g];y?(v.match(y.pattern)?(s[d](v),y.recursive&&(-1===p?p=o:o===i&&o!==p&&(o=p-h),i===p&&(o-=h)),o+=h):v===a?(f--,a=void 0):y.optional?(o+=h,c-=h):y.fallback?(s[d](y.fallback),o+=h,c-=h):S.invalid.push({p:c,v:v,e:y.pattern}),c+=h):(e||s[d](g),v===g?(m.push(c),c+=h):(a=g,m.push(c+f),f++),o+=h)}var b=x.charAt(i);l!==u+1||E.translation[b]||s.push(b);var w=s.join("");return S.mapMaskdigitPositions(w,m,u),w},mapMaskdigitPositions:function(e,t,i){var n=C.reverse?e.length-i:0;S.maskDigitPosMap={};for(var a=0;a<t.length;a++)S.maskDigitPosMap[t[a]+n]=1},callbacks:function(e){function t(e,t,i){"function"==typeof C[e]&&t&&C[e].apply(this,i)}var i=S.val(),n=i!==r,a=[i,e,d,C];t("onChange",!0==n,a),t("onKeyPress",!0==n,a),t("onComplete",i.length===x.length,a),t("onInvalid",0<S.invalid.length,[i,e,d,S.invalid,C])}};d=o(d);var s,E=this,r=S.val();x="function"==typeof x?x(S.val(),void 0,d,C):x,E.mask=x,E.options=C,E.remove=function(){var e=S.getCaret();return E.options.placeholder&&d.removeAttr("placeholder"),d.data("mask-maxlength")&&d.removeAttr("maxlength"),S.destroyEvents(),S.val(E.getCleanVal()),S.setCaret(e),d},E.getCleanVal=function(){return S.getMasked(!0)},E.getMaskedVal=function(e){return S.getMasked(!1,e)},E.init=function(e){if(e=e||!1,C=C||{},E.clearIfNotMatch=o.jMaskGlobals.clearIfNotMatch,E.byPassKeys=o.jMaskGlobals.byPassKeys,E.translation=o.extend({},o.jMaskGlobals.translation,C.translation),E=o.extend(!0,{},E,C),s=S.getRegexMask(),e)S.events(),S.val(S.getMasked());else{C.placeholder&&d.attr("placeholder",C.placeholder),d.data("mask")&&d.attr("autocomplete","off");for(var t=0,i=!0;t<x.length;t++){var n=E.translation[x.charAt(t)];if(n&&n.recursive){i=!1;break}}i&&d.attr("maxlength",x.length).data("mask-maxlength",!0),S.destroyEvents(),S.events();var a=S.getCaret();S.val(S.getMasked()),S.setCaret(a)}},E.init(!d.is("input"))}o.maskWatchers={};function t(){var e=o(this),t={},i="data-mask-",n=e.attr("data-mask");if(e.attr(i+"reverse")&&(t.reverse=!0),e.attr(i+"clearifnotmatch")&&(t.clearIfNotMatch=!0),"true"===e.attr(i+"selectonfocus")&&(t.selectOnFocus=!0),c(e,n,t))return e.data("mask",new l(this,n,t))}var c=function(e,t,i){i=i||{};var n=o(e).data("mask"),a=JSON.stringify,s=o(e).val()||o(e).text();try{return"function"==typeof t&&(t=t(s)),"object"!=typeof n||a(n.options)!==a(i)||n.mask!==t}catch(e){}};o.fn.mask=function(e,t){t=t||{};function i(){if(c(this,e,t))return o(this).data("mask",new l(this,e,t))}var n=this.selector,a=o.jMaskGlobals,s=a.watchInterval,r=t.watchInputs||a.watchInputs;return o(this).each(i),n&&""!==n&&r&&(clearInterval(o.maskWatchers[n]),o.maskWatchers[n]=setInterval(function(){o(document).find(n).each(i)},s)),this},o.fn.masked=function(e){return this.data("mask").getMaskedVal(e)},o.fn.unmask=function(){return clearInterval(o.maskWatchers[this.selector]),delete o.maskWatchers[this.selector],this.each(function(){var e=o(this).data("mask");e&&e.remove().removeData("mask")})},o.fn.cleanVal=function(){return this.data("mask").getCleanVal()},o.applyDataMask=function(e){((e=e||o.jMaskGlobals.maskElements)instanceof o?e:o(e)).filter(o.jMaskGlobals.dataMaskAttr).each(t)};var e,i,n,a={maskElements:"input,td,span,div",dataMaskAttr:"*[data-mask]",dataMask:!0,watchInterval:300,watchInputs:!0,keyStrokeCompensation:10,useInput:!/Chrome\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent)&&(e="input",n=document.createElement("div"),(i=(e="on"+e)in n)||(n.setAttribute(e,"return;"),i="function"==typeof n[e]),n=null,i),watchDataMask:!1,byPassKeys:[9,16,17,18,36,37,38,39,40,91],translation:{0:{pattern:/\d/},9:{pattern:/\d/,optional:!0},"#":{pattern:/\d/,recursive:!0},A:{pattern:/[a-zA-Z0-9]/},S:{pattern:/[a-zA-Z]/}}};o.jMaskGlobals=o.jMaskGlobals||{},(a=o.jMaskGlobals=o.extend(!0,{},a,o.jMaskGlobals)).dataMask&&o.applyDataMask(),setInterval(function(){o.jMaskGlobals.watchDataMask&&o.applyDataMask()},a.watchInterval)},window.jQuery,window.Zepto),function(S,E,c){var i,T,n,a,r,s,o,l,u,h,e,d,t="mPageScroll2id",A="mPS2id",p={scrollSpeed:1e3,autoScrollSpeed:!0,scrollEasing:"easeInOutQuint",scrollingEasing:"easeOutQuint",pageEndSmoothScroll:!0,layout:"vertical",offset:0,highlightSelector:!1,clickedClass:A+"-clicked",targetClass:A+"-target",highlightClass:A+"-highlight",forceSingleHighlight:!1,keepHighlightUntilNext:!1,highlightByNextTarget:!1,disablePluginBelow:!1,clickEvents:!0,appendHash:!1,onStart:function(){},onComplete:function(){},defaultSelector:!1,live:!0,liveSelector:!1,excludeSelectors:!1},f=0,m={init:function(e){e=S.extend(!0,{},p,e);if(S(c).data(A,e),T=S(c).data(A),!this.selector){var t="__"+A;this.each(function(){var e=S(this);e.hasClass(t)||e.addClass(t)}),this.selector="."+t}T.liveSelector&&(this.selector+=","+T.liveSelector),i=i?i+","+this.selector:this.selector,T.defaultSelector&&("object"==typeof S(i)&&0!==S(i).length||(i=".m_PageScroll2id,a[rel~='m_PageScroll2id'],.page-scroll-to-id,a[rel~='page-scroll-to-id'],._ps2id")),T.clickEvents&&S(c).undelegate("."+A).delegate(i,"click."+A,function(e){if(g._isDisabled.call(null))g._removeClasses.call(null);else{var t=S(this),i=t.attr("href"),n=t.prop("href").baseVal||t.prop("href");T.excludeSelectors&&t.is(T.excludeSelectors)||i&&-1!==i.indexOf("#/")||(g._reset.call(null),h=t.data("ps2id-offset")||0,g._isValid.call(null,i,n)&&g._findTarget.call(null,i)&&(e.preventDefault(),a="selector",r=t,g._setClasses.call(null,!0),g._scrollTo.call(null)))}}),S(E).unbind("."+A).bind("scroll.mPS2id resize."+A,function(){if(g._isDisabled.call(null))g._removeClasses.call(null);else{var a=S("._mPS2id-t");a.each(function(e){var t=S(this),i=t.attr("id"),n=g._findHighlight.call(null,i);g._setClasses.call(null,!1,t,n),e==a.length-1&&g._extendClasses.call(null)})}}),n=!0,g._setup.call(null),g._live.call(null)},scrollTo:function(e,t){if(g._isDisabled.call(null))g._removeClasses.call(null);else if(e&&void 0!==e){g._isInit.call(null);var i={layout:T.layout,offset:T.offset,clicked:!1};t=S.extend(!0,{},i,t);g._reset.call(null),l=t.layout,u=t.offset,e=-1!==e.indexOf("#")?e:"#"+e,g._isValid.call(null,e)&&g._findTarget.call(null,e)&&(a="scrollTo",(r=t.clicked)&&g._setClasses.call(null,!0),g._scrollTo.call(null))}},destroy:function(){S(E).unbind("."+A),S(c).undelegate("."+A).removeData(A),S("._mPS2id-t").removeData(A),g._removeClasses.call(null,!0)}},g={_isDisabled:function(){var e=E,t="inner",i=T.disablePluginBelow instanceof Array?[T.disablePluginBelow[0]||0,T.disablePluginBelow[1]||0]:[T.disablePluginBelow||0,0];return"innerWidth"in E||(t="client",e=c.documentElement||c.body),e[t+"Width"]<=i[0]||e[t+"Height"]<=i[1]},_isValid:function(e,t){if(e){var i=-1!==(t=t||e).indexOf("#/")?t.split("#/")[0]:t.split("#")[0],n=E.location.toString().split("#")[0];return"#"!==e&&-1!==e.indexOf("#")&&(""===i||decodeURIComponent(i)===decodeURIComponent(n))}},_setup:function(){var r=g._highlightSelector(),o=1,l=0;return S(r).each(function(){var e=S(this),t=e.attr("href"),i=e.prop("href").baseVal||e.prop("href");if(g._isValid.call(null,t,i)){if(T.excludeSelectors&&e.is(T.excludeSelectors))return;var n=-1!==t.indexOf("#/")?t.split("#/")[1]:t.split("#")[1],a=-1!==n.indexOf("%")?S(c.getElementById(n)):S("#"+n);if(0<a.length){T.highlightByNextTarget&&a!==l&&(l?l.data(A,{tn:a}):a.data(A,{tn:"0"}),l=a),a.hasClass("_mPS2id-t")||a.addClass("_mPS2id-t"),a.data(A,{i:o}),e.hasClass("_mPS2id-h")||e.addClass("_mPS2id-h");var s=g._findHighlight.call(null,n);g._setClasses.call(null,!1,a,s),f=o,++o==S(r).length&&g._extendClasses.call(null)}}})},_highlightSelector:function(){return T.highlightSelector&&""!==T.highlightSelector?T.highlightSelector:i},_findTarget:function(e){var t=-1!==e.indexOf("#/")?e.split("#/")[1]:e.split("#")[1],i=-1!==t.indexOf("%")?S(c.getElementById(t)):S("#"+t);if(i.length<1||"fixed"===i.css("position")){if("top"!==t)return;i=S("body")}return s=i,l=l||T.layout,u=g._setOffset.call(null),(o=[(i.offset().top-u[0]).toString(),(i.offset().left-u[1]).toString()])[0]=o[0]<0?0:o[0],o[1]=o[1]<0?0:o[1],o},_setOffset:function(){var e,t,i,n;switch(u=u||(T.offset?T.offset:0),h&&(u=h),typeof u){case"object":case"string":0<(t=[(e=[u.y?u.y:u,u.x?u.x:u])[0]instanceof jQuery?e[0]:S(e[0]),e[1]instanceof jQuery?e[1]:S(e[1])])[0].length?(i=t[0].height(),"fixed"===t[0].css("position")&&(i+=t[0][0].offsetTop)):i=!isNaN(parseFloat(e[0]))&&isFinite(e[0])?parseInt(e[0]):0,0<t[1].length?(n=t[1].width(),"fixed"===t[1].css("position")&&(n+=t[1][0].offsetLeft)):n=!isNaN(parseFloat(e[1]))&&isFinite(e[1])?parseInt(e[1]):0;break;case"function":(e=u.call(null))instanceof Array?(i=e[0],n=e[1]):i=n=e;break;default:i=n=parseInt(u)}return[i,n]},_findHighlight:function(e){var t=E.location,i=t.toString().split("#")[0],n=t.pathname;return-1!==i.indexOf("'")&&(i=i.replace("'","\\'")),-1!==n.indexOf("'")&&(n=n.replace("'","\\'")),i=decodeURIComponent(i),n=decodeURIComponent(n),S("._mPS2id-h[href='#"+e+"'],._"+A+"-h[href='"+i+"#"+e+"'],._"+A+"-h[href='"+n+"#"+e+"'],._"+A+"-h[href='#/"+e+"'],._"+A+"-h[href='"+i+"#/"+e+"'],._"+A+"-h[href='"+n+"#/"+e+"']")},_setClasses:function(e,t,i){var n=T.clickedClass,a=T.targetClass,s=T.highlightClass;e&&n&&""!==n?(S("."+n).removeClass(n),r.addClass(n)):t&&a&&""!==a&&i&&s&&""!==s&&(g._currentTarget.call(null,t)?(t.addClass(a),i.addClass(s)):(!T.keepHighlightUntilNext||1<S("."+s).length)&&(t.removeClass(a),i.removeClass(s)))},_extendClasses:function(){var e=T.targetClass,t=T.highlightClass,i=S("."+e),n=S("."+t),a=e+"-first",s=e+"-last",r=t+"-first",o=t+"-last";S("._mPS2id-t").removeClass(a+" "+s),S("._mPS2id-h").removeClass(r+" "+o),T.forceSingleHighlight?T.keepHighlightUntilNext&&1<i.length?(i.slice(0,1).removeClass(e),n.slice(0,1).removeClass(t)):(i.slice(1).removeClass(e),n.slice(1).removeClass(t)):(i.slice(0,1).addClass(a).end().slice(-1).addClass(s),n.slice(0,1).addClass(r).end().slice(-1).addClass(o))},_removeClasses:function(e){S("."+T.clickedClass).removeClass(T.clickedClass),S("."+T.targetClass).removeClass(T.targetClass+" "+T.targetClass+"-first "+T.targetClass+"-last"),S("."+T.highlightClass).removeClass(T.highlightClass+" "+T.highlightClass+"-first "+T.highlightClass+"-last"),e&&(S("._mPS2id-t").removeClass("_mPS2id-t"),S("._mPS2id-h").removeClass("_mPS2id-h"))},_currentTarget:function(e){var t=T["target_"+e.data(A).i],i=e.data("ps2id-target"),n=i&&S(i)[0]?S(i)[0].getBoundingClientRect():e[0].getBoundingClientRect();if(void 0!==t){var a=e.offset().top,s=e.offset().left,r=t.from?t.from+a:a,o=t.to?t.to+a:a,l=t.fromX?t.fromX+s:s,c=t.toX?t.toX+s:s;return n.top>=o&&n.top<=r&&n.left>=c&&n.left<=l}var u=S(E).height(),h=S(E).width(),d=i?S(i).height():e.height(),p=i?S(i).width():e.width(),f=1+d/u,m=f,g=d<u?u/d*f:f,v=1+p/h,y=v,b=p<h?h/p*v:v,w=[n.top<=u/m,n.bottom>=u/g,n.left<=h/y,n.right>=h/b];if(T.highlightByNextTarget){var x=e.data(A).tn;if(x){var C=x[0].getBoundingClientRect();"vertical"===T.layout?w=[n.top<=u/2,C.top>u/2,1,1]:"horizontal"===T.layout&&(w=[1,1,n.left<=h/2,C.left>h/2])}}return w[0]&&w[1]&&w[2]&&w[3]},_scrollTo:function(){d=g._scrollSpeed.call(null),o=T.pageEndSmoothScroll?g._pageEndSmoothScroll.call(null):o;var e=S("html,body"),t=T.autoScrollSpeed?g._autoScrollSpeed.call(null):d,i=e.is(":animated")?T.scrollingEasing:T.scrollEasing,n=S(E).scrollTop(),a=S(E).scrollLeft();switch(l){case"horizontal":a!=o[1]&&(g._callbacks.call(null,"onStart"),e.stop().animate({scrollLeft:o[1]},t,i).promise().then(function(){g._callbacks.call(null,"onComplete")}));break;case"auto":var s;if(n!=o[0]||a!=o[1])if(g._callbacks.call(null,"onStart"),navigator.userAgent.match(/(iPod|iPhone|iPad|Android)/))e.stop().animate({pageYOffset:o[0],pageXOffset:o[1]},{duration:t,easing:i,step:function(e,t){"pageXOffset"==t.prop?s=e:"pageYOffset"==t.prop&&E.scrollTo(s,e)}}).promise().then(function(){g._callbacks.call(null,"onComplete")});else e.stop().animate({scrollTop:o[0],scrollLeft:o[1]},t,i).promise().then(function(){g._callbacks.call(null,"onComplete")});break;default:n!=o[0]&&(g._callbacks.call(null,"onStart"),e.stop().animate({scrollTop:o[0]},t,i).promise().then(function(){g._callbacks.call(null,"onComplete")}))}},_pageEndSmoothScroll:function(){var e=S(c).height(),t=S(c).width(),i=S(E).height(),n=S(E).width();return[e-o[0]<i?e-i:o[0],t-o[1]<n?t-n:o[1]]},_scrollSpeed:function(){var n=T.scrollSpeed;return r&&r.length&&r.add(r.parent()).each(function(){var e=S(this);if(e.attr("class")){var t=e.attr("class").split(" ");for(var i in t)if(String(t[i]).match(/^ps2id-speed-\d+$/)){n=t[i].split("ps2id-speed-")[1];break}}}),parseInt(n)},_autoScrollSpeed:function(){var e=S(E).scrollTop(),t=S(E).scrollLeft(),i=S(c).height(),n=S(c).width(),a=[d+d*Math.floor(Math.abs(o[0]-e)/i*100)/100,d+d*Math.floor(Math.abs(o[1]-t)/n*100)/100];return Math.max.apply(Math,a)},_callbacks:function(e){if(T)switch(this[A]={trigger:a,clicked:r,target:s,scrollTo:{y:o[0],x:o[1]}},e){case"onStart":if(T.appendHash&&E.history&&E.history.pushState&&r&&r.length){var t="#"+r.attr("href").split("#")[1];t!==E.location.hash&&history.pushState("","",t)}T.onStart.call(null,this[A]);break;case"onComplete":T.onComplete.call(null,this[A])}},_reset:function(){l=u=h=!1},_isInit:function(){n||m.init.apply(this)},_live:function(){e=setTimeout(function(){T.live?S(g._highlightSelector()).length!==f&&g._setup.call(null):e&&clearTimeout(e),g._live.call(null)},1e3)},_easing:function(){function t(e){var t=7.5625;return e<1/2.75?t*e*e:e<2/2.75?t*(e-=1.5/2.75)*e+.75:e<2.5/2.75?t*(e-=2.25/2.75)*e+.9375:t*(e-=2.625/2.75)*e+.984375}S.easing.easeInQuad=S.easing.easeInQuad||function(e){return e*e},S.easing.easeOutQuad=S.easing.easeOutQuad||function(e){return 1-(1-e)*(1-e)},S.easing.easeInOutQuad=S.easing.easeInOutQuad||function(e){return e<.5?2*e*e:1-Math.pow(-2*e+2,2)/2},S.easing.easeInCubic=S.easing.easeInCubic||function(e){return e*e*e},S.easing.easeOutCubic=S.easing.easeOutCubic||function(e){return 1-Math.pow(1-e,3)},S.easing.easeInOutCubic=S.easing.easeInOutCubic||function(e){return e<.5?4*e*e*e:1-Math.pow(-2*e+2,3)/2},S.easing.easeInQuart=S.easing.easeInQuart||function(e){return e*e*e*e},S.easing.easeOutQuart=S.easing.easeOutQuart||function(e){return 1-Math.pow(1-e,4)},S.easing.easeInOutQuart=S.easing.easeInOutQuart||function(e){return e<.5?8*e*e*e*e:1-Math.pow(-2*e+2,4)/2},S.easing.easeInQuint=S.easing.easeInQuint||function(e){return e*e*e*e*e},S.easing.easeOutQuint=S.easing.easeOutQuint||function(e){return 1-Math.pow(1-e,5)},S.easing.easeInOutQuint=S.easing.easeInOutQuint||function(e){return e<.5?16*e*e*e*e*e:1-Math.pow(-2*e+2,5)/2},S.easing.easeInExpo=S.easing.easeInExpo||function(e){return 0===e?0:Math.pow(2,10*e-10)},S.easing.easeOutExpo=S.easing.easeOutExpo||function(e){return 1===e?1:1-Math.pow(2,-10*e)},S.easing.easeInOutExpo=S.easing.easeInOutExpo||function(e){return 0===e?0:1===e?1:e<.5?Math.pow(2,20*e-10)/2:(2-Math.pow(2,-20*e+10))/2},S.easing.easeInSine=S.easing.easeInSine||function(e){return 1-Math.cos(e*Math.PI/2)},S.easing.easeOutSine=S.easing.easeOutSine||function(e){return Math.sin(e*Math.PI/2)},S.easing.easeInOutSine=S.easing.easeInOutSine||function(e){return-(Math.cos(Math.PI*e)-1)/2},S.easing.easeInCirc=S.easing.easeInCirc||function(e){return 1-Math.sqrt(1-Math.pow(e,2))},S.easing.easeOutCirc=S.easing.easeOutCirc||function(e){return Math.sqrt(1-Math.pow(e-1,2))},S.easing.easeInOutCirc=S.easing.easeInOutCirc||function(e){return e<.5?(1-Math.sqrt(1-Math.pow(2*e,2)))/2:(Math.sqrt(1-Math.pow(-2*e+2,2))+1)/2},S.easing.easeInElastic=S.easing.easeInElastic||function(e){return 0===e?0:1===e?1:-Math.pow(2,10*e-10)*Math.sin((10*e-10.75)*(2*Math.PI/3))},S.easing.easeOutElastic=S.easing.easeOutElastic||function(e){return 0===e?0:1===e?1:Math.pow(2,-10*e)*Math.sin((10*e-.75)*(2*Math.PI/3))+1},S.easing.easeInOutElastic=S.easing.easeInOutElastic||function(e){return 0===e?0:1===e?1:e<.5?-Math.pow(2,20*e-10)*Math.sin((20*e-11.125)*(2*Math.PI/4.5))/2:Math.pow(2,-20*e+10)*Math.sin((20*e-11.125)*(2*Math.PI/4.5))/2+1},S.easing.easeInBack=S.easing.easeInBack||function(e){return 2.70158*e*e*e-1.70158*e*e},S.easing.easeOutBack=S.easing.easeOutBack||function(e){return 1+2.70158*Math.pow(e-1,3)+1.70158*Math.pow(e-1,2)},S.easing.easeInOutBack=S.easing.easeInOutBack||function(e){return e<.5?Math.pow(2*e,2)*(7.189819*e-2.5949095)/2:(Math.pow(2*e-2,2)*(3.5949095*(2*e-2)+2.5949095)+2)/2},S.easing.easeInBounce=S.easing.easeInBounce||function(e){return 1-t(1-e)},S.easing.easeOutBounce=S.easing.easeOutBounce||t,S.easing.easeInOutBounce=S.easing.easeInOutBounce||function(e){return e<.5?(1-t(1-2*e))/2:(1+t(2*e-1))/2}}};g._easing.call(),S.fn[t]=function(e){return m[e]?m[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void S.error("Method "+e+" does not exist"):m.init.apply(this,arguments)},S[t]=function(e){return m[e]?m[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void S.error("Method "+e+" does not exist"):m.init.apply(this,arguments)},S[t].defaults=p}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
